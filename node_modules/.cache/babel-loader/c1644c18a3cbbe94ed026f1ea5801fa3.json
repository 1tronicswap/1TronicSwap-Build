{"ast":null,"code":"var _jsxFileName = \"D:\\\\new\\\\1TronicSwap-Build\\\\src\\\\views\\\\Farms\\\\components\\\\FarmTable\\\\Multiplier.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { HelpIcon, Skeleton, useTooltip } from 'components/_uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ReferenceElement = styled.div`\n  display: inline-block;\n`;\n_c = ReferenceElement;\nconst MultiplierWrapper = styled.div`\n  color: ${_ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.colors.text;\n}};\n  width: 36px;\n  text-align: right;\n  margin-right: 14px;\n\n  ${_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return theme.mediaQueries.lg;\n}} {\n    text-align: left;\n    margin-right: 0;\n  }\n`;\n_c2 = MultiplierWrapper;\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n`;\n_c3 = Container;\n\nconst Multiplier = _ref3 => {\n  _s();\n\n  let {\n    multiplier\n  } = _ref3;\n  const displayMultiplier = multiplier ? multiplier.toLowerCase() : /*#__PURE__*/_jsxDEV(Skeleton, {\n    width: 30\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 69\n  }, this);\n  const {\n    t\n  } = useTranslation();\n\n  const tooltipContent = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [t('The multiplier represents the amount of e1TRC rewards each farm gets.'), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), t('For example, if a 1x farm was getting 1 e1TRC per block, a 40x farm would be getting 40 e1TRC per block.')]\n  }, void 0, true);\n\n  const {\n    targetRef,\n    tooltip,\n    tooltipVisible\n  } = useTooltip(tooltipContent, {\n    placement: 'top-end',\n    tooltipOffset: [20, 10]\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(MultiplierWrapper, {\n      children: displayMultiplier\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReferenceElement, {\n      ref: targetRef,\n      children: /*#__PURE__*/_jsxDEV(HelpIcon, {\n        color: \"textSubtle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), tooltipVisible && tooltip]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Multiplier, \"GSMeUTDR148KmhQO/xuGuRK/xHM=\", false, function () {\n  return [useTranslation, useTooltip];\n});\n\n_c4 = Multiplier;\nexport default Multiplier;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ReferenceElement\");\n$RefreshReg$(_c2, \"MultiplierWrapper\");\n$RefreshReg$(_c3, \"Container\");\n$RefreshReg$(_c4, \"Multiplier\");","map":{"version":3,"sources":["D:/new/1TronicSwap-Build/src/views/Farms/components/FarmTable/Multiplier.tsx"],"names":["React","styled","HelpIcon","Skeleton","useTooltip","useTranslation","ReferenceElement","div","MultiplierWrapper","theme","colors","text","mediaQueries","lg","Container","Multiplier","multiplier","displayMultiplier","toLowerCase","t","tooltipContent","targetRef","tooltip","tooltipVisible","placement","tooltipOffset"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,EAAmBC,QAAnB,EAA6BC,UAA7B,QAA+C,mBAA/C;AACA,SAASC,cAAT,QAA+B,uBAA/B;;;AAEA,MAAMC,gBAAgB,GAAGL,MAAM,CAACM,GAAI;AACpC;AACA,CAFA;KAAMD,gB;AAQN,MAAME,iBAAiB,GAAGP,MAAM,CAACM,GAAI;AACrC,WAAW;AAAA,MAAC;AAAEE,IAAAA;AAAF,GAAD;AAAA,SAAeA,KAAK,CAACC,MAAN,CAAaC,IAA5B;AAAA,CAAiC;AAC5C;AACA;AACA;AACA;AACA,IAAI;AAAA,MAAC;AAAEF,IAAAA;AAAF,GAAD;AAAA,SAAeA,KAAK,CAACG,YAAN,CAAmBC,EAAlC;AAAA,CAAqC;AACzC;AACA;AACA;AACA,CAVA;MAAML,iB;AAYN,MAAMM,SAAS,GAAGb,MAAM,CAACM,GAAI;AAC7B;AACA;AACA,CAHA;MAAMO,S;;AAKN,MAAMC,UAAoD,GAAG,SAAoB;AAAA;;AAAA,MAAnB;AAAEC,IAAAA;AAAF,GAAmB;AAC/E,QAAMC,iBAAiB,GAAGD,UAAU,GAAGA,UAAU,CAACE,WAAX,EAAH,gBAA8B,QAAC,QAAD;AAAU,IAAA,KAAK,EAAE;AAAjB;AAAA;AAAA;AAAA;AAAA,UAAlE;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAQd,cAAc,EAA5B;;AACA,QAAMe,cAAc,gBAClB;AAAA,eACGD,CAAC,CAAC,uEAAD,CADJ,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA,YAHF,EAIIA,CAAC,CAAC,0GAAD,CAJL;AAAA,kBADF;;AAQA,QAAM;AAAEE,IAAAA,SAAF;AAAaC,IAAAA,OAAb;AAAsBC,IAAAA;AAAtB,MAAyCnB,UAAU,CAACgB,cAAD,EAAiB;AACxEI,IAAAA,SAAS,EAAE,SAD6D;AAExEC,IAAAA,aAAa,EAAE,CAAC,EAAD,EAAK,EAAL;AAFyD,GAAjB,CAAzD;AAKA,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,iBAAD;AAAA,gBAAoBR;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,gBAAD;AAAkB,MAAA,GAAG,EAAEI,SAAvB;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,EAKGE,cAAc,IAAID,OALrB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAzBD;;GAAMP,U;UAEUV,c,EASiCD,U;;;MAX3CW,U;AA2BN,eAAeA,UAAf","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { HelpIcon, Skeleton, useTooltip } from 'components/_uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst ReferenceElement = styled.div`\r\n  display: inline-block;\r\n`\r\n\r\nexport interface MultiplierProps {\r\n  multiplier: string\r\n}\r\n\r\nconst MultiplierWrapper = styled.div`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  width: 36px;\r\n  text-align: right;\r\n  margin-right: 14px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    text-align: left;\r\n    margin-right: 0;\r\n  }\r\n`\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst Multiplier: React.FunctionComponent<MultiplierProps> = ({ multiplier }) => {\r\n  const displayMultiplier = multiplier ? multiplier.toLowerCase() : <Skeleton width={30} />\r\n  const { t } = useTranslation()\r\n  const tooltipContent = (\r\n    <>\r\n      {t('The multiplier represents the amount of e1TRC rewards each farm gets.')}\r\n      <br />\r\n      <br />\r\n      { t('For example, if a 1x farm was getting 1 e1TRC per block, a 40x farm would be getting 40 e1TRC per block.')}\r\n    </>\r\n  )\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, {\r\n    placement: 'top-end',\r\n    tooltipOffset: [20, 10],\r\n  })\r\n\r\n  return (\r\n    <Container>\r\n      <MultiplierWrapper>{displayMultiplier}</MultiplierWrapper>\r\n      <ReferenceElement ref={targetRef}>\r\n        <HelpIcon color=\"textSubtle\" />\r\n      </ReferenceElement>\r\n      {tooltipVisible && tooltip}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Multiplier\r\n"]},"metadata":{},"sourceType":"module"}