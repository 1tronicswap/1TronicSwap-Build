{"ast":null,"code":"var _jsxFileName = \"D:\\\\new\\\\1TronicSwap-Build\\\\src\\\\views\\\\Predictions\\\\components\\\\RoundCard\\\\ExpiredRoundCard.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useWeb3React } from '@web3-react/core';\nimport { Box, BlockIcon, CardBody } from 'components/_uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { BetPosition } from 'state/types';\nimport { useGetBetByEpoch } from 'state/hooks';\nimport { useBlock } from 'state/block/hooks';\nimport { formatBigNumberToFixed } from 'utils/formatBalance';\nimport { getHasRoundFailed, getNetPayoutv2 } from '../../helpers';\nimport { RoundResult } from '../RoundResult';\nimport MultiplierArrow from './MultiplierArrow';\nimport Card from './Card';\nimport CardHeader from './CardHeader';\nimport CollectWinningsOverlay from './CollectWinningsOverlay';\nimport CanceledRoundCard from './CanceledRoundCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledExpiredRoundCard = styled(Card)`\n  opacity: 0.7;\n  transition: opacity 300ms;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n_c = StyledExpiredRoundCard;\n\nconst ExpiredRoundCard = _ref => {\n  _s();\n\n  let {\n    round,\n    betAmount,\n    hasEnteredUp,\n    hasEnteredDown,\n    bullMultiplier,\n    bearMultiplier\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  const {\n    account\n  } = useWeb3React();\n  const {\n    initialBlock\n  } = useBlock();\n  const {\n    epoch,\n    endBlock,\n    lockPrice,\n    closePrice\n  } = round;\n  const betPosition = closePrice > lockPrice ? BetPosition.BULL : BetPosition.BEAR;\n  const ledger = useGetBetByEpoch(account, epoch);\n  const payout = getNetPayoutv2(ledger, round);\n  const formattedPayout = payout.toUnsafeFloat().toFixed(4);\n  const hasRoundFailed = getHasRoundFailed(round, initialBlock);\n\n  if (hasRoundFailed) {\n    return /*#__PURE__*/_jsxDEV(CanceledRoundCard, {\n      round: round\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    position: \"relative\",\n    children: [/*#__PURE__*/_jsxDEV(StyledExpiredRoundCard, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        status: \"expired\",\n        icon: /*#__PURE__*/_jsxDEV(BlockIcon, {\n          mr: \"4px\",\n          width: \"21px\",\n          color: \"textDisabled\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this),\n        title: t('Expired'),\n        blockNumber: endBlock,\n        epoch: round.epoch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        p: \"16px\",\n        style: {\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(MultiplierArrow, {\n          betAmount: betAmount,\n          multiplier: bullMultiplier,\n          isActive: betPosition === BetPosition.BULL,\n          hasEntered: hasEnteredUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RoundResult, {\n          round: round,\n          hasFailed: hasRoundFailed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MultiplierArrow, {\n          betAmount: betAmount,\n          multiplier: bearMultiplier,\n          betPosition: BetPosition.BEAR,\n          isActive: betPosition === BetPosition.BEAR,\n          hasEntered: hasEnteredDown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CollectWinningsOverlay, {\n      epoch: epoch,\n      payout: formattedPayout,\n      betAmount: betAmount ? formatBigNumberToFixed(betAmount, 4) : '0',\n      isBottom: hasEnteredDown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ExpiredRoundCard, \"Ry3nb7sEnB2VP2nrJg6z77QyKVY=\", false, function () {\n  return [useTranslation, useWeb3React, useBlock, useGetBetByEpoch];\n});\n\n_c2 = ExpiredRoundCard;\nexport default ExpiredRoundCard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledExpiredRoundCard\");\n$RefreshReg$(_c2, \"ExpiredRoundCard\");","map":{"version":3,"sources":["D:/new/1TronicSwap-Build/src/views/Predictions/components/RoundCard/ExpiredRoundCard.tsx"],"names":["React","styled","useWeb3React","Box","BlockIcon","CardBody","useTranslation","BetPosition","useGetBetByEpoch","useBlock","formatBigNumberToFixed","getHasRoundFailed","getNetPayoutv2","RoundResult","MultiplierArrow","Card","CardHeader","CollectWinningsOverlay","CanceledRoundCard","StyledExpiredRoundCard","ExpiredRoundCard","round","betAmount","hasEnteredUp","hasEnteredDown","bullMultiplier","bearMultiplier","t","account","initialBlock","epoch","endBlock","lockPrice","closePrice","betPosition","BULL","BEAR","ledger","payout","formattedPayout","toUnsafeFloat","toFixed","hasRoundFailed","position"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Box, BlockIcon, CardBody } from 'components/_uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { NodeRound, BetPosition, NodeLedger } from 'state/types'\r\nimport { useGetBetByEpoch } from 'state/hooks'\r\nimport { useBlock } from 'state/block/hooks'\r\nimport { formatBigNumberToFixed } from 'utils/formatBalance'\r\nimport { getHasRoundFailed, getNetPayoutv2 } from '../../helpers'\r\nimport { RoundResult } from '../RoundResult'\r\nimport MultiplierArrow from './MultiplierArrow'\r\nimport Card from './Card'\r\nimport CardHeader from './CardHeader'\r\nimport CollectWinningsOverlay from './CollectWinningsOverlay'\r\nimport CanceledRoundCard from './CanceledRoundCard'\r\n\r\ninterface ExpiredRoundCardProps {\r\n  round: NodeRound\r\n  betAmount?: NodeLedger['amount']\r\n  hasEnteredUp: boolean\r\n  hasEnteredDown: boolean\r\n  bullMultiplier: string\r\n  bearMultiplier: string\r\n}\r\n\r\nconst StyledExpiredRoundCard = styled(Card)`\r\n  opacity: 0.7;\r\n  transition: opacity 300ms;\r\n\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n`\r\n\r\nconst ExpiredRoundCard: React.FC<ExpiredRoundCardProps> = ({\r\n  round,\r\n  betAmount,\r\n  hasEnteredUp,\r\n  hasEnteredDown,\r\n  bullMultiplier,\r\n  bearMultiplier,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const { initialBlock } = useBlock()\r\n  const { epoch, endBlock, lockPrice, closePrice } = round\r\n\r\n  const betPosition = closePrice > lockPrice ? BetPosition.BULL : BetPosition.BEAR\r\n  const ledger = useGetBetByEpoch(account, epoch)\r\n  const payout = getNetPayoutv2(ledger, round)\r\n  const formattedPayout = payout.toUnsafeFloat().toFixed(4)\r\n  const hasRoundFailed = getHasRoundFailed(round, initialBlock)\r\n\r\n  if (hasRoundFailed) {\r\n    return <CanceledRoundCard round={round} />\r\n  }\r\n\r\n  return (\r\n    <Box position=\"relative\">\r\n      <StyledExpiredRoundCard>\r\n        <CardHeader\r\n          status=\"expired\"\r\n          icon={<BlockIcon mr=\"4px\" width=\"21px\" color=\"textDisabled\" />}\r\n          title={t('Expired')}\r\n          blockNumber={endBlock}\r\n          epoch={round.epoch}\r\n        />\r\n        <CardBody p=\"16px\" style={{ position: 'relative' }}>\r\n          <MultiplierArrow\r\n            betAmount={betAmount}\r\n            multiplier={bullMultiplier}\r\n            isActive={betPosition === BetPosition.BULL}\r\n            hasEntered={hasEnteredUp}\r\n          />\r\n          <RoundResult round={round} hasFailed={hasRoundFailed} />\r\n          <MultiplierArrow\r\n            betAmount={betAmount}\r\n            multiplier={bearMultiplier}\r\n            betPosition={BetPosition.BEAR}\r\n            isActive={betPosition === BetPosition.BEAR}\r\n            hasEntered={hasEnteredDown}\r\n          />\r\n        </CardBody>\r\n      </StyledExpiredRoundCard>\r\n      <CollectWinningsOverlay\r\n        epoch={epoch}\r\n        payout={formattedPayout}\r\n        betAmount={betAmount ? formatBigNumberToFixed(betAmount, 4) : '0'}\r\n        isBottom={hasEnteredDown}\r\n      />\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default ExpiredRoundCard\r\n"]},"metadata":{},"sourceType":"module"}