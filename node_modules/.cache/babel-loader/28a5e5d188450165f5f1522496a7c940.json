{"ast":null,"code":"var _jsxFileName = \"D:\\\\new\\\\1TronicSwap-Build\\\\src\\\\views\\\\Home\\\\components\\\\CakeHarvestBalance.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport BigNumber from 'bignumber.js';\nimport { usePriceCakeBusd } from 'state/farms/hooks';\nimport styled from 'styled-components';\nimport { DEFAULT_TOKEN_DECIMAL } from 'config';\nimport UnlockButton from 'components/UnlockButton';\nimport CardValue from './CardValue';\nimport CardBusdValue from './CardBusdValue';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Block = styled.div`\n  margin-top: 5px;\n  display: flex;\n`;\n_c = Block;\n\nconst CakeHarvestBalance = _ref => {\n  _s();\n\n  let {\n    farmsWithBalance\n  } = _ref;\n  const {\n    account\n  } = useWeb3React();\n  const earningsSum = farmsWithBalance.reduce((accum, earning) => {\n    const earningNumber = new BigNumber(earning.balance);\n\n    if (earningNumber.eq(0)) {\n      return accum;\n    }\n\n    return accum + earningNumber.div(DEFAULT_TOKEN_DECIMAL).toNumber();\n  }, 0);\n  const cakePriceBusd = usePriceCakeBusd();\n  const earningsBusd = new BigNumber(earningsSum).multipliedBy(cakePriceBusd).toNumber();\n\n  if (!account) {\n    return /*#__PURE__*/_jsxDEV(Block, {\n      children: /*#__PURE__*/_jsxDEV(UnlockButton, {\n        width: \"100%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Block, {\n      children: [/*#__PURE__*/_jsxDEV(CardValue, {\n        value: earningsSum,\n        lineHeight: \"32px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), cakePriceBusd.gt(0) && /*#__PURE__*/_jsxDEV(CardBusdValue, {\n        value: earningsBusd,\n        color: \"textSubtle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(CakeHarvestBalance, \"oGe9h3F6rLD8+9IzC//FHMymqGA=\", false, function () {\n  return [useWeb3React, usePriceCakeBusd];\n});\n\n_c2 = CakeHarvestBalance;\nexport default CakeHarvestBalance;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Block\");\n$RefreshReg$(_c2, \"CakeHarvestBalance\");","map":{"version":3,"sources":["D:/new/1TronicSwap-Build/src/views/Home/components/CakeHarvestBalance.tsx"],"names":["React","useWeb3React","BigNumber","usePriceCakeBusd","styled","DEFAULT_TOKEN_DECIMAL","UnlockButton","CardValue","CardBusdValue","Block","div","CakeHarvestBalance","farmsWithBalance","account","earningsSum","reduce","accum","earning","earningNumber","balance","eq","toNumber","cakePriceBusd","earningsBusd","multipliedBy","gt"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAOC,SAAP,MAAsB,cAAtB;AAEA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,qBAAT,QAAsC,QAAtC;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,KAAK,GAAGL,MAAM,CAACM,GAAI;AACzB;AACA;AACA,CAHA;KAAMD,K;;AASN,MAAME,kBAAqD,GAAG,QAA0B;AAAA;;AAAA,MAAzB;AAAEC,IAAAA;AAAF,GAAyB;AACtF,QAAM;AAAEC,IAAAA;AAAF,MAAcZ,YAAY,EAAhC;AACA,QAAMa,WAAW,GAAGF,gBAAgB,CAACG,MAAjB,CAAwB,CAACC,KAAD,EAAQC,OAAR,KAAoB;AAC9D,UAAMC,aAAa,GAAG,IAAIhB,SAAJ,CAAce,OAAO,CAACE,OAAtB,CAAtB;;AACA,QAAID,aAAa,CAACE,EAAd,CAAiB,CAAjB,CAAJ,EAAyB;AACvB,aAAOJ,KAAP;AACD;;AACD,WAAOA,KAAK,GAAGE,aAAa,CAACR,GAAd,CAAkBL,qBAAlB,EAAyCgB,QAAzC,EAAf;AACD,GANmB,EAMjB,CANiB,CAApB;AAOA,QAAMC,aAAa,GAAGnB,gBAAgB,EAAtC;AACA,QAAMoB,YAAY,GAAG,IAAIrB,SAAJ,CAAcY,WAAd,EAA2BU,YAA3B,CAAwCF,aAAxC,EAAuDD,QAAvD,EAArB;;AAEA,MAAI,CAACR,OAAL,EAAc;AACZ,wBACE,QAAC,KAAD;AAAA,6BACE,QAAC,YAAD;AAAc,QAAA,KAAK,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GAND,MAMO;AACL,wBACE,QAAC,KAAD;AAAA,8BACE,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEC,WAAlB;AAA+B,QAAA,UAAU,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,cADF,EAEGQ,aAAa,CAACG,EAAd,CAAiB,CAAjB,kBAAuB,QAAC,aAAD;AAAe,QAAA,KAAK,EAAEF,YAAtB;AAAoC,QAAA,KAAK,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,cAF1B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;AACF,CA1BD;;GAAMZ,kB;UACgBV,Y,EAQEE,gB;;;MATlBQ,kB;AA4BN,eAAeA,kBAAf","sourcesContent":["import React from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport BigNumber from 'bignumber.js'\r\nimport { FarmWithBalance } from 'views/Home/hooks/useFarmsWithBalance'\r\nimport { usePriceCakeBusd } from 'state/farms/hooks'\r\nimport styled from 'styled-components'\r\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport CardValue from './CardValue'\r\nimport CardBusdValue from './CardBusdValue'\r\n\r\nconst Block = styled.div`\r\n  margin-top: 5px;\r\n  display: flex;\r\n`\r\n\r\ninterface CakeHarvestBalanceProps {\r\n  farmsWithBalance: FarmWithBalance[]\r\n}\r\n\r\nconst CakeHarvestBalance: React.FC<CakeHarvestBalanceProps> = ({ farmsWithBalance }) => {\r\n  const { account } = useWeb3React()\r\n  const earningsSum = farmsWithBalance.reduce((accum, earning) => {\r\n    const earningNumber = new BigNumber(earning.balance)\r\n    if (earningNumber.eq(0)) {\r\n      return accum\r\n    }\r\n    return accum + earningNumber.div(DEFAULT_TOKEN_DECIMAL).toNumber()\r\n  }, 0)\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n  const earningsBusd = new BigNumber(earningsSum).multipliedBy(cakePriceBusd).toNumber()\r\n\r\n  if (!account) {\r\n    return (\r\n      <Block>\r\n        <UnlockButton width=\"100%\" />\r\n      </Block>\r\n    )\r\n  } else {\r\n    return (\r\n      <Block>\r\n        <CardValue value={earningsSum} lineHeight=\"32px\" />\r\n        {cakePriceBusd.gt(0) && <CardBusdValue value={earningsBusd} color=\"textSubtle\"/>}\r\n      </Block>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CakeHarvestBalance\r\n"]},"metadata":{},"sourceType":"module"}