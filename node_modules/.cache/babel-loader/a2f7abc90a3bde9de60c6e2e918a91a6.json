{"ast":null,"code":"var _jsxFileName = \"D:\\\\new\\\\1TronicSwap-Build\\\\src\\\\components\\\\_uikit\\\\widgets\\\\Menu\\\\components\\\\MenuLink.tsx\";\nimport React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MenuLink = _ref => {\n  let {\n    href,\n    ...otherProps\n  } = _ref;\n  const isHttpLink = href === null || href === void 0 ? void 0 : href.startsWith(\"http\"); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  const Tag = isHttpLink ? \"a\" : NavLink;\n  const props = isHttpLink ? {\n    href\n  } : {\n    to: href\n  };\n  return /*#__PURE__*/_jsxDEV(Tag, {\n    role: \"button\",\n    ...props,\n    ...otherProps\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 10\n  }, this);\n};\n\n_c = MenuLink;\nexport default MenuLink;\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuLink\");","map":{"version":3,"sources":["D:/new/1TronicSwap-Build/src/components/_uikit/widgets/Menu/components/MenuLink.tsx"],"names":["React","NavLink","MenuLink","href","otherProps","isHttpLink","startsWith","Tag","props","to"],"mappings":";AAAA,OAAOA,KAAP,MAA4C,OAA5C;AACA,SAASC,OAAT,QAAwB,kBAAxB;;;AAEA,MAAMC,QAA2D,GAAG,QAA6B;AAAA,MAA5B;AAAEC,IAAAA,IAAF;AAAQ,OAAGC;AAAX,GAA4B;AAC/F,QAAMC,UAAU,GAAGF,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEG,UAAN,CAAiB,MAAjB,CAAnB,CAD+F,CAG/F;;AACA,QAAMC,GAAQ,GAAGF,UAAU,GAAG,GAAH,GAASJ,OAApC;AACA,QAAMO,KAAK,GAAGH,UAAU,GAAG;AAAEF,IAAAA;AAAF,GAAH,GAAc;AAAEM,IAAAA,EAAE,EAAEN;AAAN,GAAtC;AACA,sBAAO,QAAC,GAAD;AAAK,IAAA,IAAI,EAAC,QAAV;AAAA,OAAuBK,KAAvB;AAAA,OAAkCJ;AAAlC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAPD;;KAAMF,Q;AASN,eAAeA,QAAf","sourcesContent":["import React, { AnchorHTMLAttributes } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst MenuLink: React.FC<AnchorHTMLAttributes<HTMLAnchorElement>> = ({ href, ...otherProps }) => {\r\n  const isHttpLink = href?.startsWith(\"http\");\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  const Tag: any = isHttpLink ? \"a\" : NavLink;\r\n  const props = isHttpLink ? { href } : { to: href };\r\n  return <Tag role=\"button\" {...props} {...otherProps} />;\r\n};\r\n\r\nexport default MenuLink;\r\n"]},"metadata":{},"sourceType":"module"}