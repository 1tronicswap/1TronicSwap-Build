{"ast":null,"code":"var _jsxFileName = \"D:\\\\new\\\\1TronicSwap-Build\\\\src\\\\components\\\\_uikit\\\\components\\\\Dropdown\\\\Dropdown.tsx\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getLeft = _ref => {\n  let {\n    position\n  } = _ref;\n\n  if (position === \"top-right\") {\n    return \"100%\";\n  }\n\n  return \"50%\";\n};\n\nconst getBottom = _ref2 => {\n  let {\n    position\n  } = _ref2;\n\n  if (position === \"top\" || position === \"top-right\") {\n    return \"100%\";\n  }\n\n  return \"auto\";\n};\n\nconst DropdownContent = styled.div`\n  width: max-content;\n  display: none;\n  flex-direction: column;\n  position: absolute;\n  transform: translate(-50%, 0);\n  left: ${getLeft};\n  bottom: ${getBottom};\n  background-color: ${_ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return theme.nav.background;\n}};\n  box-shadow: ${_ref4 => {\n  let {\n    theme\n  } = _ref4;\n  return theme.shadows.level1;\n}};\n  padding: 16px;\n  max-height: 400px;\n  overflow-y: auto;\n  z-index: ${_ref5 => {\n  let {\n    theme\n  } = _ref5;\n  return theme.zIndices.dropdown;\n}};\n  border-radius: ${_ref6 => {\n  let {\n    theme\n  } = _ref6;\n  return theme.radii.small;\n}};\n`;\n_c = DropdownContent;\nconst Container = styled.div`\n  position: relative;\n  &:hover ${DropdownContent}, &:focus-within ${DropdownContent} {\n    display: flex;\n  }\n`;\n_c2 = Container;\n\nconst Dropdown = _ref7 => {\n  let {\n    target,\n    position = \"bottom\",\n    children\n  } = _ref7;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [target, /*#__PURE__*/_jsxDEV(DropdownContent, {\n      position: position,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = Dropdown;\nDropdown.defaultProps = {\n  position: \"bottom\"\n};\nexport default Dropdown;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"DropdownContent\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Dropdown\");","map":{"version":3,"sources":["D:/new/1TronicSwap-Build/src/components/_uikit/components/Dropdown/Dropdown.tsx"],"names":["React","styled","getLeft","position","getBottom","DropdownContent","div","theme","nav","background","shadows","level1","zIndices","dropdown","radii","small","Container","Dropdown","target","children","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAGA,MAAMC,OAAO,GAAG,QAAiC;AAAA,MAAhC;AAAEC,IAAAA;AAAF,GAAgC;;AAC/C,MAAIA,QAAQ,KAAK,WAAjB,EAA8B;AAC5B,WAAO,MAAP;AACD;;AACD,SAAO,KAAP;AACD,CALD;;AAOA,MAAMC,SAAS,GAAG,SAAiC;AAAA,MAAhC;AAAED,IAAAA;AAAF,GAAgC;;AACjD,MAAIA,QAAQ,KAAK,KAAb,IAAsBA,QAAQ,KAAK,WAAvC,EAAoD;AAClD,WAAO,MAAP;AACD;;AACD,SAAO,MAAP;AACD,CALD;;AAOA,MAAME,eAAe,GAAGJ,MAAM,CAACK,GAA4B;AAC3D;AACA;AACA;AACA;AACA;AACA,UAAUJ,OAAQ;AAClB,YAAYE,SAAU;AACtB,sBAAsB;AAAA,MAAC;AAAEG,IAAAA;AAAF,GAAD;AAAA,SAAeA,KAAK,CAACC,GAAN,CAAUC,UAAzB;AAAA,CAAoC;AAC1D,gBAAgB;AAAA,MAAC;AAAEF,IAAAA;AAAF,GAAD;AAAA,SAAeA,KAAK,CAACG,OAAN,CAAcC,MAA7B;AAAA,CAAoC;AACpD;AACA;AACA;AACA,aAAa;AAAA,MAAC;AAAEJ,IAAAA;AAAF,GAAD;AAAA,SAAeA,KAAK,CAACK,QAAN,CAAeC,QAA9B;AAAA,CAAuC;AACpD,mBAAmB;AAAA,MAAC;AAAEN,IAAAA;AAAF,GAAD;AAAA,SAAeA,KAAK,CAACO,KAAN,CAAYC,KAA3B;AAAA,CAAiC;AACpD,CAfA;KAAMV,e;AAiBN,MAAMW,SAAS,GAAGf,MAAM,CAACK,GAAI;AAC7B;AACA,YAAYD,eAAgB,oBAAmBA,eAAgB;AAC/D;AACA;AACA,CALA;MAAMW,S;;AAON,MAAMC,QAAiC,GAAG,SAA+C;AAAA,MAA9C;AAAEC,IAAAA,MAAF;AAAUf,IAAAA,QAAQ,GAAG,QAArB;AAA+BgB,IAAAA;AAA/B,GAA8C;AACvF,sBACE,QAAC,SAAD;AAAA,eACGD,MADH,eAEE,QAAC,eAAD;AAAiB,MAAA,QAAQ,EAAEf,QAA3B;AAAA,gBAAsCgB;AAAtC;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAPD;;MAAMF,Q;AAQNA,QAAQ,CAACG,YAAT,GAAwB;AACtBjB,EAAAA,QAAQ,EAAE;AADY,CAAxB;AAIA,eAAec,QAAf","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { DropdownProps, PositionProps, Position } from \"./types\";\r\n\r\nconst getLeft = ({ position }: PositionProps) => {\r\n  if (position === \"top-right\") {\r\n    return \"100%\";\r\n  }\r\n  return \"50%\";\r\n};\r\n\r\nconst getBottom = ({ position }: PositionProps) => {\r\n  if (position === \"top\" || position === \"top-right\") {\r\n    return \"100%\";\r\n  }\r\n  return \"auto\";\r\n};\r\n\r\nconst DropdownContent = styled.div<{ position: Position }>`\r\n  width: max-content;\r\n  display: none;\r\n  flex-direction: column;\r\n  position: absolute;\r\n  transform: translate(-50%, 0);\r\n  left: ${getLeft};\r\n  bottom: ${getBottom};\r\n  background-color: ${({ theme }) => theme.nav.background};\r\n  box-shadow: ${({ theme }) => theme.shadows.level1};\r\n  padding: 16px;\r\n  max-height: 400px;\r\n  overflow-y: auto;\r\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\r\n  border-radius: ${({ theme }) => theme.radii.small};\r\n`;\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  &:hover ${DropdownContent}, &:focus-within ${DropdownContent} {\r\n    display: flex;\r\n  }\r\n`;\r\n\r\nconst Dropdown: React.FC<DropdownProps> = ({ target, position = \"bottom\", children }) => {\r\n  return (\r\n    <Container>\r\n      {target}\r\n      <DropdownContent position={position}>{children}</DropdownContent>\r\n    </Container>\r\n  );\r\n};\r\nDropdown.defaultProps = {\r\n  position: \"bottom\",\r\n};\r\n\r\nexport default Dropdown;\r\n"]},"metadata":{},"sourceType":"module"}