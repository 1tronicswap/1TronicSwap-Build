{"ast":null,"code":"var _jsxFileName = \"D:\\\\new\\\\1TronicSwap-Build\\\\src\\\\views\\\\Predictions\\\\components\\\\RoundCard\\\\EnteredTag.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { CheckmarkCircleIcon, Tag, useTooltip } from 'components/_uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { formatBnbv2 } from '../../helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledEnteredTag = styled(Tag).attrs({\n  variant: 'secondary',\n  startIcon: /*#__PURE__*/_jsxDEV(CheckmarkCircleIcon, {\n    width: \"18px\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 14\n  }, this)\n})`\n  font-weight: bold;\n  text-transform: uppercase;\n`;\n_c = StyledEnteredTag;\n\nconst EnteredTag = _ref => {\n  _s();\n\n  let {\n    amount\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  const {\n    targetRef,\n    tooltipVisible,\n    tooltip\n  } = useTooltip( /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      whiteSpace: 'nowrap'\n    },\n    children: `${formatBnbv2(amount)} BNB`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this), {\n    placement: 'bottom'\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      ref: targetRef,\n      children: [/*#__PURE__*/_jsxDEV(StyledEnteredTag, {\n        children: t('Entered')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), ' ', tooltipVisible && tooltip]\n  }, void 0, true);\n};\n\n_s(EnteredTag, \"dT7/5xuQD+c5fIpoRLpehDsm8gY=\", false, function () {\n  return [useTranslation, useTooltip];\n});\n\n_c2 = EnteredTag;\nexport default EnteredTag;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledEnteredTag\");\n$RefreshReg$(_c2, \"EnteredTag\");","map":{"version":3,"sources":["D:/new/1TronicSwap-Build/src/views/Predictions/components/RoundCard/EnteredTag.tsx"],"names":["React","styled","CheckmarkCircleIcon","Tag","useTooltip","useTranslation","formatBnbv2","StyledEnteredTag","attrs","variant","startIcon","EnteredTag","amount","t","targetRef","tooltipVisible","tooltip","whiteSpace","placement"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,mBAAT,EAA8BC,GAA9B,EAAmCC,UAAnC,QAAqD,mBAArD;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,WAAT,QAA4B,eAA5B;;;AAMA,MAAMC,gBAAgB,GAAGN,MAAM,CAACE,GAAD,CAAN,CAAYK,KAAZ,CAAkB;AACzCC,EAAAA,OAAO,EAAE,WADgC;AAEzCC,EAAAA,SAAS,eAAE,QAAC,mBAAD;AAAqB,IAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA;AAF8B,CAAlB,CAGtB;AACH;AACA;AACA,CANA;KAAMH,gB;;AAQN,MAAMI,UAAqC,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAAEC,IAAAA;AAAF,GAAe;AAC5D,QAAM;AAAEC,IAAAA;AAAF,MAAQR,cAAc,EAA5B;AACA,QAAM;AAAES,IAAAA,SAAF;AAAaC,IAAAA,cAAb;AAA6BC,IAAAA;AAA7B,MAAyCZ,UAAU,eACvD;AAAK,IAAA,KAAK,EAAE;AAAEa,MAAAA,UAAU,EAAE;AAAd,KAAZ;AAAA,cAAwC,GAAEX,WAAW,CAACM,MAAD,CAAS;AAA9D;AAAA;AAAA;AAAA;AAAA,UADuD,EAEvD;AAAEM,IAAAA,SAAS,EAAE;AAAb,GAFuD,CAAzD;AAKA,sBACE;AAAA,4BACE;AAAM,MAAA,GAAG,EAAEJ,SAAX;AAAA,8BACE,QAAC,gBAAD;AAAA,kBAAmBD,CAAC,CAAC,SAAD;AAApB;AAAA;AAAA;AAAA;AAAA,cADF,EACsD,GADtD;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAGU,GAHV,EAIGE,cAAc,IAAIC,OAJrB;AAAA,kBADF;AAQD,CAfD;;GAAML,U;UACUN,c,EACiCD,U;;;MAF3CO,U;AAiBN,eAAeA,UAAf","sourcesContent":["import React from 'react'\r\nimport { ethers } from 'ethers'\r\nimport styled from 'styled-components'\r\nimport { CheckmarkCircleIcon, Tag, useTooltip } from 'components/_uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { formatBnbv2 } from '../../helpers'\r\n\r\ninterface EnteredTagProps {\r\n  amount?: ethers.BigNumber\r\n}\r\n\r\nconst StyledEnteredTag = styled(Tag).attrs({\r\n  variant: 'secondary',\r\n  startIcon: <CheckmarkCircleIcon width=\"18px\" />,\r\n})`\r\n  font-weight: bold;\r\n  text-transform: uppercase;\r\n`\r\n\r\nconst EnteredTag: React.FC<EnteredTagProps> = ({ amount }) => {\r\n  const { t } = useTranslation()\r\n  const { targetRef, tooltipVisible, tooltip } = useTooltip(\r\n    <div style={{ whiteSpace: 'nowrap' }}>{`${formatBnbv2(amount)} BNB`}</div>,\r\n    { placement: 'bottom' },\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <span ref={targetRef}>\r\n        <StyledEnteredTag>{t('Entered')}</StyledEnteredTag>{' '}\r\n      </span>{' '}\r\n      {tooltipVisible && tooltip}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EnteredTag\r\n"]},"metadata":{},"sourceType":"module"}