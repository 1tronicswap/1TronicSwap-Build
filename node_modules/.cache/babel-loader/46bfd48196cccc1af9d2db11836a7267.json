{"ast":null,"code":"import styled from \"styled-components\";\nimport Text from \"../Text/Text\";\nimport saberHeadMain from \"./svg/saberhead-main.svg\";\nimport saberHeadMax from \"./svg/saberhead-max.svg\";\nimport saberGrip from \"./svg/saber-grip.svg\";\n\nconst getCursorStyle = _ref => {\n  let {\n    disabled = false\n  } = _ref;\n  return disabled ? \"not-allowed\" : \"cursor\";\n};\n\nconst getBaseThumbStyles = _ref2 => {\n  let {\n    isMax,\n    disabled\n  } = _ref2;\n  return `\n  -webkit-appearance: none;\n  background-image: url(${isMax ? saberHeadMax : saberHeadMain});\n  background-size: cover;\n  background-color: transparent;\n  border: 0;\n  cursor: ${getCursorStyle};\n  width: 32px;\n  height: 32px;\n  filter: ${disabled ? \"grayscale(100%)\" : \"none\"};\n  transform: translate(-8px, 0px);\n  transition: 200ms transform;\n\n  &:hover {\n    transform: ${disabled ? \"scale(1) translate(-8px, 0px);\" : \"scale(1.5) translate(-4px, 0px);\"};\n  }\n`;\n};\n\nexport const SliderLabelContainer = styled.div`\n  bottom: 0;\n  position: absolute;\n  left: 14px;\n  width: calc(100% - 30px);\n`;\nexport const SliderLabel = styled(Text)`\n  bottom: 0;\n  font-size: 12px;\n  left: ${_ref3 => {\n  let {\n    progress\n  } = _ref3;\n  return progress;\n}};\n  position: absolute;\n  text-align: center;\n  min-width: 24px; // Slider thumb size\n`;\nexport const SaberGrip = styled.div`\n  background: url(${saberGrip}) no-repeat;\n  height: 75px;\n  filter: ${_ref4 => {\n  let {\n    disabled\n  } = _ref4;\n  return disabled ? \"grayscale(100%)\" : \"none\";\n}};\n  position: absolute;\n  width: 100px;\n`;\nexport const SaberSlider = styled.div`\n  position: absolute;\n  left: 100px;\n  width: calc(100% - 80px);\n`;\nexport const StyledInput = styled.input`\n  cursor: ${getCursorStyle};\n  height: 32px;\n  position: relative;\n\n  ::-webkit-slider-thumb {\n    ${getBaseThumbStyles}\n  }\n\n  ::-moz-range-thumb {\n    ${getBaseThumbStyles}\n  }\n\n  ::-ms-thumb {\n    ${getBaseThumbStyles}\n  }\n`;\nexport const BarBackground = styled.div`\n  background-color: ${_ref5 => {\n  let {\n    theme,\n    disabled\n  } = _ref5;\n  return theme.colors[disabled ? \"textDisabled\" : \"inputSecondary\"];\n}};\n  height: 2px;\n  position: absolute;\n  top: 18px;\n  width: 100%;\n`;\nexport const BarProgress = styled.div`\n  background-color: ${_ref6 => {\n  let {\n    theme\n  } = _ref6;\n  return theme.colors.secondary;\n}};\n  filter: ${_ref7 => {\n  let {\n    disabled\n  } = _ref7;\n  return disabled ? \"grayscale(100%)\" : \"none\";\n}};\n  height: 20px;\n  position: absolute;\n  top: 8px;\n  border-radius: 0 8px 8px 0;\n  box-shadow: inset 0px 0px 10px ${_ref8 => {\n  let {\n    isMax\n  } = _ref8;\n  return isMax ? `5px` : `2px`;\n}} ${_ref9 => {\n  let {\n    theme\n  } = _ref9;\n  return theme.colors.primary;\n}},\n                    0px 0px 20px ${_ref10 => {\n  let {\n    theme\n  } = _ref10;\n  return theme.colors.secondary;\n}};\n`;","map":{"version":3,"sources":["D:/new/1TronicSwap-Build/src/components/_uikit/components/Slider/styles.ts"],"names":["styled","Text","getCursorStyle","disabled","getBaseThumbStyles","isMax","saberHeadMax","saberHeadMain","SliderLabelContainer","div","SliderLabel","progress","SaberGrip","saberGrip","SaberSlider","StyledInput","input","BarBackground","theme","colors","BarProgress","secondary","primary"],"mappings":"AACA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,cAAjB;;;;;AAiBA,MAAMC,cAAc,GAAG,QAAwC;AAAA,MAAvC;AAAEC,IAAAA,QAAQ,GAAG;AAAb,GAAuC;AAC7D,SAAOA,QAAQ,GAAG,aAAH,GAAmB,QAAlC;AACD,CAFD;;AAIA,MAAMC,kBAAkB,GAAG;AAAA,MAAC;AAAEC,IAAAA,KAAF;AAASF,IAAAA;AAAT,GAAD;AAAA,SAA4C;AACvE;AACA,0BAA0BE,KAAK,GAAGC,YAAH,GAAkBC,aAAc;AAC/D;AACA;AACA;AACA,YAAYL,cAAe;AAC3B;AACA;AACA,YAAYC,QAAQ,GAAG,iBAAH,GAAuB,MAAO;AAClD;AACA;AACA;AACA;AACA,iBAAiBA,QAAQ,GAAG,gCAAH,GAAsC,kCAAmC;AAClG;AACA,CAhB2B;AAAA,CAA3B;;AAkBA,OAAO,MAAMK,oBAAoB,GAAGR,MAAM,CAACS,GAAI;AAC/C;AACA;AACA;AACA;AACA,CALO;AAOP,OAAO,MAAMC,WAAW,GAAGV,MAAM,CAACC,IAAD,CAAyB;AAC1D;AACA;AACA,UAAU;AAAA,MAAC;AAAEU,IAAAA;AAAF,GAAD;AAAA,SAAkBA,QAAlB;AAAA,CAA2B;AACrC;AACA;AACA;AACA,CAPO;AASP,OAAO,MAAMC,SAAS,GAAGZ,MAAM,CAACS,GAAkB;AAClD,oBAAoBI,SAAU;AAC9B;AACA,YAAY;AAAA,MAAC;AAAEV,IAAAA;AAAF,GAAD;AAAA,SAAmBA,QAAQ,GAAG,iBAAH,GAAuB,MAAlD;AAAA,CAA0D;AACtE;AACA;AACA,CANO;AAQP,OAAO,MAAMW,WAAW,GAAGd,MAAM,CAACS,GAAI;AACtC;AACA;AACA;AACA,CAJO;AAMP,OAAO,MAAMM,WAAW,GAAGf,MAAM,CAACgB,KAAwB;AAC1D,YAAYd,cAAe;AAC3B;AACA;AACA;AACA;AACA,MAAME,kBAAmB;AACzB;AACA;AACA;AACA,MAAMA,kBAAmB;AACzB;AACA;AACA;AACA,MAAMA,kBAAmB;AACzB;AACA,CAhBO;AAkBP,OAAO,MAAMa,aAAa,GAAGjB,MAAM,CAACS,GAAkB;AACtD,sBAAsB;AAAA,MAAC;AAAES,IAAAA,KAAF;AAASf,IAAAA;AAAT,GAAD;AAAA,SAAyBe,KAAK,CAACC,MAAN,CAAahB,QAAQ,GAAG,cAAH,GAAoB,gBAAzC,CAAzB;AAAA,CAAoF;AAC1G;AACA;AACA;AACA;AACA,CANO;AAQP,OAAO,MAAMiB,WAAW,GAAGpB,MAAM,CAACS,GAAsB;AACxD,sBAAsB;AAAA,MAAC;AAAES,IAAAA;AAAF,GAAD;AAAA,SAAeA,KAAK,CAACC,MAAN,CAAaE,SAA5B;AAAA,CAAsC;AAC5D,YAAY;AAAA,MAAC;AAAElB,IAAAA;AAAF,GAAD;AAAA,SAAmBA,QAAQ,GAAG,iBAAH,GAAuB,MAAlD;AAAA,CAA0D;AACtE;AACA;AACA;AACA;AACA,mCAAmC;AAAA,MAAC;AAAEE,IAAAA;AAAF,GAAD;AAAA,SAAeA,KAAK,GAAI,KAAJ,GAAY,KAAhC;AAAA,CAAqC,IAAG;AAAA,MAAC;AAAEa,IAAAA;AAAF,GAAD;AAAA,SAAeA,KAAK,CAACC,MAAN,CAAaG,OAA5B;AAAA,CAAoC;AAC/G,mCAAmC;AAAA,MAAC;AAAEJ,IAAAA;AAAF,GAAD;AAAA,SAAeA,KAAK,CAACC,MAAN,CAAaE,SAA5B;AAAA,CAAsC;AACzE,CATO","sourcesContent":["import { InputHTMLAttributes } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Text from \"../Text/Text\";\r\nimport saberHeadMain from \"./svg/saberhead-main.svg\";\r\nimport saberHeadMax from \"./svg/saberhead-max.svg\";\r\nimport saberGrip from \"./svg/saber-grip.svg\";\r\n\r\ninterface SliderLabelProps {\r\n  progress: string;\r\n}\r\n\r\ninterface StyledInputProps extends InputHTMLAttributes<HTMLInputElement> {\r\n  isMax: boolean;\r\n}\r\n\r\ninterface DisabledProp {\r\n  disabled?: boolean;\r\n}\r\n\r\nconst getCursorStyle = ({ disabled = false }: DisabledProp) => {\r\n  return disabled ? \"not-allowed\" : \"cursor\";\r\n};\r\n\r\nconst getBaseThumbStyles = ({ isMax, disabled }: StyledInputProps) => `\r\n  -webkit-appearance: none;\r\n  background-image: url(${isMax ? saberHeadMax : saberHeadMain});\r\n  background-size: cover;\r\n  background-color: transparent;\r\n  border: 0;\r\n  cursor: ${getCursorStyle};\r\n  width: 32px;\r\n  height: 32px;\r\n  filter: ${disabled ? \"grayscale(100%)\" : \"none\"};\r\n  transform: translate(-8px, 0px);\r\n  transition: 200ms transform;\r\n\r\n  &:hover {\r\n    transform: ${disabled ? \"scale(1) translate(-8px, 0px);\" : \"scale(1.5) translate(-4px, 0px);\"};\r\n  }\r\n`;\r\n\r\nexport const SliderLabelContainer = styled.div`\r\n  bottom: 0;\r\n  position: absolute;\r\n  left: 14px;\r\n  width: calc(100% - 30px);\r\n`;\r\n\r\nexport const SliderLabel = styled(Text)<SliderLabelProps>`\r\n  bottom: 0;\r\n  font-size: 12px;\r\n  left: ${({ progress }) => progress};\r\n  position: absolute;\r\n  text-align: center;\r\n  min-width: 24px; // Slider thumb size\r\n`;\r\n\r\nexport const SaberGrip = styled.div<DisabledProp>`\r\n  background: url(${saberGrip}) no-repeat;\r\n  height: 75px;\r\n  filter: ${({ disabled }) => (disabled ? \"grayscale(100%)\" : \"none\")};\r\n  position: absolute;\r\n  width: 100px;\r\n`;\r\n\r\nexport const SaberSlider = styled.div`\r\n  position: absolute;\r\n  left: 100px;\r\n  width: calc(100% - 80px);\r\n`;\r\n\r\nexport const StyledInput = styled.input<StyledInputProps>`\r\n  cursor: ${getCursorStyle};\r\n  height: 32px;\r\n  position: relative;\r\n\r\n  ::-webkit-slider-thumb {\r\n    ${getBaseThumbStyles}\r\n  }\r\n\r\n  ::-moz-range-thumb {\r\n    ${getBaseThumbStyles}\r\n  }\r\n\r\n  ::-ms-thumb {\r\n    ${getBaseThumbStyles}\r\n  }\r\n`;\r\n\r\nexport const BarBackground = styled.div<DisabledProp>`\r\n  background-color: ${({ theme, disabled }) => theme.colors[disabled ? \"textDisabled\" : \"inputSecondary\"]};\r\n  height: 2px;\r\n  position: absolute;\r\n  top: 18px;\r\n  width: 100%;\r\n`;\r\n\r\nexport const BarProgress = styled.div<StyledInputProps>`\r\n  background-color: ${({ theme }) => theme.colors.secondary};\r\n  filter: ${({ disabled }) => (disabled ? \"grayscale(100%)\" : \"none\")};\r\n  height: 20px;\r\n  position: absolute;\r\n  top: 8px;\r\n  border-radius: 0 8px 8px 0;\r\n  box-shadow: inset 0px 0px 10px ${({ isMax }) => isMax ? `5px` : `2px`} ${({ theme }) => theme.colors.primary},\r\n                    0px 0px 20px ${({ theme }) => theme.colors.secondary};\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}