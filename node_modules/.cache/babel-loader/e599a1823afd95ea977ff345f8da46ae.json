{"ast":null,"code":"var _jsxFileName = \"D:\\\\new\\\\1TronicSwap-Build\\\\src\\\\components\\\\_uikit\\\\widgets\\\\Menu\\\\components\\\\ThemeSwitcher.tsx\";\nimport React from \"react\";\nimport { Toggle } from \"components/_uikit\";\nimport Text from \"../../../components/Text/Text\";\nimport Flex from \"../../../components/Box/Flex\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ThemeSwitcher = _ref => {\n  let {\n    isDark,\n    toggleTheme\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    justifyContent: \"space-between\",\n    width: \"100%\",\n    mb: \"10px\",\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      color: \"textSubtle\",\n      mx: \"4px\",\n      children: \"Theme\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Toggle, {\n      checked: !isDark,\n      scale: \"md\",\n      text: isDark ? \"Dark\" : \"Light\",\n      onChange: () => {\n        toggleTheme(!isDark); // if (isDark) {\n        //   // toggleTheme(!isDark)\n        // } else {\n        //   // toggleTheme(isDark)\n        // }\n      },\n      forceTheme: \"dark\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }, this);\n};\n\n_c = ThemeSwitcher;\nexport default _c2 = /*#__PURE__*/React.memo(ThemeSwitcher, (prev, next) => prev.isDark === next.isDark);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ThemeSwitcher\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/new/1TronicSwap-Build/src/components/_uikit/widgets/Menu/components/ThemeSwitcher.tsx"],"names":["React","Toggle","Text","Flex","ThemeSwitcher","isDark","toggleTheme","memo","prev","next"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,IAAP,MAAiB,+BAAjB;AACA,OAAOC,IAAP,MAAiB,8BAAjB;;;AAOA,MAAMC,aAA8B,GAAG;AAAA,MAAC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAD;AAAA,sBACrC,QAAC,IAAD;AAAM,IAAA,cAAc,EAAC,eAArB;AAAqC,IAAA,KAAK,EAAC,MAA3C;AAAkD,IAAA,EAAE,EAAC,MAArD;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC,YAAZ;AAAyB,MAAA,EAAE,EAAC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,MAAD;AACE,MAAA,OAAO,EAAE,CAACD,MADZ;AAEE,MAAA,KAAK,EAAC,IAFR;AAGE,MAAA,IAAI,EAAEA,MAAM,GAAG,MAAH,GAAY,OAH1B;AAIE,MAAA,QAAQ,EAAE,MAAM;AACdC,QAAAA,WAAW,CAAC,CAACD,MAAF,CAAX,CADc,CAEd;AACA;AACA;AACA;AACA;AACD,OAXH;AAYE,MAAA,UAAU,EAAC;AAZb;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADqC;AAAA,CAAvC;;KAAMD,a;AAsBN,kCAAeJ,KAAK,CAACO,IAAN,CAAWH,aAAX,EAA0B,CAACI,IAAD,EAAOC,IAAP,KAAgBD,IAAI,CAACH,MAAL,KAAgBI,IAAI,CAACJ,MAA/D,CAAf","sourcesContent":["import React from \"react\";\r\nimport { Toggle } from \"components/_uikit\";\r\nimport Text from \"../../../components/Text/Text\";\r\nimport Flex from \"../../../components/Box/Flex\";\r\n\r\ninterface Props {\r\n  isDark: boolean;\r\n  toggleTheme: (isDark: boolean) => void;\r\n}\r\n\r\nconst ThemeSwitcher: React.FC<Props> = ({ isDark, toggleTheme }) => (\r\n  <Flex justifyContent=\"space-between\" width=\"100%\" mb=\"10px\">    \r\n    <Text color=\"textSubtle\" mx=\"4px\">\r\n      Theme\r\n    </Text>\r\n    <Toggle\r\n      checked={!isDark}\r\n      scale=\"md\"\r\n      text={isDark ? \"Dark\" : \"Light\"}\r\n      onChange={() => {\r\n        toggleTheme(!isDark)\r\n        // if (isDark) {\r\n        //   // toggleTheme(!isDark)\r\n        // } else {\r\n        //   // toggleTheme(isDark)\r\n        // }\r\n      }}\r\n      forceTheme=\"dark\"\r\n    />\r\n  </Flex>\r\n);\r\n\r\nexport default React.memo(ThemeSwitcher, (prev, next) => prev.isDark === next.isDark);\r\n"]},"metadata":{},"sourceType":"module"}