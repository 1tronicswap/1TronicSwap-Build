{"ast":null,"code":"import styled from \"styled-components\";\nimport { space, layout, variant } from \"styled-system\";\nimport { scaleVariants, styleVariants } from \"./theme\";\n\nconst getDisabledStyles = _ref => {\n  let {\n    $isLoading,\n    theme\n  } = _ref;\n\n  if ($isLoading === true) {\n    return `\n      &:disabled,\n      &.pancake-button--disabled {\n        cursor: not-allowed;\n      }\n    `;\n  }\n\n  return `\n    &:disabled,\n    &.pancake-button--disabled {\n      background-color: ${theme.colors.backgroundDisabled};\n      border-color: ${theme.colors.backgroundDisabled};\n      box-shadow: none;\n      color: ${theme.colors.textDisabled};\n      cursor: not-allowed;\n    }\n  `;\n};\n/**\r\n * This is to get around an issue where if you use a Link component\r\n * React will throw a invalid DOM attribute error\r\n * @see https://github.com/styled-components/styled-components/issues/135\r\n */\n\n\nconst getOpacity = _ref2 => {\n  let {\n    $isLoading = false\n  } = _ref2;\n  return $isLoading ? \".5\" : \"1\";\n};\n\nconst getIsBlock = _ref3 => {\n  let {\n    $isBlock = false\n  } = _ref3;\n  return $isBlock ? \"flex\" : \"inline-flex\";\n};\n\nconst getFlexStyles = _ref4 => {\n  let {\n    $isBlock\n  } = _ref4;\n  return $isBlock ? `flex-direction: column ;` : ``;\n};\n\nconst StyledButton = styled.button`\n  align-items: center;\n  border: 0;\n  border-radius: 8px;\n  cursor: pointer;\n  display: ${getIsBlock};\n  ${getFlexStyles}\n  font-family: inherit;\n  font-size: 16px;\n  font-weight: 600;\n  justify-content: center;\n  letter-spacing: 0.03em;\n  line-height: 1;\n  opacity: ${getOpacity};\n  outline: 0;\n  transition: background-color 0.2s, opacity 0.2s;\n\n  &:hover:not(:disabled):not(.pancake-button--disabled):not(.pancake-button--disabled):not(:active) {\n    opacity: 1;\n  }\n\n  &:active:not(:disabled):not(.pancake-button--disabled):not(.pancake-button--disabled) {\n    opacity: 0.85;\n    transform: translateY(1px);\n    box-shadow: none;\n  }\n\n  ${getDisabledStyles}\n  ${variant({\n  prop: \"scale\",\n  variants: scaleVariants\n})}\n  ${variant({\n  variants: styleVariants\n})}\n  ${layout}\n  ${space}\n`;\nexport default StyledButton;","map":{"version":3,"sources":["D:/new/1TronicSwap-Build/src/components/_uikit/components/Button/StyledButton.tsx"],"names":["styled","space","layout","variant","scaleVariants","styleVariants","getDisabledStyles","$isLoading","theme","colors","backgroundDisabled","textDisabled","getOpacity","getIsBlock","$isBlock","getFlexStyles","StyledButton","button","prop","variants"],"mappings":"AAAA,OAAOA,MAAP,MAAqC,mBAArC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,OAAxB,QAAuC,eAAvC;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,SAA7C;;AAYA,MAAMC,iBAAiB,GAAG,QAAiD;AAAA,MAAhD;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GAAgD;;AACzE,MAAID,UAAU,KAAK,IAAnB,EAAyB;AACvB,WAAQ;AACZ;AACA;AACA;AACA;AACA,KALI;AAMD;;AAED,SAAQ;AACV;AACA;AACA,0BAA0BC,KAAK,CAACC,MAAN,CAAaC,kBAAmB;AAC1D,sBAAsBF,KAAK,CAACC,MAAN,CAAaC,kBAAmB;AACtD;AACA,eAAeF,KAAK,CAACC,MAAN,CAAaE,YAAa;AACzC;AACA;AACA,GATE;AAUD,CApBD;AAsBA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,UAAU,GAAG,SAAkD;AAAA,MAAjD;AAAEL,IAAAA,UAAU,GAAG;AAAf,GAAiD;AACnE,SAAOA,UAAU,GAAG,IAAH,GAAU,GAA3B;AACD,CAFD;;AAIA,MAAMM,UAAU,GAAG,SAAgD;AAAA,MAA/C;AAAEC,IAAAA,QAAQ,GAAG;AAAb,GAA+C;AACjE,SAAOA,QAAQ,GAAG,MAAH,GAAY,aAA3B;AACD,CAFD;;AAIA,MAAMC,aAAa,GAAG,SAAwC;AAAA,MAAvC;AAAED,IAAAA;AAAF,GAAuC;AAC5D,SAAOA,QAAQ,GAAI,0BAAJ,GAAiC,EAAhD;AACD,CAFD;;AAIA,MAAME,YAAY,GAAGhB,MAAM,CAACiB,MAAwB;AACpD;AACA;AACA;AACA;AACA,aAAaJ,UAAW;AACxB,IAAIE,aAAc;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,aAAaH,UAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIN,iBAAkB;AACtB,IAAIH,OAAO,CAAC;AACRe,EAAAA,IAAI,EAAE,OADE;AAERC,EAAAA,QAAQ,EAAEf;AAFF,CAAD,CAGN;AACL,IAAID,OAAO,CAAC;AACRgB,EAAAA,QAAQ,EAAEd;AADF,CAAD,CAEN;AACL,IAAIH,MAAO;AACX,IAAID,KAAM;AACV,CArCA;AAuCA,eAAee,YAAf","sourcesContent":["import styled, { DefaultTheme } from \"styled-components\";\r\nimport { space, layout, variant } from \"styled-system\";\r\nimport { scaleVariants, styleVariants } from \"./theme\";\r\nimport { BaseButtonProps } from \"./types\";\r\n\r\ninterface ThemedButtonProps extends BaseButtonProps {\r\n  theme: DefaultTheme;\r\n}\r\n\r\ninterface TransientButtonProps extends ThemedButtonProps {\r\n  $isLoading?: boolean;\r\n  $isBlock?: boolean;\r\n}\r\n\r\nconst getDisabledStyles = ({ $isLoading, theme }: TransientButtonProps) => {\r\n  if ($isLoading === true) {\r\n    return `\r\n      &:disabled,\r\n      &.pancake-button--disabled {\r\n        cursor: not-allowed;\r\n      }\r\n    `;\r\n  }\r\n\r\n  return `\r\n    &:disabled,\r\n    &.pancake-button--disabled {\r\n      background-color: ${theme.colors.backgroundDisabled};\r\n      border-color: ${theme.colors.backgroundDisabled};\r\n      box-shadow: none;\r\n      color: ${theme.colors.textDisabled};\r\n      cursor: not-allowed;\r\n    }\r\n  `;\r\n};\r\n\r\n/**\r\n * This is to get around an issue where if you use a Link component\r\n * React will throw a invalid DOM attribute error\r\n * @see https://github.com/styled-components/styled-components/issues/135\r\n */\r\n\r\nconst getOpacity = ({ $isLoading = false }: TransientButtonProps) => {\r\n  return $isLoading ? \".5\" : \"1\";\r\n};\r\n\r\nconst getIsBlock = ({ $isBlock = false }: TransientButtonProps) => {\r\n  return $isBlock ? \"flex\" : \"inline-flex\";\r\n};\r\n\r\nconst getFlexStyles = ({ $isBlock }: TransientButtonProps) => {\r\n  return $isBlock ? `flex-direction: column ;` : ``;\r\n}\r\n\r\nconst StyledButton = styled.button<BaseButtonProps>`\r\n  align-items: center;\r\n  border: 0;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  display: ${getIsBlock};\r\n  ${getFlexStyles}\r\n  font-family: inherit;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  justify-content: center;\r\n  letter-spacing: 0.03em;\r\n  line-height: 1;\r\n  opacity: ${getOpacity};\r\n  outline: 0;\r\n  transition: background-color 0.2s, opacity 0.2s;\r\n\r\n  &:hover:not(:disabled):not(.pancake-button--disabled):not(.pancake-button--disabled):not(:active) {\r\n    opacity: 1;\r\n  }\r\n\r\n  &:active:not(:disabled):not(.pancake-button--disabled):not(.pancake-button--disabled) {\r\n    opacity: 0.85;\r\n    transform: translateY(1px);\r\n    box-shadow: none;\r\n  }\r\n\r\n  ${getDisabledStyles}\r\n  ${variant({\r\n    prop: \"scale\",\r\n    variants: scaleVariants,\r\n  })}\r\n  ${variant({\r\n    variants: styleVariants,\r\n  })}\r\n  ${layout}\r\n  ${space}\r\n`;\r\n\r\nexport default StyledButton;\r\n"]},"metadata":{},"sourceType":"module"}