{"ast":null,"code":"import styled from \"styled-components\";\nimport { space } from \"styled-system\";\n\n/**\r\n * Priority: Warning --> Success --> Active\r\n */\nconst getBoxShadow = _ref => {\n  let {\n    isActive,\n    isSuccess,\n    isWarning,\n    theme\n  } = _ref;\n\n  if (isWarning) {\n    return theme.card.boxShadowWarning;\n  }\n\n  if (isSuccess) {\n    return theme.card.boxShadowSuccess;\n  }\n\n  if (isActive) {\n    return theme.card.boxShadowActive;\n  }\n\n  return theme.card.boxShadow;\n};\n\nconst StyledCard = styled.div`\n  // background-color: ${_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return theme.card.background;\n}};\n  border: 2px solid ${_ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return theme.card.background;\n}};\n  border: ${_ref4 => {\n  let {\n    theme,\n    borderLess\n  } = _ref4;\n  return borderLess ? \"transparent\" : theme.card.boxShadow;\n}};\n  border-radius: ${_ref5 => {\n  let {\n    theme\n  } = _ref5;\n  return theme.radii.card;\n}};\n  box-shadow: ${getBoxShadow};\n  color: ${_ref6 => {\n  let {\n    theme,\n    isDisabled\n  } = _ref6;\n  return theme.colors[isDisabled ? \"textDisabled\" : \"text\"];\n}};\n  overflow: hidden;\n  position: relative;\n\n  ${space}\n`;\nStyledCard.defaultProps = {\n  isActive: false,\n  isSuccess: false,\n  isWarning: false,\n  isDisabled: false,\n  borderLess: false\n};\nexport default StyledCard;","map":{"version":3,"sources":["D:/new/1TronicSwap-Build/src/components/_uikit/components/Card/StyledCard.tsx"],"names":["styled","space","getBoxShadow","isActive","isSuccess","isWarning","theme","card","boxShadowWarning","boxShadowSuccess","boxShadowActive","boxShadow","StyledCard","div","background","borderLess","radii","isDisabled","colors","defaultProps"],"mappings":"AAAA,OAAOA,MAAP,MAAqC,mBAArC;AACA,SAASC,KAAT,QAAsB,eAAtB;;AAOA;AACA;AACA;AACA,MAAMC,YAAY,GAAG,QAAgE;AAAA,MAA/D;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA,SAAvB;AAAkCC,IAAAA;AAAlC,GAA+D;;AACnF,MAAID,SAAJ,EAAe;AACb,WAAOC,KAAK,CAACC,IAAN,CAAWC,gBAAlB;AACD;;AAED,MAAIJ,SAAJ,EAAe;AACb,WAAOE,KAAK,CAACC,IAAN,CAAWE,gBAAlB;AACD;;AAED,MAAIN,QAAJ,EAAc;AACZ,WAAOG,KAAK,CAACC,IAAN,CAAWG,eAAlB;AACD;;AAED,SAAOJ,KAAK,CAACC,IAAN,CAAWI,SAAlB;AACD,CAdD;;AAgBA,MAAMC,UAAU,GAAGZ,MAAM,CAACa,GAAqB;AAC/C,yBAAyB;AAAA,MAAC;AAAEP,IAAAA;AAAF,GAAD;AAAA,SAAeA,KAAK,CAACC,IAAN,CAAWO,UAA1B;AAAA,CAAqC;AAC9D,sBAAsB;AAAA,MAAC;AAAER,IAAAA;AAAF,GAAD;AAAA,SAAeA,KAAK,CAACC,IAAN,CAAWO,UAA1B;AAAA,CAAqC;AAC3D,YAAY;AAAA,MAAC;AAAER,IAAAA,KAAF;AAASS,IAAAA;AAAT,GAAD;AAAA,SAA2BA,UAAU,GAAI,aAAJ,GAAoBT,KAAK,CAACC,IAAN,CAAWI,SAApE;AAAA,CAA8E;AAC1F,mBAAmB;AAAA,MAAC;AAAEL,IAAAA;AAAF,GAAD;AAAA,SAAeA,KAAK,CAACU,KAAN,CAAYT,IAA3B;AAAA,CAAgC;AACnD,gBAAgBL,YAAa;AAC7B,WAAW;AAAA,MAAC;AAAEI,IAAAA,KAAF;AAASW,IAAAA;AAAT,GAAD;AAAA,SAA2BX,KAAK,CAACY,MAAN,CAAaD,UAAU,GAAG,cAAH,GAAoB,MAA3C,CAA3B;AAAA,CAA8E;AACzF;AACA;AACA;AACA,IAAIhB,KAAM;AACV,CAXA;AAaAW,UAAU,CAACO,YAAX,GAA0B;AACxBhB,EAAAA,QAAQ,EAAE,KADc;AAExBC,EAAAA,SAAS,EAAE,KAFa;AAGxBC,EAAAA,SAAS,EAAE,KAHa;AAIxBY,EAAAA,UAAU,EAAE,KAJY;AAKxBF,EAAAA,UAAU,EAAE;AALY,CAA1B;AAQA,eAAeH,UAAf","sourcesContent":["import styled, { DefaultTheme } from \"styled-components\";\r\nimport { space } from \"styled-system\";\r\nimport { CardProps } from \"./types\";\r\n\r\ninterface StyledCardProps extends CardProps {\r\n  theme: DefaultTheme;\r\n}\r\n\r\n/**\r\n * Priority: Warning --> Success --> Active\r\n */\r\nconst getBoxShadow = ({ isActive, isSuccess, isWarning, theme }: StyledCardProps) => {\r\n  if (isWarning) {\r\n    return theme.card.boxShadowWarning;\r\n  }\r\n\r\n  if (isSuccess) {\r\n    return theme.card.boxShadowSuccess;\r\n  }\r\n\r\n  if (isActive) {\r\n    return theme.card.boxShadowActive;\r\n  }\r\n\r\n  return theme.card.boxShadow;\r\n};\r\n\r\nconst StyledCard = styled.div<StyledCardProps>`\r\n  // background-color: ${({ theme }) => theme.card.background};\r\n  border: 2px solid ${({ theme }) => theme.card.background};\r\n  border: ${({ theme, borderLess }) => borderLess ?  \"transparent\" : theme.card.boxShadow};\r\n  border-radius: ${({ theme }) => theme.radii.card};\r\n  box-shadow: ${getBoxShadow};\r\n  color: ${({ theme, isDisabled }) => theme.colors[isDisabled ? \"textDisabled\" : \"text\"]};\r\n  overflow: hidden;\r\n  position: relative;\r\n\r\n  ${space}\r\n`;\r\n\r\nStyledCard.defaultProps = {\r\n  isActive: false,\r\n  isSuccess: false,\r\n  isWarning: false,\r\n  isDisabled: false,\r\n  borderLess: false,\r\n};\r\n\r\nexport default StyledCard;\r\n"]},"metadata":{},"sourceType":"module"}