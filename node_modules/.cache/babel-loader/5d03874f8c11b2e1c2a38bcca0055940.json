{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\n\nconst useKonamiCheatCode = matchedCodeHandler => {\n  _s();\n\n  useEffect(() => {\n    const pattern = [\"ArrowUp\", \"ArrowUp\", \"ArrowDown\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\", \"ArrowLeft\", \"ArrowRight\"];\n    let currentIndex = 0;\n\n    const onKeyUpHandler = event => {\n      const {\n        key\n      } = event; // is key in correct order otherwise reset\n\n      if (key !== pattern[currentIndex]) {\n        currentIndex = 0;\n        return;\n      }\n\n      currentIndex += 1;\n\n      if (pattern.length === currentIndex) {\n        currentIndex = 0;\n        matchedCodeHandler();\n      }\n    };\n\n    document.addEventListener(\"keyup\", onKeyUpHandler);\n    return () => document.removeEventListener(\"keyup\", onKeyUpHandler);\n  }, [matchedCodeHandler]);\n};\n\n_s(useKonamiCheatCode, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\nexport default useKonamiCheatCode;","map":{"version":3,"sources":["D:/new/1TronicSwap-Build/src/components/_uikit/hooks/useKonamiCheatCode.ts"],"names":["useEffect","useKonamiCheatCode","matchedCodeHandler","pattern","currentIndex","onKeyUpHandler","event","key","length","document","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;;AAEA,MAAMC,kBAAkB,GAAIC,kBAAD,IAA0C;AAAA;;AACnEF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMG,OAAO,GAAG,CACd,SADc,EAEd,SAFc,EAGd,WAHc,EAId,WAJc,EAKd,WALc,EAMd,YANc,EAOd,WAPc,EAQd,YARc,CAAhB;AAWA,QAAIC,YAAY,GAAG,CAAnB;;AAEA,UAAMC,cAAc,GAAIC,KAAD,IAA0B;AAC/C,YAAM;AAAEC,QAAAA;AAAF,UAAUD,KAAhB,CAD+C,CAE/C;;AACA,UAAIC,GAAG,KAAKJ,OAAO,CAACC,YAAD,CAAnB,EAAmC;AACjCA,QAAAA,YAAY,GAAG,CAAf;AACA;AACD;;AACDA,MAAAA,YAAY,IAAI,CAAhB;;AACA,UAAID,OAAO,CAACK,MAAR,KAAmBJ,YAAvB,EAAqC;AACnCA,QAAAA,YAAY,GAAG,CAAf;AACAF,QAAAA,kBAAkB;AACnB;AACF,KAZD;;AAcAO,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCL,cAAnC;AACA,WAAO,MAAMI,QAAQ,CAACE,mBAAT,CAA6B,OAA7B,EAAsCN,cAAtC,CAAb;AACD,GA9BQ,EA8BN,CAACH,kBAAD,CA9BM,CAAT;AA+BD,CAhCD;;GAAMD,kB;;AAkCN,eAAeA,kBAAf","sourcesContent":["import { useEffect } from \"react\";\r\n\r\nconst useKonamiCheatCode = (matchedCodeHandler: () => void): void => {\r\n  useEffect(() => {\r\n    const pattern = [\r\n      \"ArrowUp\",\r\n      \"ArrowUp\",\r\n      \"ArrowDown\",\r\n      \"ArrowDown\",\r\n      \"ArrowLeft\",\r\n      \"ArrowRight\",\r\n      \"ArrowLeft\",\r\n      \"ArrowRight\",\r\n    ];\r\n\r\n    let currentIndex = 0;\r\n\r\n    const onKeyUpHandler = (event: KeyboardEvent) => {\r\n      const { key } = event;\r\n      // is key in correct order otherwise reset\r\n      if (key !== pattern[currentIndex]) {\r\n        currentIndex = 0;\r\n        return;\r\n      }\r\n      currentIndex += 1;\r\n      if (pattern.length === currentIndex) {\r\n        currentIndex = 0;\r\n        matchedCodeHandler();\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"keyup\", onKeyUpHandler);\r\n    return () => document.removeEventListener(\"keyup\", onKeyUpHandler);\r\n  }, [matchedCodeHandler]);\r\n};\r\n\r\nexport default useKonamiCheatCode;\r\n"]},"metadata":{},"sourceType":"module"}