{"ast":null,"code":"var _jsxFileName = \"D:\\\\new\\\\1TronicSwap-Build\\\\src\\\\views\\\\RemoveLiquidity\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useMemo, useState } from 'react';\nimport styled from 'styled-components';\nimport { splitSignature } from '@ethersproject/bytes';\nimport { currencyEquals, ETHER, Percent, WETH } from 'utils/@sdk';\nimport { Button, Text, AddIcon, ArrowDownIcon, CardBody, Slider, Box, Flex, useModal } from 'components/_uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column';\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal';\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel';\nimport { MinimalPositionCard } from '../../components/PositionCard';\nimport { AppHeader, AppBody } from '../../components/App';\nimport { RowBetween, RowFixed } from '../../components/Layout/Row';\nimport UnlockButton from '../../components/UnlockButton';\nimport { LightGreyCard } from '../../components/Card';\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../../components/Logo';\nimport { ROUTER_ADDRESS } from '../../config/constants';\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React';\nimport { useCurrency } from '../../hooks/Tokens';\nimport { usePairContract } from '../../hooks/useContract';\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline';\nimport { useTransactionAdder } from '../../state/transactions/hooks';\nimport StyledInternalLink from '../../components/Links';\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils';\nimport { currencyId } from '../../utils/currencyId';\nimport useDebouncedChangeHandler from '../../hooks/useDebouncedChangeHandler';\nimport { wrappedCurrency } from '../../utils/wrappedCurrency';\nimport { useApproveCallback, ApprovalState } from '../../hooks/useApproveCallback';\nimport Dots from '../../components/Loader/Dots';\nimport { useBurnActionHandlers, useDerivedBurnInfo, useBurnState } from '../../state/burn/hooks';\nimport { Field } from '../../state/burn/actions';\nimport { useUserSlippageTolerance } from '../../state/user/hooks';\nimport Page from '../Page';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BorderCard = styled.div`\n  border: solid 1px ${_ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.colors.cardBorder;\n}};\n  border-radius: 8px;;\n  padding: 16px;\n`;\n_c = BorderCard;\nexport default function RemoveLiquidity(_ref2) {\n  _s();\n\n  var _useCurrency, _useCurrency2, _parsedAmounts$Field$, _parsedAmounts$Field$2, _parsedAmounts$Field$3, _parsedAmounts$Field$4, _parsedAmounts$Field$5, _parsedAmounts$Field$6, _parsedAmounts$Field$7, _pair$liquidityToken, _parsedAmounts$Field$13, _parsedAmounts$Field$14, _currencyA$symbol2, _parsedAmounts$Field$15, _parsedAmounts$Field$16, _currencyB$symbol2, _currencyA$symbol3, _currencyB$symbol3;\n\n  let {\n    history,\n    match: {\n      params: {\n        currencyIdA,\n        currencyIdB\n      }\n    }\n  } = _ref2;\n  const [currencyA, currencyB] = [(_useCurrency = useCurrency(currencyIdA)) !== null && _useCurrency !== void 0 ? _useCurrency : undefined, (_useCurrency2 = useCurrency(currencyIdB)) !== null && _useCurrency2 !== void 0 ? _useCurrency2 : undefined];\n  const {\n    account,\n    chainId,\n    library\n  } = useActiveWeb3React();\n  const [tokenA, tokenB] = useMemo(() => [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)], [currencyA, currencyB, chainId]);\n  const {\n    t\n  } = useTranslation(); // burn state\n\n  const {\n    independentField,\n    typedValue\n  } = useBurnState();\n  const {\n    pair,\n    parsedAmounts,\n    error\n  } = useDerivedBurnInfo(currencyA !== null && currencyA !== void 0 ? currencyA : undefined, currencyB !== null && currencyB !== void 0 ? currencyB : undefined);\n  const {\n    onUserInput: _onUserInput\n  } = useBurnActionHandlers();\n  const isValid = !error; // modal and loading\n\n  const [showDetailed, setShowDetailed] = useState(false);\n  const [attemptingTxn, setAttemptingTxn] = useState(false); // clicked confirm\n  // txn values\n\n  const [txHash, setTxHash] = useState('');\n  const deadline = useTransactionDeadline();\n  const [allowedSlippage] = useUserSlippageTolerance();\n  const formattedAmounts = {\n    [Field.LIQUIDITY_PERCENT]: parsedAmounts[Field.LIQUIDITY_PERCENT].equalTo('0') ? '0' : parsedAmounts[Field.LIQUIDITY_PERCENT].lessThan(new Percent('1', '100')) ? '<1' : parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0),\n    [Field.LIQUIDITY]: independentField === Field.LIQUIDITY ? typedValue : (_parsedAmounts$Field$ = (_parsedAmounts$Field$2 = parsedAmounts[Field.LIQUIDITY]) === null || _parsedAmounts$Field$2 === void 0 ? void 0 : _parsedAmounts$Field$2.toSignificant(6)) !== null && _parsedAmounts$Field$ !== void 0 ? _parsedAmounts$Field$ : '',\n    [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? typedValue : (_parsedAmounts$Field$3 = (_parsedAmounts$Field$4 = parsedAmounts[Field.CURRENCY_A]) === null || _parsedAmounts$Field$4 === void 0 ? void 0 : _parsedAmounts$Field$4.toSignificant(6)) !== null && _parsedAmounts$Field$3 !== void 0 ? _parsedAmounts$Field$3 : '',\n    [Field.CURRENCY_B]: independentField === Field.CURRENCY_B ? typedValue : (_parsedAmounts$Field$5 = (_parsedAmounts$Field$6 = parsedAmounts[Field.CURRENCY_B]) === null || _parsedAmounts$Field$6 === void 0 ? void 0 : _parsedAmounts$Field$6.toSignificant(6)) !== null && _parsedAmounts$Field$5 !== void 0 ? _parsedAmounts$Field$5 : ''\n  };\n  const atMaxAmount = (_parsedAmounts$Field$7 = parsedAmounts[Field.LIQUIDITY_PERCENT]) === null || _parsedAmounts$Field$7 === void 0 ? void 0 : _parsedAmounts$Field$7.equalTo(new Percent('1')); // pair contract\n\n  const pairContract = usePairContract(pair === null || pair === void 0 ? void 0 : (_pair$liquidityToken = pair.liquidityToken) === null || _pair$liquidityToken === void 0 ? void 0 : _pair$liquidityToken.address); // allowance handling\n\n  const [signatureData, setSignatureData] = useState(null);\n  const [approval, approveCallback] = useApproveCallback(parsedAmounts[Field.LIQUIDITY], ROUTER_ADDRESS);\n\n  async function onAttemptToApprove() {\n    if (!pairContract || !pair || !library || !deadline) throw new Error('missing dependencies');\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY];\n    if (!liquidityAmount) throw new Error('missing liquidity amount'); // try to gather a signature for permission\n\n    const nonce = await pairContract.nonces(account);\n    const EIP712Domain = [{\n      name: 'name',\n      type: 'string'\n    }, {\n      name: 'version',\n      type: 'string'\n    }, {\n      name: 'chainId',\n      type: 'uint256'\n    }, {\n      name: 'verifyingContract',\n      type: 'address'\n    }];\n    const domain = {\n      name: 'OneTronic LPs',\n      version: '1',\n      chainId,\n      verifyingContract: pair.liquidityToken.address\n    };\n    const Permit = [{\n      name: 'owner',\n      type: 'address'\n    }, {\n      name: 'spender',\n      type: 'address'\n    }, {\n      name: 'value',\n      type: 'uint256'\n    }, {\n      name: 'nonce',\n      type: 'uint256'\n    }, {\n      name: 'deadline',\n      type: 'uint256'\n    }];\n    const message = {\n      owner: account,\n      spender: ROUTER_ADDRESS,\n      value: liquidityAmount.raw.toString(),\n      nonce: nonce.toHexString(),\n      deadline: deadline.toNumber()\n    };\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain,\n        Permit\n      },\n      domain,\n      primaryType: 'Permit',\n      message\n    });\n    library.send('eth_signTypedData_v4', [account, data]).then(splitSignature).then(signature => {\n      setSignatureData({\n        v: signature.v,\n        r: signature.r,\n        s: signature.s,\n        deadline: deadline.toNumber()\n      });\n    }).catch(err => {\n      // for all errors other than 4001 (EIP-1193 user rejected request), fall back to manual approve\n      if ((err === null || err === void 0 ? void 0 : err.code) !== 4001) {\n        approveCallback();\n      }\n    });\n  } // wrapped onUserInput to clear signatures\n\n\n  const onUserInput = useCallback((field, value) => {\n    setSignatureData(null);\n    return _onUserInput(field, value);\n  }, [_onUserInput]);\n  const onLiquidityInput = useCallback(value => onUserInput(Field.LIQUIDITY, value), [onUserInput]);\n  const onCurrencyAInput = useCallback(value => onUserInput(Field.CURRENCY_A, value), [onUserInput]);\n  const onCurrencyBInput = useCallback(value => onUserInput(Field.CURRENCY_B, value), [onUserInput]); // tx sending\n\n  const addTransaction = useTransactionAdder();\n\n  async function onRemove() {\n    if (!chainId || !library || !account || !deadline) throw new Error('missing dependencies');\n    const {\n      [Field.CURRENCY_A]: currencyAmountA,\n      [Field.CURRENCY_B]: currencyAmountB\n    } = parsedAmounts;\n\n    if (!currencyAmountA || !currencyAmountB) {\n      throw new Error('missing currency amounts');\n    }\n\n    const router = getRouterContract(chainId, library, account);\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(currencyAmountA, allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(currencyAmountB, allowedSlippage)[0]\n    };\n    if (!currencyA || !currencyB) throw new Error('missing tokens');\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY];\n    if (!liquidityAmount) throw new Error('missing liquidity amount');\n    const currencyBIsETH = currencyB === ETHER;\n    const oneCurrencyIsETH = currencyA === ETHER || currencyBIsETH;\n    if (!tokenA || !tokenB) throw new Error('could not wrap');\n    let estimate;\n    let method;\n    let args;\n\n    if (approval === ApprovalState.APPROVED) {\n      // removeLiquidityETH\n      if (oneCurrencyIsETH) {\n        estimate = router.estimateGas.removeLiquidityETH;\n        method = router.removeLiquidityETH;\n        args = [currencyBIsETH ? tokenA.address : tokenB.address, liquidityAmount.raw.toString(), amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), account, deadline.toHexString()];\n      } // removeLiquidity\n      else {\n        estimate = router.estimateGas.removeLiquidity;\n        method = router.removeLiquidity;\n        args = [tokenA.address, tokenB.address, liquidityAmount.raw.toString(), amountsMin[Field.CURRENCY_A].toString(), amountsMin[Field.CURRENCY_B].toString(), account, deadline.toHexString()];\n      }\n    } // we have a signataure, use permit versions of remove liquidity\n    else if (signatureData !== null) {\n      // removeLiquidityETHWithPermit\n      if (oneCurrencyIsETH) {\n        estimate = router.estimateGas.removeLiquidityETHWithPermit;\n        method = router.removeLiquidityETHWithPermit;\n        args = [currencyBIsETH ? tokenA.address : tokenB.address, liquidityAmount.raw.toString(), amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), account, signatureData.deadline, false, signatureData.v, signatureData.r, signatureData.s];\n      } // removeLiquidityETHWithPermit\n      else {\n        estimate = router.estimateGas.removeLiquidityWithPermit;\n        method = router.removeLiquidityWithPermit;\n        args = [tokenA.address, tokenB.address, liquidityAmount.raw.toString(), amountsMin[Field.CURRENCY_A].toString(), amountsMin[Field.CURRENCY_B].toString(), account, signatureData.deadline, false, signatureData.v, signatureData.r, signatureData.s];\n      }\n    } else {\n      throw new Error('Attempting to confirm without approval or a signature. Please contact support.');\n    }\n\n    setAttemptingTxn(true);\n    await estimate(...args).then(estimatedGasLimit => method(...args, {\n      gasLimit: calculateGasMargin(estimatedGasLimit)\n    }).then(response => {\n      var _parsedAmounts$Field$8, _parsedAmounts$Field$9;\n\n      setAttemptingTxn(false);\n      addTransaction(response, {\n        summary: `Remove ${(_parsedAmounts$Field$8 = parsedAmounts[Field.CURRENCY_A]) === null || _parsedAmounts$Field$8 === void 0 ? void 0 : _parsedAmounts$Field$8.toSignificant(3)} ${currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol} and ${(_parsedAmounts$Field$9 = parsedAmounts[Field.CURRENCY_B]) === null || _parsedAmounts$Field$9 === void 0 ? void 0 : _parsedAmounts$Field$9.toSignificant(3)} ${currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol}`\n      });\n      setTxHash(response.hash);\n    })).catch(err => {\n      setAttemptingTxn(false); // we only care if the error is something _other_ than the user rejected the tx\n\n      if ((err === null || err === void 0 ? void 0 : err.code) !== 4001) {\n        console.error(err);\n      }\n    });\n  }\n\n  function modalHeader() {\n    var _parsedAmounts$Field$10, _parsedAmounts$Field$11;\n\n    return /*#__PURE__*/_jsxDEV(AutoColumn, {\n      gap: \"md\",\n      children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n        align: \"flex-end\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"24px\",\n          color: \"background\",\n          children: (_parsedAmounts$Field$10 = parsedAmounts[Field.CURRENCY_A]) === null || _parsedAmounts$Field$10 === void 0 ? void 0 : _parsedAmounts$Field$10.toSignificant(6)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RowFixed, {\n          gap: \"4px\",\n          children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n            currency: currencyA,\n            size: \"24px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"24px\",\n            ml: \"10px\",\n            color: \"background\",\n            children: currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RowFixed, {\n        children: /*#__PURE__*/_jsxDEV(AddIcon, {\n          width: \"16px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n        align: \"flex-end\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"24px\",\n          color: \"background\",\n          children: (_parsedAmounts$Field$11 = parsedAmounts[Field.CURRENCY_B]) === null || _parsedAmounts$Field$11 === void 0 ? void 0 : _parsedAmounts$Field$11.toSignificant(6)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RowFixed, {\n          gap: \"4px\",\n          children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n            currency: currencyB,\n            size: \"24px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"24px\",\n            ml: \"10px\",\n            color: \"background\",\n            children: currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        small: true,\n        textAlign: \"left\",\n        pt: \"12px\",\n        color: \"background\",\n        children: t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\n          slippage: allowedSlippage / 100\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this);\n  }\n\n  function modalBottom() {\n    var _currencyA$symbol, _currencyB$symbol, _parsedAmounts$Field$12;\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n        children: [t('%assetA%/%assetB% Burned', {\n          assetA: (_currencyA$symbol = currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol) !== null && _currencyA$symbol !== void 0 ? _currencyA$symbol : '',\n          assetB: (_currencyB$symbol = currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol) !== null && _currencyB$symbol !== void 0 ? _currencyB$symbol : ''\n        }), /*#__PURE__*/_jsxDEV(RowFixed, {\n          children: [/*#__PURE__*/_jsxDEV(DoubleCurrencyLogo, {\n            currency0: currencyA,\n            currency1: currencyB,\n            margin: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            color: \"background\",\n            children: (_parsedAmounts$Field$12 = parsedAmounts[Field.LIQUIDITY]) === null || _parsedAmounts$Field$12 === void 0 ? void 0 : _parsedAmounts$Field$12.toSignificant(6)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this), pair && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            color: \"background\",\n            children: t('Price')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            color: \"background\",\n            children: [\"1 \", currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol, \" = \", tokenA ? pair.priceOf(tokenA).toSignificant(6) : '-', \" \", currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            color: \"background\",\n            children: [\"1 \", currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol, \" = \", tokenB ? pair.priceOf(tokenB).toSignificant(6) : '-', \" \", currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: !(approval === ApprovalState.APPROVED || signatureData !== null),\n        onClick: onRemove,\n        children: t('Confirm')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  const pendingText = t('Removing %amountA% %symbolA% and %amountB% %symbolB%', {\n    amountA: (_parsedAmounts$Field$13 = (_parsedAmounts$Field$14 = parsedAmounts[Field.CURRENCY_A]) === null || _parsedAmounts$Field$14 === void 0 ? void 0 : _parsedAmounts$Field$14.toSignificant(6)) !== null && _parsedAmounts$Field$13 !== void 0 ? _parsedAmounts$Field$13 : '',\n    symbolA: (_currencyA$symbol2 = currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol) !== null && _currencyA$symbol2 !== void 0 ? _currencyA$symbol2 : '',\n    amountB: (_parsedAmounts$Field$15 = (_parsedAmounts$Field$16 = parsedAmounts[Field.CURRENCY_B]) === null || _parsedAmounts$Field$16 === void 0 ? void 0 : _parsedAmounts$Field$16.toSignificant(6)) !== null && _parsedAmounts$Field$15 !== void 0 ? _parsedAmounts$Field$15 : '',\n    symbolB: (_currencyB$symbol2 = currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol) !== null && _currencyB$symbol2 !== void 0 ? _currencyB$symbol2 : ''\n  });\n  const liquidityPercentChangeCallback = useCallback(value => {\n    onUserInput(Field.LIQUIDITY_PERCENT, value.toString());\n  }, [onUserInput]);\n  const oneCurrencyIsETH = currencyA === ETHER || currencyB === ETHER;\n  const oneCurrencyIsWETH = Boolean(chainId && (currencyA && currencyEquals(WETH[chainId], currencyA) || currencyB && currencyEquals(WETH[chainId], currencyB)));\n  const handleSelectCurrencyA = useCallback(currency => {\n    if (currencyIdB && currencyId(currency) === currencyIdB) {\n      history.push(`/remove/${currencyId(currency)}/${currencyIdA}`);\n    } else {\n      history.push(`/remove/${currencyId(currency)}/${currencyIdB}`);\n    }\n  }, [currencyIdA, currencyIdB, history]);\n  const handleSelectCurrencyB = useCallback(currency => {\n    if (currencyIdA && currencyId(currency) === currencyIdA) {\n      history.push(`/remove/${currencyIdB}/${currencyId(currency)}`);\n    } else {\n      history.push(`/remove/${currencyIdA}/${currencyId(currency)}`);\n    }\n  }, [currencyIdA, currencyIdB, history]);\n  const handleDismissConfirmation = useCallback(() => {\n    setSignatureData(null); // important that we clear signature data to avoid bad sigs\n    // if there was a tx hash, we want to clear the input\n\n    if (txHash) {\n      onUserInput(Field.LIQUIDITY_PERCENT, '0');\n    }\n\n    setTxHash('');\n  }, [onUserInput, txHash]);\n  const [innerLiquidityPercentage, setInnerLiquidityPercentage] = useDebouncedChangeHandler(Number.parseInt(parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0)), liquidityPercentChangeCallback);\n  const [onPresentRemoveLiquidity] = useModal( /*#__PURE__*/_jsxDEV(TransactionConfirmationModal, {\n    title: t('You will receive'),\n    customOnDismiss: handleDismissConfirmation,\n    attemptingTxn: attemptingTxn,\n    hash: txHash || '',\n    content: () => /*#__PURE__*/_jsxDEV(ConfirmationModalContent, {\n      topContent: modalHeader,\n      bottomContent: modalBottom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 22\n    }, this),\n    pendingText: pendingText\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 420,\n    columnNumber: 5\n  }, this), true, true, 'removeLiquidityModal');\n  return /*#__PURE__*/_jsxDEV(Page, {\n    children: [/*#__PURE__*/_jsxDEV(AppBody, {\n      children: [/*#__PURE__*/_jsxDEV(AppHeader, {\n        backTo: \"/pool\",\n        title: t('Remove %assetA%-%assetB% liquidity', {\n          assetA: (_currencyA$symbol3 = currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol) !== null && _currencyA$symbol3 !== void 0 ? _currencyA$symbol3 : '',\n          assetB: (_currencyB$symbol3 = currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol) !== null && _currencyB$symbol3 !== void 0 ? _currencyB$symbol3 : ''\n        }),\n        subtitle: `To receive ${currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol} and ${currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol}`,\n        noConfig: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(AutoColumn, {\n          gap: \"20px\",\n          children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              children: t('Amount')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"text\",\n              scale: \"sm\",\n              onClick: () => setShowDetailed(!showDetailed),\n              children: showDetailed ? t('Simple') : t('Detailed')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 13\n          }, this), !showDetailed && /*#__PURE__*/_jsxDEV(BorderCard, {\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              fontSize: \"40px\",\n              bold: true,\n              mb: \"16px\",\n              style: {\n                lineHeight: 1\n              },\n              children: [formattedAmounts[Field.LIQUIDITY_PERCENT], \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Slider, {\n              name: \"lp-amount\",\n              min: 0,\n              max: 100,\n              value: innerLiquidityPercentage,\n              onValueChanged: value => setInnerLiquidityPercentage(Math.ceil(value)),\n              mb: \"16px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Flex, {\n              flexWrap: \"wrap\",\n              justifyContent: \"space-evenly\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"tertiary\",\n                scale: \"sm\",\n                onClick: () => onUserInput(Field.LIQUIDITY_PERCENT, '25'),\n                children: \"25%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"tertiary\",\n                scale: \"sm\",\n                onClick: () => onUserInput(Field.LIQUIDITY_PERCENT, '50'),\n                children: \"50%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"tertiary\",\n                scale: \"sm\",\n                onClick: () => onUserInput(Field.LIQUIDITY_PERCENT, '75'),\n                children: \"75%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"tertiary\",\n                scale: \"sm\",\n                onClick: () => onUserInput(Field.LIQUIDITY_PERCENT, '100'),\n                children: \"Max\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 11\n        }, this), !showDetailed && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ColumnCenter, {\n            children: /*#__PURE__*/_jsxDEV(ArrowDownIcon, {\n              color: \"textSubtle\",\n              width: \"24px\",\n              my: \"16px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n            gap: \"10px\",\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              bold: true,\n              color: \"secondary\",\n              fontSize: \"12px\",\n              textTransform: \"uppercase\",\n              children: t('You will receive')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(LightGreyCard, {\n              children: [/*#__PURE__*/_jsxDEV(Flex, {\n                justifyContent: \"space-between\",\n                mb: \"8px\",\n                children: [/*#__PURE__*/_jsxDEV(Flex, {\n                  children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n                    currency: currencyA\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 496,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    small: true,\n                    color: \"textSubtle\",\n                    id: \"remove-liquidity-tokena-symbol\",\n                    ml: \"4px\",\n                    children: currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 497,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 495,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  small: true,\n                  children: formattedAmounts[Field.CURRENCY_A] || '-'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 501,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Flex, {\n                justifyContent: \"space-between\",\n                children: [/*#__PURE__*/_jsxDEV(Flex, {\n                  children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n                    currency: currencyB\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 505,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    small: true,\n                    color: \"textSubtle\",\n                    id: \"remove-liquidity-tokenb-symbol\",\n                    ml: \"4px\",\n                    children: currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 506,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 504,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  small: true,\n                  children: formattedAmounts[Field.CURRENCY_B] || '-'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 510,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 19\n              }, this), chainId && (oneCurrencyIsWETH || oneCurrencyIsETH) ? /*#__PURE__*/_jsxDEV(RowBetween, {\n                style: {\n                  justifyContent: 'flex-end',\n                  fontSize: '14px'\n                },\n                children: oneCurrencyIsETH ? /*#__PURE__*/_jsxDEV(StyledInternalLink, {\n                  to: `/remove/${currencyA === ETHER ? WETH[chainId].address : currencyIdA}/${currencyB === ETHER ? WETH[chainId].address : currencyIdB}`,\n                  children: t('Receive WBNB')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 515,\n                  columnNumber: 25\n                }, this) : oneCurrencyIsWETH ? /*#__PURE__*/_jsxDEV(StyledInternalLink, {\n                  to: `/remove/${currencyA && currencyEquals(currencyA, WETH[chainId]) ? 'BNB' : currencyIdA}/${currencyB && currencyEquals(currencyB, WETH[chainId]) ? 'BNB' : currencyIdB}`,\n                  children: t('Receive BNB')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 523,\n                  columnNumber: 25\n                }, this) : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 513,\n                columnNumber: 21\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), showDetailed && /*#__PURE__*/_jsxDEV(Box, {\n          my: \"16px\",\n          children: [/*#__PURE__*/_jsxDEV(CurrencyInputPanel, {\n            value: formattedAmounts[Field.LIQUIDITY],\n            onUserInput: onLiquidityInput,\n            onMax: () => {\n              onUserInput(Field.LIQUIDITY_PERCENT, '100');\n            },\n            showMaxButton: !atMaxAmount,\n            disableCurrencySelect: true,\n            currency: pair === null || pair === void 0 ? void 0 : pair.liquidityToken,\n            pair: pair,\n            id: \"liquidity-amount\",\n            onCurrencySelect: () => null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ColumnCenter, {\n            children: /*#__PURE__*/_jsxDEV(ArrowDownIcon, {\n              width: \"24px\",\n              my: \"16px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CurrencyInputPanel, {\n            hideBalance: true,\n            value: formattedAmounts[Field.CURRENCY_A],\n            onUserInput: onCurrencyAInput,\n            onMax: () => onUserInput(Field.LIQUIDITY_PERCENT, '100'),\n            showMaxButton: !atMaxAmount,\n            currency: currencyA,\n            label: t('Output'),\n            onCurrencySelect: handleSelectCurrencyA,\n            id: \"remove-liquidity-tokena\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ColumnCenter, {\n            children: /*#__PURE__*/_jsxDEV(AddIcon, {\n              width: \"24px\",\n              my: \"16px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CurrencyInputPanel, {\n            hideBalance: true,\n            value: formattedAmounts[Field.CURRENCY_B],\n            onUserInput: onCurrencyBInput,\n            onMax: () => onUserInput(Field.LIQUIDITY_PERCENT, '100'),\n            showMaxButton: !atMaxAmount,\n            currency: currencyB,\n            label: t('Output'),\n            onCurrencySelect: handleSelectCurrencyB,\n            id: \"remove-liquidity-tokenb\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 13\n        }, this), pair && /*#__PURE__*/_jsxDEV(AutoColumn, {\n          gap: \"10px\",\n          style: {\n            marginTop: '16px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            bold: true,\n            color: \"secondary\",\n            fontSize: \"12px\",\n            textTransform: \"uppercase\",\n            children: t('Prices')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(LightGreyCard, {\n            children: [/*#__PURE__*/_jsxDEV(Flex, {\n              justifyContent: \"space-between\",\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                small: true,\n                color: \"textSubtle\",\n                children: [\"1 \", currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol, \" =\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 590,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                small: true,\n                children: [tokenA ? pair.priceOf(tokenA).toSignificant(6) : '-', \" \", currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 593,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Flex, {\n              justifyContent: \"space-between\",\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                small: true,\n                color: \"textSubtle\",\n                children: [\"1 \", currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol, \" =\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 598,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                small: true,\n                children: [tokenB ? pair.priceOf(tokenB).toSignificant(6) : '-', \" \", currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 601,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 597,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          position: \"relative\",\n          mt: \"16px\",\n          children: !account ? /*#__PURE__*/_jsxDEV(UnlockButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(RowBetween, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: approval === ApprovalState.APPROVED || signatureData !== null ? 'success' : 'primary',\n              onClick: onAttemptToApprove,\n              disabled: approval !== ApprovalState.NOT_APPROVED || signatureData !== null,\n              width: \"100%\",\n              mr: \"0.5rem\",\n              children: approval === ApprovalState.PENDING ? /*#__PURE__*/_jsxDEV(Dots, {\n                children: t('Approving')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 621,\n                columnNumber: 21\n              }, this) : approval === ApprovalState.APPROVED || signatureData !== null ? t('Approved') : t('Approve')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 613,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B] ? 'danger' : 'primary',\n              onClick: () => {\n                onPresentRemoveLiquidity();\n              },\n              width: \"100%\",\n              disabled: !isValid || signatureData === null && approval !== ApprovalState.APPROVED,\n              children: error || t('Remove')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 628,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 7\n    }, this), pair ? /*#__PURE__*/_jsxDEV(AutoColumn, {\n      style: {\n        minWidth: '20rem',\n        width: '100%',\n        maxWidth: '400px',\n        marginTop: '1rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(MinimalPositionCard, {\n        showUnwrapped: oneCurrencyIsWETH,\n        pair: pair\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 434,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RemoveLiquidity, \"M0KhSO14cWnuoo3kBp9D0OJHZfU=\", false, function () {\n  return [useCurrency, useCurrency, useActiveWeb3React, useTranslation, useBurnState, useDerivedBurnInfo, useBurnActionHandlers, useTransactionDeadline, useUserSlippageTolerance, usePairContract, useApproveCallback, useTransactionAdder, useDebouncedChangeHandler, useModal];\n});\n\n_c2 = RemoveLiquidity;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BorderCard\");\n$RefreshReg$(_c2, \"RemoveLiquidity\");","map":{"version":3,"sources":["D:/new/1TronicSwap-Build/src/views/RemoveLiquidity/index.tsx"],"names":["React","useCallback","useMemo","useState","styled","splitSignature","currencyEquals","ETHER","Percent","WETH","Button","Text","AddIcon","ArrowDownIcon","CardBody","Slider","Box","Flex","useModal","useTranslation","AutoColumn","ColumnCenter","TransactionConfirmationModal","ConfirmationModalContent","CurrencyInputPanel","MinimalPositionCard","AppHeader","AppBody","RowBetween","RowFixed","UnlockButton","LightGreyCard","CurrencyLogo","DoubleCurrencyLogo","ROUTER_ADDRESS","useActiveWeb3React","useCurrency","usePairContract","useTransactionDeadline","useTransactionAdder","StyledInternalLink","calculateGasMargin","calculateSlippageAmount","getRouterContract","currencyId","useDebouncedChangeHandler","wrappedCurrency","useApproveCallback","ApprovalState","Dots","useBurnActionHandlers","useDerivedBurnInfo","useBurnState","Field","useUserSlippageTolerance","Page","BorderCard","div","theme","colors","cardBorder","RemoveLiquidity","history","match","params","currencyIdA","currencyIdB","currencyA","currencyB","undefined","account","chainId","library","tokenA","tokenB","t","independentField","typedValue","pair","parsedAmounts","error","onUserInput","_onUserInput","isValid","showDetailed","setShowDetailed","attemptingTxn","setAttemptingTxn","txHash","setTxHash","deadline","allowedSlippage","formattedAmounts","LIQUIDITY_PERCENT","equalTo","lessThan","toFixed","LIQUIDITY","toSignificant","CURRENCY_A","CURRENCY_B","atMaxAmount","pairContract","liquidityToken","address","signatureData","setSignatureData","approval","approveCallback","onAttemptToApprove","Error","liquidityAmount","nonce","nonces","EIP712Domain","name","type","domain","version","verifyingContract","Permit","message","owner","spender","value","raw","toString","toHexString","toNumber","data","JSON","stringify","types","primaryType","send","then","signature","v","r","s","catch","err","code","field","onLiquidityInput","onCurrencyAInput","onCurrencyBInput","addTransaction","onRemove","currencyAmountA","currencyAmountB","router","amountsMin","currencyBIsETH","oneCurrencyIsETH","estimate","method","args","APPROVED","estimateGas","removeLiquidityETH","removeLiquidity","removeLiquidityETHWithPermit","removeLiquidityWithPermit","estimatedGasLimit","gasLimit","response","summary","symbol","hash","console","modalHeader","slippage","modalBottom","assetA","assetB","priceOf","pendingText","amountA","symbolA","amountB","symbolB","liquidityPercentChangeCallback","oneCurrencyIsWETH","Boolean","handleSelectCurrencyA","currency","push","handleSelectCurrencyB","handleDismissConfirmation","innerLiquidityPercentage","setInnerLiquidityPercentage","Number","parseInt","onPresentRemoveLiquidity","lineHeight","Math","ceil","justifyContent","fontSize","marginTop","NOT_APPROVED","PENDING","minWidth","width","maxWidth"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { splitSignature } from '@ethersproject/bytes'\r\nimport { Contract } from '@ethersproject/contracts'\r\nimport { TransactionResponse } from '@ethersproject/providers'\r\nimport { Currency, currencyEquals, ETHER, Percent, WETH } from 'utils/@sdk'\r\nimport { Button, Text, AddIcon, ArrowDownIcon, CardBody, Slider, Box, Flex, useModal } from 'components/_uikit'\r\nimport { RouteComponentProps } from 'react-router'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\r\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\r\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\r\nimport { MinimalPositionCard } from '../../components/PositionCard'\r\nimport { AppHeader, AppBody } from '../../components/App'\r\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\r\nimport UnlockButton from '../../components/UnlockButton'\r\nimport { LightGreyCard } from '../../components/Card'\r\n\r\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../../components/Logo'\r\nimport { ROUTER_ADDRESS } from '../../config/constants'\r\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\r\nimport { useCurrency } from '../../hooks/Tokens'\r\nimport { usePairContract } from '../../hooks/useContract'\r\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\r\n\r\nimport { useTransactionAdder } from '../../state/transactions/hooks'\r\nimport StyledInternalLink from '../../components/Links'\r\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils'\r\nimport { currencyId } from '../../utils/currencyId'\r\nimport useDebouncedChangeHandler from '../../hooks/useDebouncedChangeHandler'\r\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\r\nimport { useApproveCallback, ApprovalState } from '../../hooks/useApproveCallback'\r\nimport Dots from '../../components/Loader/Dots'\r\nimport { useBurnActionHandlers, useDerivedBurnInfo, useBurnState } from '../../state/burn/hooks'\r\n\r\nimport { Field } from '../../state/burn/actions'\r\nimport { useUserSlippageTolerance } from '../../state/user/hooks'\r\nimport Page from '../Page'\r\n\r\nconst BorderCard = styled.div`\r\n  border: solid 1px ${({ theme }) => theme.colors.cardBorder};\r\n  border-radius: 8px;;\r\n  padding: 16px;\r\n`\r\n\r\nexport default function RemoveLiquidity({\r\n  history,\r\n  match: {\r\n    params: { currencyIdA, currencyIdB },\r\n  },\r\n}: RouteComponentProps<{ currencyIdA: string; currencyIdB: string }>) {\r\n  const [currencyA, currencyB] = [useCurrency(currencyIdA) ?? undefined, useCurrency(currencyIdB) ?? undefined]\r\n  const { account, chainId, library } = useActiveWeb3React()\r\n  const [tokenA, tokenB] = useMemo(\r\n    () => [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)],\r\n    [currencyA, currencyB, chainId],\r\n  )\r\n\r\n  const { t } = useTranslation()\r\n\r\n  // burn state\r\n  const { independentField, typedValue } = useBurnState()\r\n  const { pair, parsedAmounts, error } = useDerivedBurnInfo(currencyA ?? undefined, currencyB ?? undefined)\r\n  const { onUserInput: _onUserInput } = useBurnActionHandlers()\r\n  const isValid = !error\r\n\r\n  // modal and loading\r\n  const [showDetailed, setShowDetailed] = useState<boolean>(false)\r\n  const [attemptingTxn, setAttemptingTxn] = useState(false) // clicked confirm\r\n\r\n  // txn values\r\n  const [txHash, setTxHash] = useState<string>('')\r\n  const deadline = useTransactionDeadline()\r\n  const [allowedSlippage] = useUserSlippageTolerance()\r\n\r\n  const formattedAmounts = {\r\n    [Field.LIQUIDITY_PERCENT]: parsedAmounts[Field.LIQUIDITY_PERCENT].equalTo('0')\r\n      ? '0'\r\n      : parsedAmounts[Field.LIQUIDITY_PERCENT].lessThan(new Percent('1', '100'))\r\n      ? '<1'\r\n      : parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0),\r\n    [Field.LIQUIDITY]:\r\n      independentField === Field.LIQUIDITY ? typedValue : parsedAmounts[Field.LIQUIDITY]?.toSignificant(6) ?? '',\r\n    [Field.CURRENCY_A]:\r\n      independentField === Field.CURRENCY_A ? typedValue : parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\r\n    [Field.CURRENCY_B]:\r\n      independentField === Field.CURRENCY_B ? typedValue : parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\r\n  }\r\n\r\n  const atMaxAmount = parsedAmounts[Field.LIQUIDITY_PERCENT]?.equalTo(new Percent('1'))\r\n\r\n  // pair contract\r\n  const pairContract: Contract | null = usePairContract(pair?.liquidityToken?.address)\r\n\r\n  // allowance handling\r\n  const [signatureData, setSignatureData] = useState<{ v: number; r: string; s: string; deadline: number } | null>(null)\r\n  const [approval, approveCallback] = useApproveCallback(parsedAmounts[Field.LIQUIDITY], ROUTER_ADDRESS)\r\n\r\n  async function onAttemptToApprove() {\r\n    if (!pairContract || !pair || !library || !deadline) throw new Error('missing dependencies')\r\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY]\r\n    if (!liquidityAmount) throw new Error('missing liquidity amount')\r\n\r\n    // try to gather a signature for permission\r\n    const nonce = await pairContract.nonces(account)\r\n\r\n    const EIP712Domain = [\r\n      { name: 'name', type: 'string' },\r\n      { name: 'version', type: 'string' },\r\n      { name: 'chainId', type: 'uint256' },\r\n      { name: 'verifyingContract', type: 'address' },\r\n    ]\r\n    const domain = {\r\n      name: 'OneTronic LPs',\r\n      version: '1',\r\n      chainId,\r\n      verifyingContract: pair.liquidityToken.address,\r\n    }\r\n    const Permit = [\r\n      { name: 'owner', type: 'address' },\r\n      { name: 'spender', type: 'address' },\r\n      { name: 'value', type: 'uint256' },\r\n      { name: 'nonce', type: 'uint256' },\r\n      { name: 'deadline', type: 'uint256' },\r\n    ]\r\n    const message = {\r\n      owner: account,\r\n      spender: ROUTER_ADDRESS,\r\n      value: liquidityAmount.raw.toString(),\r\n      nonce: nonce.toHexString(),\r\n      deadline: deadline.toNumber(),\r\n    }\r\n    const data = JSON.stringify({\r\n      types: {\r\n        EIP712Domain,\r\n        Permit,\r\n      },\r\n      domain,\r\n      primaryType: 'Permit',\r\n      message,\r\n    })\r\n\r\n    library\r\n      .send('eth_signTypedData_v4', [account, data])\r\n      .then(splitSignature)\r\n      .then((signature) => {\r\n        setSignatureData({\r\n          v: signature.v,\r\n          r: signature.r,\r\n          s: signature.s,\r\n          deadline: deadline.toNumber(),\r\n        })\r\n      })\r\n      .catch((err) => {\r\n        // for all errors other than 4001 (EIP-1193 user rejected request), fall back to manual approve\r\n        if (err?.code !== 4001) {\r\n          approveCallback()\r\n        }\r\n      })\r\n  }\r\n\r\n  // wrapped onUserInput to clear signatures\r\n  const onUserInput = useCallback(\r\n    (field: Field, value: string) => {\r\n      setSignatureData(null)\r\n      return _onUserInput(field, value)\r\n    },\r\n    [_onUserInput],\r\n  )\r\n\r\n  const onLiquidityInput = useCallback((value: string): void => onUserInput(Field.LIQUIDITY, value), [onUserInput])\r\n  const onCurrencyAInput = useCallback((value: string): void => onUserInput(Field.CURRENCY_A, value), [onUserInput])\r\n  const onCurrencyBInput = useCallback((value: string): void => onUserInput(Field.CURRENCY_B, value), [onUserInput])\r\n\r\n  // tx sending\r\n  const addTransaction = useTransactionAdder()\r\n  async function onRemove() {\r\n    if (!chainId || !library || !account || !deadline) throw new Error('missing dependencies')\r\n    const { [Field.CURRENCY_A]: currencyAmountA, [Field.CURRENCY_B]: currencyAmountB } = parsedAmounts\r\n    if (!currencyAmountA || !currencyAmountB) {\r\n      throw new Error('missing currency amounts')\r\n    }\r\n    const router = getRouterContract(chainId, library, account)\r\n\r\n    const amountsMin = {\r\n      [Field.CURRENCY_A]: calculateSlippageAmount(currencyAmountA, allowedSlippage)[0],\r\n      [Field.CURRENCY_B]: calculateSlippageAmount(currencyAmountB, allowedSlippage)[0],\r\n    }\r\n\r\n    if (!currencyA || !currencyB) throw new Error('missing tokens')\r\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY]\r\n    if (!liquidityAmount) throw new Error('missing liquidity amount')\r\n\r\n    const currencyBIsETH = currencyB === ETHER\r\n    const oneCurrencyIsETH = currencyA === ETHER || currencyBIsETH\r\n\r\n    if (!tokenA || !tokenB) throw new Error('could not wrap')\r\n    let estimate\r\n    let method: (...args: any) => Promise<TransactionResponse>\r\n    let args: Array<string | string[] | number | boolean>\r\n    if (approval === ApprovalState.APPROVED ) {\r\n      // removeLiquidityETH\r\n      if (oneCurrencyIsETH) {\r\n        estimate = router.estimateGas.removeLiquidityETH\r\n        method = router.removeLiquidityETH\r\n        args = [\r\n          currencyBIsETH ? tokenA.address : tokenB.address,\r\n          liquidityAmount.raw.toString(),\r\n          amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(),\r\n          amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(),\r\n          account,\r\n          deadline.toHexString(),\r\n        ]\r\n      }\r\n      // removeLiquidity\r\n      else {\r\n        estimate = router.estimateGas.removeLiquidity\r\n        method = router.removeLiquidity\r\n        args = [\r\n          tokenA.address,\r\n          tokenB.address,\r\n          liquidityAmount.raw.toString(),\r\n          amountsMin[Field.CURRENCY_A].toString(),\r\n          amountsMin[Field.CURRENCY_B].toString(),\r\n          account,\r\n          deadline.toHexString(),\r\n        ]\r\n      }\r\n    }\r\n    // we have a signataure, use permit versions of remove liquidity\r\n    else if (signatureData !== null) {\r\n      // removeLiquidityETHWithPermit\r\n      if (oneCurrencyIsETH) {\r\n        estimate = router.estimateGas.removeLiquidityETHWithPermit\r\n        method = router.removeLiquidityETHWithPermit\r\n        args = [\r\n          currencyBIsETH ? tokenA.address : tokenB.address,\r\n          liquidityAmount.raw.toString(),\r\n          amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(),\r\n          amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(),\r\n          account,\r\n          signatureData.deadline,\r\n          false,\r\n          signatureData.v,\r\n          signatureData.r,\r\n          signatureData.s,\r\n        ]\r\n      }\r\n      // removeLiquidityETHWithPermit\r\n      else {\r\n        estimate = router.estimateGas.removeLiquidityWithPermit\r\n        method = router.removeLiquidityWithPermit\r\n        args = [\r\n          tokenA.address,\r\n          tokenB.address,\r\n          liquidityAmount.raw.toString(),\r\n          amountsMin[Field.CURRENCY_A].toString(),\r\n          amountsMin[Field.CURRENCY_B].toString(),\r\n          account,\r\n          signatureData.deadline,\r\n          false,\r\n          signatureData.v,\r\n          signatureData.r,\r\n          signatureData.s,\r\n        ]\r\n      }\r\n    } else {\r\n      throw new Error('Attempting to confirm without approval or a signature. Please contact support.')\r\n    }\r\n\r\n    setAttemptingTxn(true)\r\n    await estimate(...args)\r\n    .then((estimatedGasLimit) =>\r\n      method(...args, {\r\n        gasLimit: calculateGasMargin(estimatedGasLimit),\r\n      }).then((response) => {\r\n        setAttemptingTxn(false)\r\n        addTransaction(response, {\r\n          summary: `Remove ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\r\n            currencyA?.symbol\r\n          } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencyB?.symbol}`,\r\n        })\r\n\r\n        setTxHash(response.hash)\r\n      }),\r\n    )\r\n    .catch((err) => {\r\n      setAttemptingTxn(false)\r\n      // we only care if the error is something _other_ than the user rejected the tx\r\n      if (err?.code !== 4001) {\r\n        console.error(err)\r\n      }\r\n    })\r\n  }\r\n\r\n  function modalHeader() {\r\n    return (\r\n      <AutoColumn gap=\"md\">\r\n        <RowBetween align=\"flex-end\">\r\n          <Text fontSize=\"24px\"  color=\"background\">{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\r\n          <RowFixed gap=\"4px\">\r\n            <CurrencyLogo currency={currencyA} size=\"24px\" />\r\n            <Text fontSize=\"24px\" ml=\"10px\"  color=\"background\">\r\n              {currencyA?.symbol}\r\n            </Text>\r\n          </RowFixed>\r\n        </RowBetween>\r\n        <RowFixed>\r\n          <AddIcon width=\"16px\" />\r\n        </RowFixed>\r\n        <RowBetween align=\"flex-end\">\r\n          <Text fontSize=\"24px\"  color=\"background\">{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\r\n          <RowFixed gap=\"4px\">\r\n            <CurrencyLogo currency={currencyB} size=\"24px\" />\r\n            <Text fontSize=\"24px\" ml=\"10px\"  color=\"background\">\r\n              {currencyB?.symbol}\r\n            </Text>\r\n          </RowFixed>\r\n        </RowBetween>\r\n\r\n        <Text small textAlign=\"left\" pt=\"12px\" color=\"background\">\r\n          {t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\r\n            slippage: allowedSlippage / 100,\r\n          })}\r\n        </Text>\r\n      </AutoColumn>\r\n    )\r\n  }\r\n\r\n  function modalBottom() {\r\n    return (\r\n      <>\r\n        <RowBetween>\r\n          {t('%assetA%/%assetB% Burned', { assetA: currencyA?.symbol ?? '', assetB: currencyB?.symbol ?? '' })}\r\n          <RowFixed>\r\n            <DoubleCurrencyLogo currency0={currencyA} currency1={currencyB} margin />\r\n            <Text  color=\"background\">{parsedAmounts[Field.LIQUIDITY]?.toSignificant(6)}</Text>\r\n          </RowFixed>\r\n        </RowBetween>\r\n        {pair && (\r\n          <>\r\n            <RowBetween>\r\n              <Text  color=\"background\">{t('Price')}</Text>\r\n              <Text  color=\"background\">\r\n                1 {currencyA?.symbol} = {tokenA ? pair.priceOf(tokenA).toSignificant(6) : '-'} {currencyB?.symbol}\r\n              </Text>\r\n            </RowBetween>\r\n            <RowBetween>\r\n              <div />\r\n              <Text  color=\"background\">\r\n                1 {currencyB?.symbol} = {tokenB ? pair.priceOf(tokenB).toSignificant(6) : '-'} {currencyA?.symbol}\r\n              </Text>\r\n            </RowBetween>\r\n          </>\r\n        )}\r\n        <Button disabled={!(approval === ApprovalState.APPROVED || signatureData !== null)} onClick={onRemove}>\r\n          {t('Confirm')}\r\n        </Button>\r\n      </>\r\n    )\r\n  }\r\n\r\n  const pendingText = t('Removing %amountA% %symbolA% and %amountB% %symbolB%', {\r\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\r\n    symbolA: currencyA?.symbol ?? '',\r\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\r\n    symbolB: currencyB?.symbol ?? '',\r\n  })\r\n\r\n  const liquidityPercentChangeCallback = useCallback(\r\n    (value: number) => {\r\n      onUserInput(Field.LIQUIDITY_PERCENT, value.toString())\r\n    },\r\n    [onUserInput],\r\n  )\r\n\r\n  const oneCurrencyIsETH = currencyA === ETHER || currencyB === ETHER\r\n  const oneCurrencyIsWETH = Boolean(\r\n    chainId &&\r\n      ((currencyA && currencyEquals(WETH[chainId], currencyA)) ||\r\n        (currencyB && currencyEquals(WETH[chainId], currencyB))),\r\n  )\r\n\r\n  const handleSelectCurrencyA = useCallback(\r\n    (currency: Currency) => {\r\n      if (currencyIdB && currencyId(currency) === currencyIdB) {\r\n        history.push(`/remove/${currencyId(currency)}/${currencyIdA}`)\r\n      } else {\r\n        history.push(`/remove/${currencyId(currency)}/${currencyIdB}`)\r\n      }\r\n    },\r\n    [currencyIdA, currencyIdB, history],\r\n  )\r\n  const handleSelectCurrencyB = useCallback(\r\n    (currency: Currency) => {\r\n      if (currencyIdA && currencyId(currency) === currencyIdA) {\r\n        history.push(`/remove/${currencyIdB}/${currencyId(currency)}`)\r\n      } else {\r\n        history.push(`/remove/${currencyIdA}/${currencyId(currency)}`)\r\n      }\r\n    },\r\n    [currencyIdA, currencyIdB, history],\r\n  )\r\n\r\n  const handleDismissConfirmation = useCallback(() => {\r\n    setSignatureData(null) // important that we clear signature data to avoid bad sigs\r\n    // if there was a tx hash, we want to clear the input\r\n    if (txHash) {\r\n      onUserInput(Field.LIQUIDITY_PERCENT, '0')\r\n    }\r\n    setTxHash('')\r\n  }, [onUserInput, txHash])\r\n\r\n  const [innerLiquidityPercentage, setInnerLiquidityPercentage] = useDebouncedChangeHandler(\r\n    Number.parseInt(parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0)),\r\n    liquidityPercentChangeCallback,\r\n  )\r\n\r\n  const [onPresentRemoveLiquidity] = useModal(\r\n    <TransactionConfirmationModal\r\n      title={t('You will receive')}\r\n      customOnDismiss={handleDismissConfirmation}\r\n      attemptingTxn={attemptingTxn}\r\n      hash={txHash || ''}\r\n      content={() => <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />}\r\n      pendingText={pendingText}\r\n    />,\r\n    true,\r\n    true,\r\n    'removeLiquidityModal',\r\n  )\r\n\r\n  return (\r\n    <Page>\r\n      <AppBody>\r\n        <AppHeader\r\n          backTo=\"/pool\"\r\n          title={t('Remove %assetA%-%assetB% liquidity', {\r\n            assetA: currencyA?.symbol ?? '',\r\n            assetB: currencyB?.symbol ?? '',\r\n          })}\r\n          subtitle={`To receive ${currencyA?.symbol} and ${currencyB?.symbol}`}\r\n          noConfig\r\n        />\r\n\r\n        <CardBody>\r\n          <AutoColumn gap=\"20px\">\r\n            <RowBetween>\r\n              <Text>{t('Amount')}</Text>\r\n              <Button variant=\"text\" scale=\"sm\" onClick={() => setShowDetailed(!showDetailed)}>\r\n                {showDetailed ? t('Simple') : t('Detailed')}\r\n              </Button>\r\n            </RowBetween>\r\n            {!showDetailed && (\r\n              <BorderCard>\r\n                <Text fontSize=\"40px\" bold mb=\"16px\" style={{ lineHeight: 1 }}>\r\n                  {formattedAmounts[Field.LIQUIDITY_PERCENT]}%\r\n                </Text>\r\n                <Slider\r\n                  name=\"lp-amount\"\r\n                  min={0}\r\n                  max={100}\r\n                  value={innerLiquidityPercentage}\r\n                  onValueChanged={(value) => setInnerLiquidityPercentage(Math.ceil(value))}\r\n                  mb=\"16px\"\r\n                />\r\n                <Flex flexWrap=\"wrap\" justifyContent=\"space-evenly\">\r\n                  <Button variant=\"tertiary\" scale=\"sm\" onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '25')}>\r\n                    25%\r\n                  </Button>\r\n                  <Button variant=\"tertiary\" scale=\"sm\" onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '50')}>\r\n                    50%\r\n                  </Button>\r\n                  <Button variant=\"tertiary\" scale=\"sm\" onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '75')}>\r\n                    75%\r\n                  </Button>\r\n                  <Button variant=\"tertiary\" scale=\"sm\" onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '100')}>\r\n                    Max\r\n                  </Button>\r\n                </Flex>\r\n              </BorderCard>\r\n            )}\r\n          </AutoColumn>\r\n          {!showDetailed && (\r\n            <>\r\n              <ColumnCenter>\r\n                <ArrowDownIcon color=\"textSubtle\" width=\"24px\" my=\"16px\" />\r\n              </ColumnCenter>\r\n              <AutoColumn gap=\"10px\">\r\n                <Text bold color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\">\r\n                  {t('You will receive')}\r\n                </Text>\r\n                <LightGreyCard>\r\n                  <Flex justifyContent=\"space-between\" mb=\"8px\">\r\n                    <Flex>\r\n                      <CurrencyLogo currency={currencyA} />\r\n                      <Text small color=\"textSubtle\" id=\"remove-liquidity-tokena-symbol\" ml=\"4px\">\r\n                        {currencyA?.symbol}\r\n                      </Text>\r\n                    </Flex>\r\n                    <Text small>{formattedAmounts[Field.CURRENCY_A] || '-'}</Text>\r\n                  </Flex>\r\n                  <Flex justifyContent=\"space-between\">\r\n                    <Flex>\r\n                      <CurrencyLogo currency={currencyB} />\r\n                      <Text small color=\"textSubtle\" id=\"remove-liquidity-tokenb-symbol\" ml=\"4px\">\r\n                        {currencyB?.symbol}\r\n                      </Text>\r\n                    </Flex>\r\n                    <Text small>{formattedAmounts[Field.CURRENCY_B] || '-'}</Text>\r\n                  </Flex>\r\n                  {chainId && (oneCurrencyIsWETH || oneCurrencyIsETH) ? (\r\n                    <RowBetween style={{ justifyContent: 'flex-end', fontSize: '14px' }}>\r\n                      {oneCurrencyIsETH ? (\r\n                        <StyledInternalLink\r\n                          to={`/remove/${currencyA === ETHER ? WETH[chainId].address : currencyIdA}/${\r\n                            currencyB === ETHER ? WETH[chainId].address : currencyIdB\r\n                          }`}\r\n                        >\r\n                          {t('Receive WBNB')}\r\n                        </StyledInternalLink>\r\n                      ) : oneCurrencyIsWETH ? (\r\n                        <StyledInternalLink\r\n                          to={`/remove/${currencyA && currencyEquals(currencyA, WETH[chainId]) ? 'BNB' : currencyIdA}/${\r\n                            currencyB && currencyEquals(currencyB, WETH[chainId]) ? 'BNB' : currencyIdB\r\n                          }`}\r\n                        >\r\n                          {t('Receive BNB')}\r\n                        </StyledInternalLink>\r\n                      ) : null}\r\n                    </RowBetween>\r\n                  ) : null}\r\n                </LightGreyCard>\r\n              </AutoColumn>\r\n            </>\r\n          )}\r\n\r\n          {showDetailed && (\r\n            <Box my=\"16px\">\r\n              <CurrencyInputPanel\r\n                value={formattedAmounts[Field.LIQUIDITY]}\r\n                onUserInput={onLiquidityInput}\r\n                onMax={() => {\r\n                  onUserInput(Field.LIQUIDITY_PERCENT, '100')\r\n                }}\r\n                showMaxButton={!atMaxAmount}\r\n                disableCurrencySelect\r\n                currency={pair?.liquidityToken}\r\n                pair={pair}\r\n                id=\"liquidity-amount\"\r\n                onCurrencySelect={() => null}\r\n              />\r\n              <ColumnCenter>\r\n                <ArrowDownIcon width=\"24px\" my=\"16px\" />\r\n              </ColumnCenter>\r\n              <CurrencyInputPanel\r\n                hideBalance\r\n                value={formattedAmounts[Field.CURRENCY_A]}\r\n                onUserInput={onCurrencyAInput}\r\n                onMax={() => onUserInput(Field.LIQUIDITY_PERCENT, '100')}\r\n                showMaxButton={!atMaxAmount}\r\n                currency={currencyA}\r\n                label={t('Output')}\r\n                onCurrencySelect={handleSelectCurrencyA}\r\n                id=\"remove-liquidity-tokena\"\r\n              />\r\n              <ColumnCenter>\r\n                <AddIcon width=\"24px\" my=\"16px\" />\r\n              </ColumnCenter>\r\n              <CurrencyInputPanel\r\n                hideBalance\r\n                value={formattedAmounts[Field.CURRENCY_B]}\r\n                onUserInput={onCurrencyBInput}\r\n                onMax={() => onUserInput(Field.LIQUIDITY_PERCENT, '100')}\r\n                showMaxButton={!atMaxAmount}\r\n                currency={currencyB}\r\n                label={t('Output')}\r\n                onCurrencySelect={handleSelectCurrencyB}\r\n                id=\"remove-liquidity-tokenb\"\r\n              />\r\n            </Box>\r\n          )}\r\n          {pair && (\r\n            <AutoColumn gap=\"10px\" style={{ marginTop: '16px' }}>\r\n              <Text bold color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\">\r\n                {t('Prices')}\r\n              </Text>\r\n              <LightGreyCard>\r\n                <Flex justifyContent=\"space-between\">\r\n                  <Text small color=\"textSubtle\">\r\n                    1 {currencyA?.symbol} =\r\n                  </Text>\r\n                  <Text small>\r\n                    {tokenA ? pair.priceOf(tokenA).toSignificant(6) : '-'} {currencyB?.symbol}\r\n                  </Text>\r\n                </Flex>\r\n                <Flex justifyContent=\"space-between\">\r\n                  <Text small color=\"textSubtle\">\r\n                    1 {currencyB?.symbol} =\r\n                  </Text>\r\n                  <Text small>\r\n                    {tokenB ? pair.priceOf(tokenB).toSignificant(6) : '-'} {currencyA?.symbol}\r\n                  </Text>\r\n                </Flex>\r\n              </LightGreyCard>\r\n            </AutoColumn>\r\n          )}\r\n          <Box position=\"relative\" mt=\"16px\">\r\n            {!account ? (\r\n              <UnlockButton />\r\n            ) : (\r\n              <RowBetween>\r\n                <Button\r\n                  variant={approval === ApprovalState.APPROVED || signatureData !== null ? 'success' : 'primary'}\r\n                  onClick={onAttemptToApprove}\r\n                  disabled={approval !== ApprovalState.NOT_APPROVED || signatureData !== null}\r\n                  width=\"100%\"\r\n                  mr=\"0.5rem\"\r\n                >\r\n                  {approval === ApprovalState.PENDING ? (\r\n                    <Dots>{t('Approving')}</Dots>\r\n                  ) : approval === ApprovalState.APPROVED || signatureData !== null ? (\r\n                    t('Approved')\r\n                  ) : (\r\n                    t('Approve')\r\n                  )}\r\n                </Button>\r\n                <Button\r\n                  variant={\r\n                    !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\r\n                      ? 'danger'\r\n                      : 'primary'\r\n                  }\r\n                  onClick={() => {\r\n                    onPresentRemoveLiquidity()\r\n                  }}\r\n                  width=\"100%\"\r\n                  disabled={!isValid || (signatureData === null && approval !== ApprovalState.APPROVED)}\r\n                >\r\n                  {error || t('Remove')}\r\n                </Button>\r\n              </RowBetween>\r\n            )}\r\n          </Box>\r\n        </CardBody>\r\n      </AppBody>\r\n\r\n      {pair ? (\r\n        <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\r\n          <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\r\n        </AutoColumn>\r\n      ) : null}\r\n    </Page>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}