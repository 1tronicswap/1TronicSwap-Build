{"ast":null,"code":"var _jsxFileName = \"D:\\\\new\\\\1TronicSwap-Build\\\\src\\\\components\\\\_uikit\\\\components\\\\Image\\\\Wrapper.tsx\";\nimport React, { forwardRef } from \"react\";\nimport styled from \"styled-components\";\nimport { space } from \"styled-system\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledWrapper = styled.div`\n  max-height: ${_ref => {\n  let {\n    $height\n  } = _ref;\n  return $height;\n}}px;\n  max-width: ${_ref2 => {\n  let {\n    $width\n  } = _ref2;\n  return $width;\n}}px;\n  position: relative;\n  width: 100%;\n\n  &:after {\n    content: \"\";\n    display: block;\n    padding-top: ${_ref3 => {\n  let {\n    $width,\n    $height\n  } = _ref3;\n  return $height / $width * 100;\n}}%;\n  }\n\n  ${space}\n`;\n_c = StyledWrapper;\nconst Wrapper = /*#__PURE__*/forwardRef(_c2 = (_ref4, ref) => {\n  let {\n    width,\n    height,\n    ...props\n  } = _ref4;\n  return /*#__PURE__*/_jsxDEV(StyledWrapper, {\n    ref: ref,\n    $width: width,\n    $height: height,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n});\n_c3 = Wrapper;\nexport default Wrapper;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledWrapper\");\n$RefreshReg$(_c2, \"Wrapper$forwardRef\");\n$RefreshReg$(_c3, \"Wrapper\");","map":{"version":3,"sources":["D:/new/1TronicSwap-Build/src/components/_uikit/components/Image/Wrapper.tsx"],"names":["React","forwardRef","styled","space","StyledWrapper","div","$height","$width","Wrapper","ref","width","height","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT,QAAsB,eAAtB;;AAGA,MAAMC,aAAa,GAAGF,MAAM,CAACG,GAAyC;AACtE,gBAAgB;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,SAAiBA,OAAjB;AAAA,CAAyB;AACzC,eAAe;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,SAAgBA,MAAhB;AAAA,CAAuB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AAAA,MAAC;AAAEA,IAAAA,MAAF;AAAUD,IAAAA;AAAV,GAAD;AAAA,SAA0BA,OAAO,GAAGC,MAAX,GAAqB,GAA9C;AAAA,CAAkD;AACrE;AACA;AACA,IAAIJ,KAAM;AACV,CAbA;KAAMC,a;AAeN,MAAMI,OAAO,gBAAGP,UAAU,OAA+B,QAA8BQ,GAA9B,KAAsC;AAAA,MAArC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,MAAT;AAAiB,OAAGC;AAApB,GAAqC;AAC7F,sBAAO,QAAC,aAAD;AAAe,IAAA,GAAG,EAAEH,GAApB;AAAyB,IAAA,MAAM,EAAEC,KAAjC;AAAwC,IAAA,OAAO,EAAEC,MAAjD;AAAA,OAA6DC;AAA7D;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFyB,CAA1B;MAAMJ,O;AAIN,eAAeA,OAAf","sourcesContent":["import React, { forwardRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { space } from \"styled-system\";\r\nimport { WrapperProps } from \"./types\";\r\n\r\nconst StyledWrapper = styled.div<{ $width: number; $height: number }>`\r\n  max-height: ${({ $height }) => $height}px;\r\n  max-width: ${({ $width }) => $width}px;\r\n  position: relative;\r\n  width: 100%;\r\n\r\n  &:after {\r\n    content: \"\";\r\n    display: block;\r\n    padding-top: ${({ $width, $height }) => ($height / $width) * 100}%;\r\n  }\r\n\r\n  ${space}\r\n`;\r\n\r\nconst Wrapper = forwardRef<HTMLDivElement, WrapperProps>(({ width, height, ...props }, ref) => {\r\n  return <StyledWrapper ref={ref} $width={width} $height={height} {...props} />;\r\n});\r\n\r\nexport default Wrapper;\r\n"]},"metadata":{},"sourceType":"module"}