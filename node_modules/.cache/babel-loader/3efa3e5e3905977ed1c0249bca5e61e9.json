{"ast":null,"code":"var _jsxFileName = \"D:\\\\new\\\\1TronicSwap-Build\\\\src\\\\components\\\\SearchModal\\\\CurrencySearchModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from 'react';\nimport { ModalContainer, ModalHeader, ModalTitle, ModalBackButton, ModalCloseButton, ModalBody, Heading, Button, useMatchBreakpoints } from 'components/_uikit';\nimport styled from 'styled-components';\nimport usePrevious from 'hooks/usePreviousValue';\nimport { useTranslation } from 'contexts/Localization';\nimport CurrencySearch from './CurrencySearch';\nimport ImportToken from './ImportToken';\nimport Manage from './Manage';\nimport ImportList from './ImportList';\nimport { CurrencyModalView } from './types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Footer = styled.div`\n  width: 100%;\n  // background-color: ${_ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.colors.backgroundAlt;\n}};\n  text-align: center;\n`;\n_c = Footer;\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 300px;\n  width: 100%;\n`;\n_c2 = StyledModalContainer;\nconst StyledModalBody = styled(ModalBody)`\n  padding: 12px 24px;\n`;\n_c3 = StyledModalBody;\nexport default function CurrencySearchModal(_ref2) {\n  _s();\n\n  let {\n    onDismiss = () => null,\n    onCurrencySelect,\n    selectedCurrency,\n    otherSelectedCurrency,\n    showCommonBases = false\n  } = _ref2;\n  const {\n    isXl\n  } = useMatchBreakpoints();\n  const isMobile = isXl === false;\n  const [modalView, setModalView] = useState(CurrencyModalView.search);\n  const handleCurrencySelect = useCallback(currency => {\n    onCurrencySelect(currency);\n    onDismiss();\n  }, [onDismiss, onCurrencySelect]); // for token import view\n\n  const prevView = usePrevious(modalView); // used for import token flow\n\n  const [importToken, setImportToken] = useState(); // used for import list\n\n  const [importList, setImportList] = useState();\n  const [listURL, setListUrl] = useState();\n  const {\n    t\n  } = useTranslation();\n  const config = {\n    [CurrencyModalView.search]: {\n      title: t('Select a Token'),\n      onBack: undefined\n    },\n    [CurrencyModalView.manage]: {\n      title: t('Manage'),\n      onBack: () => setModalView(CurrencyModalView.search)\n    },\n    [CurrencyModalView.importToken]: {\n      title: t('Import Tokens'),\n      onBack: () => setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search)\n    },\n    [CurrencyModalView.importList]: {\n      title: t('Import List'),\n      onBack: () => setModalView(CurrencyModalView.search)\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(StyledModalContainer, {\n    minWidth: \"300px\",\n    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n      children: [/*#__PURE__*/_jsxDEV(ModalTitle, {\n        children: [config[modalView].onBack && /*#__PURE__*/_jsxDEV(ModalBackButton, {\n          onBack: config[modalView].onBack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 40\n        }, this), /*#__PURE__*/_jsxDEV(Heading, {\n          color: \"background\",\n          children: config[modalView].title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), !isMobile && /*#__PURE__*/_jsxDEV(ModalCloseButton, {\n        onDismiss: onDismiss\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledModalBody, {\n      children: [modalView === CurrencyModalView.search ? /*#__PURE__*/_jsxDEV(CurrencySearch, {\n        onCurrencySelect: handleCurrencySelect,\n        selectedCurrency: selectedCurrency,\n        otherSelectedCurrency: otherSelectedCurrency,\n        showCommonBases: showCommonBases,\n        showImportView: () => setModalView(CurrencyModalView.importToken),\n        setImportToken: setImportToken\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this) : modalView === CurrencyModalView.importToken && importToken ? /*#__PURE__*/_jsxDEV(ImportToken, {\n        tokens: [importToken],\n        handleCurrencySelect: handleCurrencySelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this) : modalView === CurrencyModalView.importList && importList && listURL ? /*#__PURE__*/_jsxDEV(ImportList, {\n        list: importList,\n        listURL: listURL,\n        onImport: () => setModalView(CurrencyModalView.manage)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this) : modalView === CurrencyModalView.manage ? /*#__PURE__*/_jsxDEV(Manage, {\n        setModalView: setModalView,\n        setImportToken: setImportToken,\n        setImportList: setImportList,\n        setListUrl: setListUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this) : '', modalView === CurrencyModalView.search && /*#__PURE__*/_jsxDEV(Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          scale: \"sm\",\n          variant: \"contrast\",\n          onClick: () => setModalView(CurrencyModalView.manage),\n          width: \"100%\",\n          children: t('Manage Tokens')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CurrencySearchModal, \"glRcQDzCqSmFPFTtrjPTTqjbXHg=\", false, function () {\n  return [useMatchBreakpoints, usePrevious, useTranslation];\n});\n\n_c4 = CurrencySearchModal;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Footer\");\n$RefreshReg$(_c2, \"StyledModalContainer\");\n$RefreshReg$(_c3, \"StyledModalBody\");\n$RefreshReg$(_c4, \"CurrencySearchModal\");","map":{"version":3,"sources":["D:/new/1TronicSwap-Build/src/components/SearchModal/CurrencySearchModal.tsx"],"names":["React","useCallback","useState","ModalContainer","ModalHeader","ModalTitle","ModalBackButton","ModalCloseButton","ModalBody","Heading","Button","useMatchBreakpoints","styled","usePrevious","useTranslation","CurrencySearch","ImportToken","Manage","ImportList","CurrencyModalView","Footer","div","theme","colors","backgroundAlt","StyledModalContainer","StyledModalBody","CurrencySearchModal","onDismiss","onCurrencySelect","selectedCurrency","otherSelectedCurrency","showCommonBases","isXl","isMobile","modalView","setModalView","search","handleCurrencySelect","currency","prevView","importToken","setImportToken","importList","setImportList","listURL","setListUrl","t","config","title","onBack","undefined","manage"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react'\r\nimport { Currency, Token } from 'utils/@sdk'\r\nimport {\r\n  ModalContainer,\r\n  ModalHeader,\r\n  ModalTitle,\r\n  ModalBackButton,\r\n  ModalCloseButton,\r\n  ModalBody,\r\n  InjectedModalProps,\r\n  Heading,\r\n  Button,\r\n  useMatchBreakpoints,\r\n} from 'components/_uikit'\r\nimport styled from 'styled-components'\r\nimport usePrevious from 'hooks/usePreviousValue'\r\nimport { TokenList } from 'utils/@uniswap/token-lists'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport CurrencySearch from './CurrencySearch'\r\nimport ImportToken from './ImportToken'\r\nimport Manage from './Manage'\r\nimport ImportList from './ImportList'\r\nimport { CurrencyModalView } from './types'\r\n\r\nconst Footer = styled.div`\r\n  width: 100%;\r\n  // background-color: ${({ theme }) => theme.colors.backgroundAlt};\r\n  text-align: center;\r\n`\r\n\r\nconst StyledModalContainer = styled(ModalContainer)`\r\n  max-width: 300px;\r\n  width: 100%;\r\n`\r\n\r\nconst StyledModalBody = styled(ModalBody)`\r\n  padding: 12px 24px;\r\n`\r\n\r\ninterface CurrencySearchModalProps extends InjectedModalProps {\r\n  selectedCurrency?: Currency | null\r\n  onCurrencySelect: (currency: Currency) => void\r\n  otherSelectedCurrency?: Currency | null\r\n  showCommonBases?: boolean\r\n}\r\n\r\nexport default function CurrencySearchModal({\r\n  onDismiss = () => null,\r\n  onCurrencySelect,\r\n  selectedCurrency,\r\n  otherSelectedCurrency,\r\n  showCommonBases = false,\r\n}: CurrencySearchModalProps) {\r\n  const { isXl } = useMatchBreakpoints();\r\n  const isMobile = isXl === false;\r\n  const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.search)\r\n\r\n  const handleCurrencySelect = useCallback(\r\n    (currency: Currency) => {\r\n      onCurrencySelect(currency)\r\n      onDismiss()\r\n    },\r\n    [onDismiss, onCurrencySelect],\r\n  )\r\n\r\n  // for token import view\r\n  const prevView = usePrevious(modalView)\r\n\r\n  // used for import token flow\r\n  const [importToken, setImportToken] = useState<Token | undefined>()\r\n\r\n  // used for import list\r\n  const [importList, setImportList] = useState<TokenList | undefined>()\r\n  const [listURL, setListUrl] = useState<string | undefined>()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const config = {\r\n    [CurrencyModalView.search]: { title: t('Select a Token'), onBack: undefined },\r\n    [CurrencyModalView.manage]: { title: t('Manage'), onBack: () => setModalView(CurrencyModalView.search) },\r\n    [CurrencyModalView.importToken]: {\r\n      title: t('Import Tokens'),\r\n      onBack: () =>\r\n        setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search),\r\n    },\r\n    [CurrencyModalView.importList]: { title: t('Import List'), onBack: () => setModalView(CurrencyModalView.search) },\r\n  }\r\n\r\n  return (\r\n    <StyledModalContainer minWidth=\"300px\">\r\n      <ModalHeader>\r\n        <ModalTitle>\r\n          {config[modalView].onBack && <ModalBackButton onBack={config[modalView].onBack} />}\r\n          <Heading color=\"background\">{config[modalView].title}</Heading>\r\n        </ModalTitle>\r\n        {!isMobile && <ModalCloseButton onDismiss={onDismiss} />}\r\n      </ModalHeader>\r\n      <StyledModalBody>\r\n        {modalView === CurrencyModalView.search ? (\r\n          <CurrencySearch\r\n            onCurrencySelect={handleCurrencySelect}\r\n            selectedCurrency={selectedCurrency}\r\n            otherSelectedCurrency={otherSelectedCurrency}\r\n            showCommonBases={showCommonBases}\r\n            showImportView={() => setModalView(CurrencyModalView.importToken)}\r\n            setImportToken={setImportToken}\r\n          />\r\n        ) : modalView === CurrencyModalView.importToken && importToken ? (\r\n          <ImportToken tokens={[importToken]} handleCurrencySelect={handleCurrencySelect} />\r\n        ) : modalView === CurrencyModalView.importList && importList && listURL ? (\r\n          <ImportList list={importList} listURL={listURL} onImport={() => setModalView(CurrencyModalView.manage)} />\r\n        ) : modalView === CurrencyModalView.manage ? (\r\n          <Manage\r\n            setModalView={setModalView}\r\n            setImportToken={setImportToken}\r\n            setImportList={setImportList}\r\n            setListUrl={setListUrl}\r\n          />\r\n        ) : (\r\n          ''\r\n        )}\r\n        {modalView === CurrencyModalView.search && (\r\n          <Footer>\r\n            <Button\r\n              scale=\"sm\"\r\n              variant=\"contrast\"\r\n              onClick={() => setModalView(CurrencyModalView.manage)}\r\n              width=\"100%\"\r\n            >\r\n              {t('Manage Tokens')}\r\n            </Button>\r\n          </Footer>\r\n        )}\r\n      </StyledModalBody>\r\n    </StyledModalContainer>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}