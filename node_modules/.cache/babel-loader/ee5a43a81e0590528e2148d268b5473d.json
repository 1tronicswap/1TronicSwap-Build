{"ast":null,"code":"var _jsxFileName = \"D:\\\\new\\\\1TronicSwap-Build\\\\src\\\\components\\\\RoiCalculatorModal\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Modal, Text, Button, Flex, ButtonMenu, Checkbox, BalanceInput, HelpIcon, ButtonMenuItem, useTooltip } from 'components/_uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { getBalanceNumber } from 'utils/formatBalance';\nimport useActiveWeb3React from 'hooks/useActiveWeb3React';\nimport RoiCalculatorFooter from './RoiCalculatorFooter';\nimport RoiCard from './RoiCard';\nimport useRoiCalculatorReducer, { CalculatorMode, EditingCurrency } from './useRoiCalculatorReducer';\nimport AnimatedArrow from './AnimatedArrow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledModal = styled(Modal)`\n  width: 345px;\n  & > :nth-child(2) {\n    padding: 0;\n  }\n`;\n_c = StyledModal;\nconst ScrollableContainer = styled.div`\n  padding: 24px;\n  max-height: 500px;\n  overflow-y: auto;\n  ${_ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.mediaQueries.sm;\n}} {\n    max-height: none;\n  }\n`;\n_c2 = ScrollableContainer;\nconst FullWidthButtonMenu = styled(ButtonMenu)`\n  width: 100%;\n\n  & > button {\n    width: 100%;\n  }\n\n  opacity: ${_ref2 => {\n  let {\n    disabled\n  } = _ref2;\n  return disabled ? 0.5 : 1;\n}};\n`;\n_c3 = FullWidthButtonMenu;\n\nconst RoiCalculatorModal = _ref3 => {\n  _s();\n\n  let {\n    onDismiss,\n    onBack,\n    earningTokenPrice,\n    apr,\n    displayApr,\n    linkLabel,\n    linkHref,\n    stakingTokenBalance,\n    stakingTokenSymbol,\n    stakingTokenPrice,\n    multiplier,\n    initialValue,\n    earningTokenSymbol = 'ZFAI',\n    autoCompoundFrequency = 0,\n    performanceFee = 0,\n    isFarm = false\n  } = _ref3;\n  const {\n    t\n  } = useTranslation();\n  const {\n    account\n  } = useActiveWeb3React();\n  const balanceInputRef = useRef(null);\n  const {\n    state,\n    setPrincipalFromUSDValue,\n    setPrincipalFromTokenValue,\n    setStakingDuration,\n    toggleCompounding,\n    toggleEditingCurrency,\n    setCompoundingFrequency,\n    setCalculatorMode,\n    setTargetRoi\n  } = useRoiCalculatorReducer(stakingTokenPrice, earningTokenPrice, apr, autoCompoundFrequency, performanceFee);\n  const {\n    compounding,\n    activeCompoundingIndex,\n    stakingDuration,\n    editingCurrency\n  } = state.controls;\n  const {\n    principalAsUSD,\n    principalAsToken\n  } = state.data; // Auto-focus input on opening modal\n\n  useEffect(() => {\n    if (balanceInputRef.current) {\n      balanceInputRef.current.focus();\n    }\n  }, []); // If user comes to calculator from staking modal - initialize with whatever they put in there\n\n  useEffect(() => {\n    if (initialValue) {\n      setPrincipalFromTokenValue(initialValue);\n    }\n  }, [initialValue, setPrincipalFromTokenValue]);\n  const {\n    targetRef,\n    tooltip,\n    tooltipVisible\n  } = useTooltip(isFarm ? t('“My Balance” here includes both LP Tokens in your wallet, and LP Tokens already staked in this farm.') : t('“My Balance” here includes both %assetSymbol% in your wallet, and %assetSymbol% already staked in this pool.', {\n    assetSymbol: stakingTokenSymbol\n  }), {\n    placement: 'top-end',\n    tooltipOffset: [20, 10]\n  });\n\n  const onBalanceFocus = () => {\n    setCalculatorMode(CalculatorMode.ROI_BASED_ON_PRINCIPAL);\n  };\n\n  const editingUnit = editingCurrency === EditingCurrency.TOKEN ? stakingTokenSymbol : 'USD';\n  const editingValue = editingCurrency === EditingCurrency.TOKEN ? principalAsToken : principalAsUSD;\n  const conversionUnit = editingCurrency === EditingCurrency.TOKEN ? 'USD' : stakingTokenSymbol;\n  const conversionValue = editingCurrency === EditingCurrency.TOKEN ? principalAsUSD : principalAsToken;\n  const onUserInput = editingCurrency === EditingCurrency.TOKEN ? setPrincipalFromTokenValue : setPrincipalFromUSDValue;\n  return /*#__PURE__*/_jsxDEV(StyledModal, {\n    title: t('ROI Calculator'),\n    onDismiss: onBack || onDismiss,\n    onBack: onBack !== null && onBack !== void 0 ? onBack : null,\n    headerBackground: \"gradients.cardHeader\",\n    children: [/*#__PURE__*/_jsxDEV(ScrollableContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        flexDirection: \"column\",\n        mb: \"8px\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          color: \"secondary\",\n          bold: true,\n          fontSize: \"12px\",\n          textTransform: \"uppercase\",\n          children: t('%asset% staked', {\n            asset: stakingTokenSymbol\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BalanceInput, {\n          currencyValue: `${conversionValue} ${conversionUnit}`,\n          innerRef: balanceInputRef,\n          placeholder: \"0.00\",\n          value: editingValue,\n          unit: editingUnit,\n          onUserInput: onUserInput,\n          switchEditingUnits: toggleEditingCurrency,\n          onFocus: onBalanceFocus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          justifyContent: \"space-between\",\n          mt: \"8px\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            scale: \"xs\",\n            p: \"4px 16px\",\n            width: \"68px\",\n            variant: \"tertiary\",\n            onClick: () => setPrincipalFromUSDValue('100'),\n            children: \"$100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            scale: \"xs\",\n            p: \"4px 16px\",\n            width: \"68px\",\n            variant: \"tertiary\",\n            onClick: () => setPrincipalFromUSDValue('1000'),\n            children: \"$1000\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            disabled: stakingTokenBalance.lte(0) || !account,\n            scale: \"xs\",\n            p: \"4px 16px\",\n            width: \"128px\",\n            variant: \"tertiary\",\n            onClick: () => setPrincipalFromUSDValue(getBalanceNumber(stakingTokenBalance.times(stakingTokenPrice)).toString()),\n            children: t('My Balance').toLocaleUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            ref: targetRef,\n            children: /*#__PURE__*/_jsxDEV(HelpIcon, {\n              width: \"16px\",\n              height: \"16px\",\n              color: \"textSubtle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), tooltipVisible && tooltip]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          mt: \"24px\",\n          color: \"secondary\",\n          bold: true,\n          fontSize: \"12px\",\n          textTransform: \"uppercase\",\n          children: t('Staked for')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FullWidthButtonMenu, {\n          activeIndex: stakingDuration,\n          onItemClick: setStakingDuration,\n          scale: \"sm\",\n          children: [/*#__PURE__*/_jsxDEV(ButtonMenuItem, {\n            variant: \"tertiary\",\n            children: t('1D')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonMenuItem, {\n            variant: \"tertiary\",\n            children: t('7D')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonMenuItem, {\n            variant: \"tertiary\",\n            children: t('30D')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonMenuItem, {\n            variant: \"tertiary\",\n            children: t('1Y')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), autoCompoundFrequency === 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            mt: \"24px\",\n            color: \"secondary\",\n            bold: true,\n            fontSize: \"12px\",\n            textTransform: \"uppercase\",\n            children: t('Compounding every')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Flex, {\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Flex, {\n              flex: \"1\",\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                scale: \"sm\",\n                checked: compounding,\n                onChange: toggleCompounding\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Flex, {\n              flex: \"6\",\n              children: /*#__PURE__*/_jsxDEV(FullWidthButtonMenu, {\n                disabled: !compounding,\n                activeIndex: activeCompoundingIndex,\n                onItemClick: setCompoundingFrequency,\n                scale: \"sm\",\n                children: [/*#__PURE__*/_jsxDEV(ButtonMenuItem, {\n                  children: t('1D')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ButtonMenuItem, {\n                  children: t('7D')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ButtonMenuItem, {\n                  children: t('14D')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ButtonMenuItem, {\n                  children: t('30D')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AnimatedArrow, {\n        calculatorState: state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        children: /*#__PURE__*/_jsxDEV(RoiCard, {\n          earningTokenSymbol: earningTokenSymbol,\n          calculatorState: state,\n          setTargetRoi: setTargetRoi,\n          setCalculatorMode: setCalculatorMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RoiCalculatorFooter, {\n      isFarm: isFarm,\n      apr: apr,\n      displayApr: displayApr,\n      autoCompoundFrequency: autoCompoundFrequency,\n      multiplier: multiplier,\n      linkLabel: linkLabel,\n      linkHref: linkHref,\n      performanceFee: performanceFee\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RoiCalculatorModal, \"Puo5jC6alPFAV3cGTHZoq0kxCjk=\", false, function () {\n  return [useTranslation, useActiveWeb3React, useRoiCalculatorReducer, useTooltip];\n});\n\n_c4 = RoiCalculatorModal;\nexport default RoiCalculatorModal;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"StyledModal\");\n$RefreshReg$(_c2, \"ScrollableContainer\");\n$RefreshReg$(_c3, \"FullWidthButtonMenu\");\n$RefreshReg$(_c4, \"RoiCalculatorModal\");","map":{"version":3,"sources":["D:/new/1TronicSwap-Build/src/components/RoiCalculatorModal/index.tsx"],"names":["React","useRef","useEffect","styled","Modal","Text","Button","Flex","ButtonMenu","Checkbox","BalanceInput","HelpIcon","ButtonMenuItem","useTooltip","useTranslation","getBalanceNumber","useActiveWeb3React","RoiCalculatorFooter","RoiCard","useRoiCalculatorReducer","CalculatorMode","EditingCurrency","AnimatedArrow","StyledModal","ScrollableContainer","div","theme","mediaQueries","sm","FullWidthButtonMenu","disabled","RoiCalculatorModal","onDismiss","onBack","earningTokenPrice","apr","displayApr","linkLabel","linkHref","stakingTokenBalance","stakingTokenSymbol","stakingTokenPrice","multiplier","initialValue","earningTokenSymbol","autoCompoundFrequency","performanceFee","isFarm","t","account","balanceInputRef","state","setPrincipalFromUSDValue","setPrincipalFromTokenValue","setStakingDuration","toggleCompounding","toggleEditingCurrency","setCompoundingFrequency","setCalculatorMode","setTargetRoi","compounding","activeCompoundingIndex","stakingDuration","editingCurrency","controls","principalAsUSD","principalAsToken","data","current","focus","targetRef","tooltip","tooltipVisible","assetSymbol","placement","tooltipOffset","onBalanceFocus","ROI_BASED_ON_PRINCIPAL","editingUnit","TOKEN","editingValue","conversionUnit","conversionValue","onUserInput","asset","lte","times","toString","toLocaleUpperCase"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport {\r\n  Modal,\r\n  Text,\r\n  Button,\r\n  Flex,\r\n  ButtonMenu,\r\n  Checkbox,\r\n  BalanceInput,\r\n  HelpIcon,\r\n  ButtonMenuItem,\r\n  useTooltip,\r\n} from 'components/_uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport RoiCalculatorFooter from './RoiCalculatorFooter'\r\nimport RoiCard from './RoiCard'\r\nimport useRoiCalculatorReducer, { CalculatorMode, EditingCurrency } from './useRoiCalculatorReducer'\r\nimport AnimatedArrow from './AnimatedArrow'\r\n\r\ninterface RoiCalculatorModalProps {\r\n  onDismiss?: () => void\r\n  onBack?: () => void\r\n  earningTokenPrice: number\r\n  apr: number\r\n  displayApr?: string\r\n  linkLabel: string\r\n  linkHref: string\r\n  stakingTokenBalance: BigNumber\r\n  stakingTokenSymbol: string\r\n  stakingTokenPrice: number\r\n  earningTokenSymbol?: string\r\n  multiplier?: string\r\n  autoCompoundFrequency?: number\r\n  performanceFee?: number\r\n  isFarm?: boolean\r\n  initialValue?: string\r\n}\r\n\r\nconst StyledModal = styled(Modal)`\r\n  width: 345px;\r\n  & > :nth-child(2) {\r\n    padding: 0;\r\n  }\r\n`\r\n\r\nconst ScrollableContainer = styled.div`\r\n  padding: 24px;\r\n  max-height: 500px;\r\n  overflow-y: auto;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    max-height: none;\r\n  }\r\n`\r\n\r\nconst FullWidthButtonMenu = styled(ButtonMenu)<{ disabled?: boolean }>`\r\n  width: 100%;\r\n\r\n  & > button {\r\n    width: 100%;\r\n  }\r\n\r\n  opacity: ${({ disabled }) => (disabled ? 0.5 : 1)};\r\n`\r\n\r\nconst RoiCalculatorModal: React.FC<RoiCalculatorModalProps> = ({\r\n  onDismiss,\r\n  onBack,\r\n  earningTokenPrice,\r\n  apr,\r\n  displayApr,\r\n  linkLabel,\r\n  linkHref,\r\n  stakingTokenBalance,\r\n  stakingTokenSymbol,\r\n  stakingTokenPrice,\r\n  multiplier,\r\n  initialValue,\r\n  earningTokenSymbol = 'ZFAI',\r\n  autoCompoundFrequency = 0,\r\n  performanceFee = 0,\r\n  isFarm = false,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useActiveWeb3React()\r\n  const balanceInputRef = useRef<HTMLInputElement | null>(null)\r\n\r\n  const {\r\n    state,\r\n    setPrincipalFromUSDValue,\r\n    setPrincipalFromTokenValue,\r\n    setStakingDuration,\r\n    toggleCompounding,\r\n    toggleEditingCurrency,\r\n    setCompoundingFrequency,\r\n    setCalculatorMode,\r\n    setTargetRoi,\r\n  } = useRoiCalculatorReducer(stakingTokenPrice, earningTokenPrice, apr, autoCompoundFrequency, performanceFee)\r\n\r\n  const { compounding, activeCompoundingIndex, stakingDuration, editingCurrency } = state.controls\r\n  const { principalAsUSD, principalAsToken } = state.data\r\n\r\n  // Auto-focus input on opening modal\r\n  useEffect(() => {\r\n    if (balanceInputRef.current) {\r\n      balanceInputRef.current.focus()\r\n    }\r\n  }, [])\r\n\r\n  // If user comes to calculator from staking modal - initialize with whatever they put in there\r\n  useEffect(() => {\r\n    if (initialValue) {\r\n      setPrincipalFromTokenValue(initialValue)\r\n    }\r\n  }, [initialValue, setPrincipalFromTokenValue])\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    isFarm\r\n      ? t('“My Balance” here includes both LP Tokens in your wallet, and LP Tokens already staked in this farm.')\r\n      : t(\r\n          '“My Balance” here includes both %assetSymbol% in your wallet, and %assetSymbol% already staked in this pool.',\r\n          { assetSymbol: stakingTokenSymbol },\r\n        ),\r\n    { placement: 'top-end', tooltipOffset: [20, 10] },\r\n  )\r\n\r\n  const onBalanceFocus = () => {\r\n    setCalculatorMode(CalculatorMode.ROI_BASED_ON_PRINCIPAL)\r\n  }\r\n\r\n  const editingUnit = editingCurrency === EditingCurrency.TOKEN ? stakingTokenSymbol : 'USD'\r\n  const editingValue = editingCurrency === EditingCurrency.TOKEN ? principalAsToken : principalAsUSD\r\n  const conversionUnit = editingCurrency === EditingCurrency.TOKEN ? 'USD' : stakingTokenSymbol\r\n  const conversionValue = editingCurrency === EditingCurrency.TOKEN ? principalAsUSD : principalAsToken\r\n  const onUserInput = editingCurrency === EditingCurrency.TOKEN ? setPrincipalFromTokenValue : setPrincipalFromUSDValue\r\n\r\n  return (\r\n    <StyledModal\r\n      title={t('ROI Calculator')}\r\n      onDismiss={onBack || onDismiss}\r\n      onBack={onBack ?? null}\r\n      headerBackground=\"gradients.cardHeader\"\r\n    >\r\n      <ScrollableContainer>\r\n        <Flex flexDirection=\"column\" mb=\"8px\">\r\n          <Text color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\r\n            {t('%asset% staked', { asset: stakingTokenSymbol })}\r\n          </Text>\r\n          <BalanceInput\r\n            currencyValue={`${conversionValue} ${conversionUnit}`}\r\n            innerRef={balanceInputRef}\r\n            placeholder=\"0.00\"\r\n            value={editingValue}\r\n            unit={editingUnit}\r\n            onUserInput={onUserInput}\r\n            switchEditingUnits={toggleEditingCurrency}\r\n            onFocus={onBalanceFocus}\r\n          />\r\n          <Flex justifyContent=\"space-between\" mt=\"8px\">\r\n            <Button\r\n              scale=\"xs\"\r\n              p=\"4px 16px\"\r\n              width=\"68px\"\r\n              variant=\"tertiary\"\r\n              onClick={() => setPrincipalFromUSDValue('100')}\r\n            >\r\n              $100\r\n            </Button>\r\n            <Button\r\n              scale=\"xs\"\r\n              p=\"4px 16px\"\r\n              width=\"68px\"\r\n              variant=\"tertiary\"\r\n              onClick={() => setPrincipalFromUSDValue('1000')}\r\n            >\r\n              $1000\r\n            </Button>\r\n            <Button\r\n              disabled={stakingTokenBalance.lte(0) || !account}\r\n              scale=\"xs\"\r\n              p=\"4px 16px\"\r\n              width=\"128px\"\r\n              variant=\"tertiary\"\r\n              onClick={() =>\r\n                setPrincipalFromUSDValue(getBalanceNumber(stakingTokenBalance.times(stakingTokenPrice)).toString())\r\n              }\r\n            >\r\n              {t('My Balance').toLocaleUpperCase()}\r\n            </Button>\r\n            <span ref={targetRef}>\r\n              <HelpIcon width=\"16px\" height=\"16px\" color=\"textSubtle\" />\r\n            </span>\r\n            {tooltipVisible && tooltip}\r\n          </Flex>\r\n          <Text mt=\"24px\" color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\r\n            {t('Staked for')}\r\n          </Text>\r\n          <FullWidthButtonMenu activeIndex={stakingDuration} onItemClick={setStakingDuration} scale=\"sm\">\r\n            <ButtonMenuItem variant=\"tertiary\">{t('1D')}</ButtonMenuItem>\r\n            <ButtonMenuItem variant=\"tertiary\">{t('7D')}</ButtonMenuItem>\r\n            <ButtonMenuItem variant=\"tertiary\">{t('30D')}</ButtonMenuItem>\r\n            <ButtonMenuItem variant=\"tertiary\">{t('1Y')}</ButtonMenuItem>\r\n          </FullWidthButtonMenu>\r\n          {autoCompoundFrequency === 0 && (\r\n            <>\r\n              <Text mt=\"24px\" color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\r\n                {t('Compounding every')}\r\n              </Text>\r\n              <Flex alignItems=\"center\">\r\n                <Flex flex=\"1\">\r\n                  <Checkbox scale=\"sm\" checked={compounding} onChange={toggleCompounding} />\r\n                </Flex>\r\n                <Flex flex=\"6\">\r\n                  <FullWidthButtonMenu\r\n                    disabled={!compounding}\r\n                    activeIndex={activeCompoundingIndex}\r\n                    onItemClick={setCompoundingFrequency}\r\n                    scale=\"sm\"\r\n                  >\r\n                    <ButtonMenuItem>{t('1D')}</ButtonMenuItem>\r\n                    <ButtonMenuItem>{t('7D')}</ButtonMenuItem>\r\n                    <ButtonMenuItem>{t('14D')}</ButtonMenuItem>\r\n                    <ButtonMenuItem>{t('30D')}</ButtonMenuItem>\r\n                  </FullWidthButtonMenu>\r\n                </Flex>\r\n              </Flex>\r\n            </>\r\n          )}\r\n        </Flex>\r\n        <AnimatedArrow calculatorState={state} />\r\n        <Flex>\r\n          <RoiCard\r\n            earningTokenSymbol={earningTokenSymbol}\r\n            calculatorState={state}\r\n            setTargetRoi={setTargetRoi}\r\n            setCalculatorMode={setCalculatorMode}\r\n          />\r\n        </Flex>\r\n      </ScrollableContainer>\r\n      <RoiCalculatorFooter\r\n        isFarm={isFarm}\r\n        apr={apr}\r\n        displayApr={displayApr}\r\n        autoCompoundFrequency={autoCompoundFrequency}\r\n        multiplier={multiplier}\r\n        linkLabel={linkLabel}\r\n        linkHref={linkHref}\r\n        performanceFee={performanceFee}\r\n      />\r\n    </StyledModal>\r\n  )\r\n}\r\n\r\nexport default RoiCalculatorModal\r\n"]},"metadata":{},"sourceType":"module"}