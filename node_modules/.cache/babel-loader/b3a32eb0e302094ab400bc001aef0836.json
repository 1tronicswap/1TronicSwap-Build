{"ast":null,"code":"var _jsxFileName = \"D:\\\\new\\\\1TronicSwap-Build\\\\src\\\\components\\\\_uikit\\\\components\\\\Image\\\\Image.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport observerOptions from \"./options\";\nimport Wrapper from \"./Wrapper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledImage = styled.img`\n  height: 100%;\n  left: 0;\n  position: absolute;\n  top: 0;\n  width: 100%;\n`;\n_c = StyledImage;\nconst Placeholder = styled.div`\n  height: 100%;\n  left: 0;\n  position: absolute;\n  top: 0;\n  width: 100%;\n`;\n_c2 = Placeholder;\n\nconst Image = _ref => {\n  _s();\n\n  let {\n    src,\n    alt,\n    width,\n    height,\n    ...props\n  } = _ref;\n  const imgRef = useRef(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  useEffect(() => {\n    let observer;\n\n    if (imgRef.current) {\n      observer = new IntersectionObserver(entries => {\n        entries.forEach(entry => {\n          const {\n            isIntersecting\n          } = entry;\n\n          if (isIntersecting) {\n            setIsLoaded(true);\n            observer.disconnect();\n          }\n        });\n      }, observerOptions);\n      observer.observe(imgRef.current);\n    }\n\n    return () => {\n      if (observer) {\n        observer.disconnect();\n      }\n    };\n  }, [src]);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    ref: imgRef,\n    height: height,\n    width: width,\n    ...props,\n    children: isLoaded ? /*#__PURE__*/_jsxDEV(StyledImage, {\n      src: src,\n      alt: alt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(Placeholder, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 57\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Image, \"zxhXzMCvPpw79Y0yuQUUXMF+7SI=\");\n\n_c3 = Image;\nexport default Image;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledImage\");\n$RefreshReg$(_c2, \"Placeholder\");\n$RefreshReg$(_c3, \"Image\");","map":{"version":3,"sources":["D:/new/1TronicSwap-Build/src/components/_uikit/components/Image/Image.tsx"],"names":["React","useEffect","useRef","useState","styled","observerOptions","Wrapper","StyledImage","img","Placeholder","div","Image","src","alt","width","height","props","imgRef","isLoaded","setIsLoaded","observer","current","IntersectionObserver","entries","forEach","entry","isIntersecting","disconnect","observe"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,eAAP,MAA4B,WAA5B;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAGA,MAAMC,WAAW,GAAGH,MAAM,CAACI,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA,CANA;KAAMD,W;AAQN,MAAME,WAAW,GAAGL,MAAM,CAACM,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA,CANA;MAAMD,W;;AAQN,MAAME,KAA2B,GAAG,QAA2C;AAAA;;AAAA,MAA1C;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,GAAP;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA,MAAnB;AAA2B,OAAGC;AAA9B,GAA0C;AAC7E,QAAMC,MAAM,GAAGf,MAAM,CAAiB,IAAjB,CAArB;AACA,QAAM,CAACgB,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,KAAD,CAAxC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAImB,QAAJ;;AAEA,QAAIH,MAAM,CAACI,OAAX,EAAoB;AAClBD,MAAAA,QAAQ,GAAG,IAAIE,oBAAJ,CAA0BC,OAAD,IAAa;AAC/CA,QAAAA,OAAO,CAACC,OAAR,CAAiBC,KAAD,IAAW;AACzB,gBAAM;AAAEC,YAAAA;AAAF,cAAqBD,KAA3B;;AACA,cAAIC,cAAJ,EAAoB;AAClBP,YAAAA,WAAW,CAAC,IAAD,CAAX;AACAC,YAAAA,QAAQ,CAACO,UAAT;AACD;AACF,SAND;AAOD,OARU,EAQRtB,eARQ,CAAX;AASAe,MAAAA,QAAQ,CAACQ,OAAT,CAAiBX,MAAM,CAACI,OAAxB;AACD;;AAED,WAAO,MAAM;AACX,UAAID,QAAJ,EAAc;AACZA,QAAAA,QAAQ,CAACO,UAAT;AACD;AACF,KAJD;AAKD,GArBQ,EAqBN,CAACf,GAAD,CArBM,CAAT;AAuBA,sBACE,QAAC,OAAD;AAAS,IAAA,GAAG,EAAEK,MAAd;AAAsB,IAAA,MAAM,EAAEF,MAA9B;AAAsC,IAAA,KAAK,EAAED,KAA7C;AAAA,OAAwDE,KAAxD;AAAA,cACGE,QAAQ,gBAAG,QAAC,WAAD;AAAa,MAAA,GAAG,EAAEN,GAAlB;AAAuB,MAAA,GAAG,EAAEC;AAA5B;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAyC,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADpD;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAhCD;;GAAMF,K;;MAAAA,K;AAkCN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport observerOptions from \"./options\";\r\nimport Wrapper from \"./Wrapper\";\r\nimport { ImageProps } from \"./types\";\r\n\r\nconst StyledImage = styled.img`\r\n  height: 100%;\r\n  left: 0;\r\n  position: absolute;\r\n  top: 0;\r\n  width: 100%;\r\n`;\r\n\r\nconst Placeholder = styled.div`\r\n  height: 100%;\r\n  left: 0;\r\n  position: absolute;\r\n  top: 0;\r\n  width: 100%;\r\n`;\r\n\r\nconst Image: React.FC<ImageProps> = ({ src, alt, width, height, ...props }) => {\r\n  const imgRef = useRef<HTMLDivElement>(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let observer: IntersectionObserver;\r\n\r\n    if (imgRef.current) {\r\n      observer = new IntersectionObserver((entries) => {\r\n        entries.forEach((entry) => {\r\n          const { isIntersecting } = entry;\r\n          if (isIntersecting) {\r\n            setIsLoaded(true);\r\n            observer.disconnect();\r\n          }\r\n        });\r\n      }, observerOptions);\r\n      observer.observe(imgRef.current);\r\n    }\r\n\r\n    return () => {\r\n      if (observer) {\r\n        observer.disconnect();\r\n      }\r\n    };\r\n  }, [src]);\r\n\r\n  return (\r\n    <Wrapper ref={imgRef} height={height} width={width} {...props}>\r\n      {isLoaded ? <StyledImage src={src} alt={alt} /> : <Placeholder />}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Image;\r\n"]},"metadata":{},"sourceType":"module"}