{"ast":null,"code":"var _jsxFileName = \"D:\\\\new\\\\1TronicSwap-Build\\\\src\\\\views\\\\Farms\\\\components\\\\FarmCard\\\\ApyButton.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Flex, IconButton, useModal, CalculateIcon } from '@zaigar-finance/uikit';\nimport RoiCalculatorModal from 'components/RoiCalculatorModal';\nimport { useTranslation } from 'contexts/Localization';\nimport { useFarmUser, useLpTokenPrice, useBusdPriceFromPid } from 'state/farms/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ApyLabelContainer = styled(Flex)`\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.5;\n  }\n`;\n_c = ApyLabelContainer;\n\nconst ApyButton = _ref => {\n  _s();\n\n  let {\n    variant,\n    pid,\n    lpLabel,\n    lpSymbol,\n    cakePrice,\n    apr,\n    isTokenOnly,\n    multiplier,\n    displayApr,\n    addLiquidityUrl\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  const lpPrice = useLpTokenPrice(lpSymbol);\n  const tokenPrice = useBusdPriceFromPid(pid);\n  const {\n    tokenBalance,\n    stakedBalance\n  } = useFarmUser(pid);\n  const [onPresentApyModal] = useModal( /*#__PURE__*/_jsxDEV(RoiCalculatorModal, {\n    linkLabel: t('Get %symbol%', {\n      symbol: lpLabel\n    }),\n    stakingTokenBalance: stakedBalance.plus(tokenBalance),\n    stakingTokenSymbol: lpSymbol,\n    stakingTokenPrice: isTokenOnly ? tokenPrice.toNumber() : lpPrice.toNumber(),\n    earningTokenPrice: cakePrice.toNumber(),\n    apr: apr,\n    multiplier: multiplier,\n    displayApr: displayApr,\n    linkHref: addLiquidityUrl,\n    isFarm: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this));\n\n  const handleClickButton = event => {\n    event.stopPropagation();\n    onPresentApyModal();\n  };\n\n  return /*#__PURE__*/_jsxDEV(ApyLabelContainer, {\n    alignItems: \"center\",\n    children: [displayApr, \" %\", variant === 'text-and-button' && /*#__PURE__*/_jsxDEV(IconButton, {\n      variant: \"text\",\n      scale: \"sm\",\n      ml: \"4px\",\n      onClick: handleClickButton,\n      children: /*#__PURE__*/_jsxDEV(CalculateIcon, {\n        width: \"18px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ApyButton, \"t54OOi+kFYacBpHY9zH+gKULlco=\", false, function () {\n  return [useTranslation, useLpTokenPrice, useBusdPriceFromPid, useFarmUser, useModal];\n});\n\n_c2 = ApyButton;\nexport default ApyButton;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ApyLabelContainer\");\n$RefreshReg$(_c2, \"ApyButton\");","map":{"version":3,"sources":["D:/new/1TronicSwap-Build/src/views/Farms/components/FarmCard/ApyButton.tsx"],"names":["React","styled","Flex","IconButton","useModal","CalculateIcon","RoiCalculatorModal","useTranslation","useFarmUser","useLpTokenPrice","useBusdPriceFromPid","ApyLabelContainer","ApyButton","variant","pid","lpLabel","lpSymbol","cakePrice","apr","isTokenOnly","multiplier","displayApr","addLiquidityUrl","t","lpPrice","tokenPrice","tokenBalance","stakedBalance","onPresentApyModal","symbol","plus","toNumber","handleClickButton","event","stopPropagation"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,QAA3B,EAAqCC,aAArC,QAA0D,uBAA1D;AACA,OAAOC,kBAAP,MAA+B,+BAA/B;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,mBAAvC,QAAkE,mBAAlE;;AAGA,MAAMC,iBAAiB,GAAGV,MAAM,CAACC,IAAD,CAAO;AACvC;AACA;AACA;AACA;AACA;AACA,CANA;KAAMS,iB;;AAqBN,MAAMC,SAAmC,GAAG,QAWtC;AAAA;;AAAA,MAXuC;AAC3CC,IAAAA,OAD2C;AAE3CC,IAAAA,GAF2C;AAG3CC,IAAAA,OAH2C;AAI3CC,IAAAA,QAJ2C;AAK3CC,IAAAA,SAL2C;AAM3CC,IAAAA,GAN2C;AAO3CC,IAAAA,WAP2C;AAQ3CC,IAAAA,UAR2C;AAS3CC,IAAAA,UAT2C;AAU3CC,IAAAA;AAV2C,GAWvC;AACJ,QAAM;AAAEC,IAAAA;AAAF,MAAQhB,cAAc,EAA5B;AACA,QAAMiB,OAAO,GAAGf,eAAe,CAACO,QAAD,CAA/B;AACA,QAAMS,UAAU,GAAGf,mBAAmB,CAACI,GAAD,CAAtC;AACA,QAAM;AAAEY,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAkCnB,WAAW,CAACM,GAAD,CAAnD;AACA,QAAM,CAACc,iBAAD,IAAsBxB,QAAQ,eAClC,QAAC,kBAAD;AACE,IAAA,SAAS,EAAGmB,CAAC,CAAC,cAAD,EAAiB;AAAEM,MAAAA,MAAM,EAAEd;AAAV,KAAjB,CADf;AAEE,IAAA,mBAAmB,EAAKY,aAAa,CAACG,IAAd,CAAmBJ,YAAnB,CAF1B;AAGE,IAAA,kBAAkB,EAAKV,QAHzB;AAIE,IAAA,iBAAiB,EAAKG,WAAW,GAAEM,UAAU,CAACM,QAAX,EAAF,GAA0BP,OAAO,CAACO,QAAR,EAJ7D;AAKE,IAAA,iBAAiB,EAAKd,SAAS,CAACc,QAAV,EALxB;AAME,IAAA,GAAG,EAAKb,GANV;AAOE,IAAA,UAAU,EAAKE,UAPjB;AAQE,IAAA,UAAU,EAAKC,UARjB;AASE,IAAA,QAAQ,EAAKC,eATf;AAUE,IAAA,MAAM;AAVR;AAAA;AAAA;AAAA;AAAA,UADkC,CAApC;;AAeA,QAAMU,iBAAiB,GAAIC,KAAD,IAAiB;AACzCA,IAAAA,KAAK,CAACC,eAAN;AACAN,IAAAA,iBAAiB;AAClB,GAHD;;AAKA,sBACE,QAAC,iBAAD;AAAmB,IAAA,UAAU,EAAE,QAA/B;AAAA,eACEP,UADF,QAEER,OAAO,KAAK,iBAAZ,iBACA,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,MAApB;AAA2B,MAAA,KAAK,EAAG,IAAnC;AAAwC,MAAA,EAAE,EAAG,KAA7C;AAAmD,MAAA,OAAO,EAAKmB,iBAA/D;AAAA,6BACE,QAAC,aAAD;AAAe,QAAA,KAAK,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA9CD;;GAAMpB,S;UAYUL,c,EACEE,e,EACGC,mB,EACqBF,W,EACZJ,Q;;;MAhBxBQ,S;AAgDN,eAAeA,SAAf","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Flex, IconButton, useModal, CalculateIcon } from '@zaigar-finance/uikit'\r\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useFarmUser, useLpTokenPrice, useBusdPriceFromPid } from 'state/farms/hooks'\r\n\r\n\r\nconst ApyLabelContainer = styled(Flex)`\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    opacity: 0.5;\r\n  }\r\n`\r\n\r\nexport interface ApyButtonProps {\r\n  variant: 'text' | 'text-and-button'\r\n  pid: number\r\n  lpSymbol: string\r\n  lpLabel?: string\r\n  isTokenOnly?: boolean\r\n  multiplier: string\r\n  cakePrice?: BigNumber\r\n  apr?: number\r\n  displayApr?: string\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst ApyButton: React.FC<ApyButtonProps> = ({\r\n  variant,\r\n  pid,\r\n  lpLabel,\r\n  lpSymbol,\r\n  cakePrice,\r\n  apr,\r\n  isTokenOnly,\r\n  multiplier,\r\n  displayApr,\r\n  addLiquidityUrl,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const lpPrice = useLpTokenPrice(lpSymbol)\r\n  const tokenPrice = useBusdPriceFromPid(pid)\r\n  const { tokenBalance, stakedBalance } = useFarmUser(pid)\r\n  const [onPresentApyModal] = useModal(\r\n    <RoiCalculatorModal\r\n      linkLabel={ t('Get %symbol%', { symbol: lpLabel }) }\r\n      stakingTokenBalance = { stakedBalance.plus(tokenBalance) }\r\n      stakingTokenSymbol = { lpSymbol }\r\n      stakingTokenPrice = { isTokenOnly? tokenPrice.toNumber() : lpPrice.toNumber() }\r\n      earningTokenPrice = { cakePrice.toNumber() }\r\n      apr = { apr }\r\n      multiplier = { multiplier }\r\n      displayApr = { displayApr }\r\n      linkHref = { addLiquidityUrl }\r\n      isFarm\r\n    />,\r\n  )\r\n\r\n  const handleClickButton = (event): void => {\r\n    event.stopPropagation()\r\n    onPresentApyModal()\r\n  }\r\n\r\n  return (\r\n    <ApyLabelContainer alignItems= \"center\" >\r\n    { displayApr } %\r\n    { variant === 'text-and-button' && (\r\n      <IconButton variant=\"text\" scale = \"sm\" ml = \"4px\" onClick = { handleClickButton } >\r\n        <CalculateIcon width=\"18px\" />\r\n          </IconButton>\r\n      )}\r\n</ApyLabelContainer>\r\n  )\r\n}\r\n\r\nexport default ApyButton\r\n"]},"metadata":{},"sourceType":"module"}