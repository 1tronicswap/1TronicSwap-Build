{"ast":null,"code":"var _jsxFileName = \"D:\\\\new\\\\1TronicSwap-Build\\\\src\\\\components\\\\_uikit\\\\components\\\\TabMenu\\\\TabMenu.tsx\";\nimport React, { cloneElement, Children } from \"react\";\nimport styled from \"styled-components\";\nimport Flex from \"../Box/Flex\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled(Flex)`\n  border-bottom: 2px solid ${_ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.colors.textSubtle;\n}};\n  overflow-x: scroll;\n\n  ::-webkit-scrollbar {\n    display: none;\n  }\n  -ms-overflow-style: none; /* IE and Edge */\n  scrollbar-width: none; /* Firefox */\n`;\n_c = Wrapper;\nconst Inner = styled(Flex)`\n  justify-content: space-between;\n  flex-grow: 1;\n\n  & > button + button {\n    margin-left: 4px;\n  }\n\n  ${_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return theme.mediaQueries.md;\n}} {\n    flex-grow: 0;\n  }\n`;\n_c2 = Inner;\n\nconst ButtonMenu = _ref3 => {\n  let {\n    activeIndex = 0,\n    onItemClick,\n    children\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    p: [\"0 4px\", \"0 16px\"],\n    children: /*#__PURE__*/_jsxDEV(Inner, {\n      children: Children.map(children, (child, index) => {\n        const isActive = activeIndex === index;\n        return /*#__PURE__*/cloneElement(child, {\n          isActive,\n          onClick: onItemClick ? () => onItemClick(index) : undefined,\n          color: isActive ? \"backgroundAlt\" : \"textSubtle\",\n          backgroundColor: isActive ? \"textSubtle\" : \"input\"\n        });\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = ButtonMenu;\nexport default ButtonMenu;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Inner\");\n$RefreshReg$(_c3, \"ButtonMenu\");","map":{"version":3,"sources":["D:/new/1TronicSwap-Build/src/components/_uikit/components/TabMenu/TabMenu.tsx"],"names":["React","cloneElement","Children","styled","Flex","Wrapper","theme","colors","textSubtle","Inner","mediaQueries","md","ButtonMenu","activeIndex","onItemClick","children","map","child","index","isActive","onClick","undefined","color","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,YAAhB,EAA8BC,QAA9B,QAA4D,OAA5D;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,aAAjB;;AAGA,MAAMC,OAAO,GAAGF,MAAM,CAACC,IAAD,CAAO;AAC7B,6BAA6B;AAAA,MAAC;AAAEE,IAAAA;AAAF,GAAD;AAAA,SAAeA,KAAK,CAACC,MAAN,CAAaC,UAA5B;AAAA,CAAuC;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;KAAMH,O;AAWN,MAAMI,KAAK,GAAGN,MAAM,CAACC,IAAD,CAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AAAA,MAAC;AAAEE,IAAAA;AAAF,GAAD;AAAA,SAAeA,KAAK,CAACI,YAAN,CAAmBC,EAAlC;AAAA,CAAqC;AACzC;AACA;AACA,CAXA;MAAMF,K;;AAaN,MAAMG,UAAkC,GAAG,SAAgD;AAAA,MAA/C;AAAEC,IAAAA,WAAW,GAAG,CAAhB;AAAmBC,IAAAA,WAAnB;AAAgCC,IAAAA;AAAhC,GAA+C;AACzF,sBACE,QAAC,OAAD;AAAS,IAAA,CAAC,EAAE,CAAC,OAAD,EAAU,QAAV,CAAZ;AAAA,2BACE,QAAC,KAAD;AAAA,gBACGb,QAAQ,CAACc,GAAT,CAAaD,QAAb,EAAuB,CAACE,KAAD,EAAsBC,KAAtB,KAAgC;AACtD,cAAMC,QAAQ,GAAGN,WAAW,KAAKK,KAAjC;AACA,4BAAOjB,YAAY,CAACgB,KAAD,EAAQ;AACzBE,UAAAA,QADyB;AAEzBC,UAAAA,OAAO,EAAEN,WAAW,GAAG,MAAMA,WAAW,CAACI,KAAD,CAApB,GAA8BG,SAFzB;AAGzBC,UAAAA,KAAK,EAAEH,QAAQ,GAAG,eAAH,GAAqB,YAHX;AAIzBI,UAAAA,eAAe,EAAEJ,QAAQ,GAAG,YAAH,GAAkB;AAJlB,SAAR,CAAnB;AAMD,OARA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAhBD;;MAAMP,U;AAkBN,eAAeA,UAAf","sourcesContent":["import React, { cloneElement, Children, ReactElement } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Flex from \"../Box/Flex\";\r\nimport { TabMenuProps } from \"./types\";\r\n\r\nconst Wrapper = styled(Flex)`\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\r\n  overflow-x: scroll;\r\n\r\n  ::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n  -ms-overflow-style: none; /* IE and Edge */\r\n  scrollbar-width: none; /* Firefox */\r\n`;\r\n\r\nconst Inner = styled(Flex)`\r\n  justify-content: space-between;\r\n  flex-grow: 1;\r\n\r\n  & > button + button {\r\n    margin-left: 4px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    flex-grow: 0;\r\n  }\r\n`;\r\n\r\nconst ButtonMenu: React.FC<TabMenuProps> = ({ activeIndex = 0, onItemClick, children }) => {\r\n  return (\r\n    <Wrapper p={[\"0 4px\", \"0 16px\"]}>\r\n      <Inner>\r\n        {Children.map(children, (child: ReactElement, index) => {\r\n          const isActive = activeIndex === index;\r\n          return cloneElement(child, {\r\n            isActive,\r\n            onClick: onItemClick ? () => onItemClick(index) : undefined,\r\n            color: isActive ? \"backgroundAlt\" : \"textSubtle\",\r\n            backgroundColor: isActive ? \"textSubtle\" : \"input\",\r\n          });\r\n        })}\r\n      </Inner>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default ButtonMenu;\r\n"]},"metadata":{},"sourceType":"module"}