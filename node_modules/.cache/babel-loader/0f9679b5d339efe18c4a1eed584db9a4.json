{"ast":null,"code":"import JSBI from 'jsbi'; // exports for external consumption\n\nexport let ChainId;\n\n(function (ChainId) {\n  ChainId[ChainId[\"MAINNET\"] = 56] = \"MAINNET\";\n  ChainId[ChainId[\"TESTNET\"] = 97] = \"TESTNET\";\n})(ChainId || (ChainId = {}));\n\nexport let TradeType;\n\n(function (TradeType) {\n  TradeType[TradeType[\"EXACT_INPUT\"] = 0] = \"EXACT_INPUT\";\n  TradeType[TradeType[\"EXACT_OUTPUT\"] = 1] = \"EXACT_OUTPUT\";\n})(TradeType || (TradeType = {}));\n\nexport let Rounding;\n\n(function (Rounding) {\n  Rounding[Rounding[\"ROUND_DOWN\"] = 0] = \"ROUND_DOWN\";\n  Rounding[Rounding[\"ROUND_HALF_UP\"] = 1] = \"ROUND_HALF_UP\";\n  Rounding[Rounding[\"ROUND_UP\"] = 2] = \"ROUND_UP\";\n})(Rounding || (Rounding = {}));\n\nexport const FACTORY_ADDRESS = '0x321c5776DFDe4034829c488Bdb979B8527d02E47';\nexport const INIT_CODE_HASH = '0x94229b21400a2f4615f3053d6cb788fa2c929e420208aaf490c481989761ab18';\nexport const MINIMUM_LIQUIDITY = JSBI.BigInt(1000); // exports for internal consumption\n\nexport const ZERO = JSBI.BigInt(0);\nexport const ONE = JSBI.BigInt(1);\nexport const TWO = JSBI.BigInt(2);\nexport const THREE = JSBI.BigInt(3);\nexport const FIVE = JSBI.BigInt(5);\nexport const TEN = JSBI.BigInt(10);\nexport const _100 = JSBI.BigInt(100);\nexport const FEES_NUMERATOR = JSBI.BigInt(9975);\nexport const FEES_DENOMINATOR = JSBI.BigInt(10000);\nexport let SolidityType;\n\n(function (SolidityType) {\n  SolidityType[\"uint8\"] = \"uint8\";\n  SolidityType[\"uint256\"] = \"uint256\";\n})(SolidityType || (SolidityType = {}));\n\nexport const SOLIDITY_TYPE_MAXIMA = {\n  [SolidityType.uint8]: JSBI.BigInt('0xff'),\n  [SolidityType.uint256]: JSBI.BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff')\n};","map":{"version":3,"sources":["D:/new/1TronicSwap-Build/src/utils/@sdk/constants.ts"],"names":["JSBI","ChainId","TradeType","Rounding","FACTORY_ADDRESS","INIT_CODE_HASH","MINIMUM_LIQUIDITY","BigInt","ZERO","ONE","TWO","THREE","FIVE","TEN","_100","FEES_NUMERATOR","FEES_DENOMINATOR","SolidityType","SOLIDITY_TYPE_MAXIMA","uint8","uint256"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB,C,CAEA;;AAIA,WAAYC,OAAZ;;WAAYA,O;AAAAA,EAAAA,O,CAAAA,O;AAAAA,EAAAA,O,CAAAA,O;GAAAA,O,KAAAA,O;;AAMZ,WAAYC,SAAZ;;WAAYA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;GAAAA,S,KAAAA,S;;AAKZ,WAAYC,QAAZ;;WAAYA,Q;AAAAA,EAAAA,Q,CAAAA,Q;AAAAA,EAAAA,Q,CAAAA,Q;AAAAA,EAAAA,Q,CAAAA,Q;GAAAA,Q,KAAAA,Q;;AAMZ,OAAO,MAAMC,eAAe,GAAG,4CAAxB;AAEP,OAAO,MAAMC,cAAc,GAAG,oEAAvB;AAEP,OAAO,MAAMC,iBAAiB,GAAGN,IAAI,CAACO,MAAL,CAAY,IAAZ,CAA1B,C,CAEP;;AACA,OAAO,MAAMC,IAAI,GAAGR,IAAI,CAACO,MAAL,CAAY,CAAZ,CAAb;AACP,OAAO,MAAME,GAAG,GAAGT,IAAI,CAACO,MAAL,CAAY,CAAZ,CAAZ;AACP,OAAO,MAAMG,GAAG,GAAGV,IAAI,CAACO,MAAL,CAAY,CAAZ,CAAZ;AACP,OAAO,MAAMI,KAAK,GAAGX,IAAI,CAACO,MAAL,CAAY,CAAZ,CAAd;AACP,OAAO,MAAMK,IAAI,GAAGZ,IAAI,CAACO,MAAL,CAAY,CAAZ,CAAb;AACP,OAAO,MAAMM,GAAG,GAAGb,IAAI,CAACO,MAAL,CAAY,EAAZ,CAAZ;AACP,OAAO,MAAMO,IAAI,GAAGd,IAAI,CAACO,MAAL,CAAY,GAAZ,CAAb;AACP,OAAO,MAAMQ,cAAc,GAAGf,IAAI,CAACO,MAAL,CAAY,IAAZ,CAAvB;AACP,OAAO,MAAMS,gBAAgB,GAAGhB,IAAI,CAACO,MAAL,CAAY,KAAZ,CAAzB;AAEP,WAAYU,YAAZ;;WAAYA,Y;AAAAA,EAAAA,Y;AAAAA,EAAAA,Y;GAAAA,Y,KAAAA,Y;;AAKZ,OAAO,MAAMC,oBAAoB,GAAG;AAClC,GAACD,YAAY,CAACE,KAAd,GAAsBnB,IAAI,CAACO,MAAL,CAAY,MAAZ,CADY;AAElC,GAACU,YAAY,CAACG,OAAd,GAAwBpB,IAAI,CAACO,MAAL,CAAY,oEAAZ;AAFU,CAA7B","sourcesContent":["import JSBI from 'jsbi'\r\n\r\n// exports for external consumption\r\nexport type BigintIsh = JSBI | bigint | string\r\n\r\n\r\nexport enum ChainId {\r\n  MAINNET = 56,\r\n  TESTNET = 97,\r\n  \r\n}\r\n\r\nexport enum TradeType {\r\n  EXACT_INPUT,\r\n  EXACT_OUTPUT\r\n}\r\n\r\nexport enum Rounding {\r\n  ROUND_DOWN,\r\n  ROUND_HALF_UP,\r\n  ROUND_UP\r\n}\r\n\r\nexport const FACTORY_ADDRESS = '0x321c5776DFDe4034829c488Bdb979B8527d02E47'\r\n\r\nexport const INIT_CODE_HASH = '0x94229b21400a2f4615f3053d6cb788fa2c929e420208aaf490c481989761ab18'\r\n\r\nexport const MINIMUM_LIQUIDITY = JSBI.BigInt(1000)\r\n\r\n// exports for internal consumption\r\nexport const ZERO = JSBI.BigInt(0)\r\nexport const ONE = JSBI.BigInt(1)\r\nexport const TWO = JSBI.BigInt(2)\r\nexport const THREE = JSBI.BigInt(3)\r\nexport const FIVE = JSBI.BigInt(5)\r\nexport const TEN = JSBI.BigInt(10)\r\nexport const _100 = JSBI.BigInt(100)\r\nexport const FEES_NUMERATOR = JSBI.BigInt(9975)\r\nexport const FEES_DENOMINATOR = JSBI.BigInt(10000)\r\n\r\nexport enum SolidityType {\r\n  uint8 = 'uint8',\r\n  uint256 = 'uint256'\r\n}\r\n\r\nexport const SOLIDITY_TYPE_MAXIMA = {\r\n  [SolidityType.uint8]: JSBI.BigInt('0xff'),\r\n  [SolidityType.uint256]: JSBI.BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff')\r\n}\r\n"]},"metadata":{},"sourceType":"module"}