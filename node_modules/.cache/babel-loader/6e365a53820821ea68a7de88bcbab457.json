{"ast":null,"code":"var _jsxFileName = \"D:\\\\new\\\\1TronicSwap-Build\\\\src\\\\components\\\\_uikit\\\\components\\\\BalanceInput\\\\BalanceInput.tsx\";\nimport React from \"react\";\nimport Text from \"../Text/Text\";\nimport { StyledBalanceInput, StyledInput } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BalanceInput = _ref => {\n  let {\n    value,\n    placeholder = \"0.0\",\n    onUserInput,\n    currencyValue,\n    inputProps,\n    isWarning = false,\n    decimals = 18,\n    ...props\n  } = _ref;\n\n  const handleOnChange = e => {\n    if (e.currentTarget.validity.valid) {\n      onUserInput(e.currentTarget.value.replace(/,/g, \".\"));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledBalanceInput, {\n    isWarning: isWarning,\n    ...props,\n    children: [/*#__PURE__*/_jsxDEV(StyledInput, {\n      pattern: `^[0-9]*[.,]?[0-9]{0,${decimals}}$`,\n      inputMode: \"decimal\",\n      min: \"0\",\n      value: value,\n      onChange: handleOnChange,\n      placeholder: placeholder,\n      ...inputProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), currencyValue && /*#__PURE__*/_jsxDEV(Text, {\n      fontSize: \"12px\",\n      textAlign: \"right\",\n      color: \"textSubtle\",\n      children: currencyValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_c = BalanceInput;\nexport default BalanceInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"BalanceInput\");","map":{"version":3,"sources":["D:/new/1TronicSwap-Build/src/components/_uikit/components/BalanceInput/BalanceInput.tsx"],"names":["React","Text","StyledBalanceInput","StyledInput","BalanceInput","value","placeholder","onUserInput","currencyValue","inputProps","isWarning","decimals","props","handleOnChange","e","currentTarget","validity","valid","replace"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,SAASC,kBAAT,EAA6BC,WAA7B,QAAgD,UAAhD;;;AAGA,MAAMC,YAAyC,GAAG,QAS5C;AAAA,MAT6C;AACjDC,IAAAA,KADiD;AAEjDC,IAAAA,WAAW,GAAG,KAFmC;AAGjDC,IAAAA,WAHiD;AAIjDC,IAAAA,aAJiD;AAKjDC,IAAAA,UALiD;AAMjDC,IAAAA,SAAS,GAAG,KANqC;AAOjDC,IAAAA,QAAQ,GAAG,EAPsC;AAQjD,OAAGC;AAR8C,GAS7C;;AACJ,QAAMC,cAAc,GAAIC,CAAD,IAA4C;AACjE,QAAIA,CAAC,CAACC,aAAF,CAAgBC,QAAhB,CAAyBC,KAA7B,EAAoC;AAClCV,MAAAA,WAAW,CAACO,CAAC,CAACC,aAAF,CAAgBV,KAAhB,CAAsBa,OAAtB,CAA8B,IAA9B,EAAoC,GAApC,CAAD,CAAX;AACD;AACF,GAJD;;AAMA,sBACE,QAAC,kBAAD;AAAoB,IAAA,SAAS,EAAER,SAA/B;AAAA,OAA8CE,KAA9C;AAAA,4BACE,QAAC,WAAD;AACE,MAAA,OAAO,EAAG,uBAAsBD,QAAS,IAD3C;AAEE,MAAA,SAAS,EAAC,SAFZ;AAGE,MAAA,GAAG,EAAC,GAHN;AAIE,MAAA,KAAK,EAAEN,KAJT;AAKE,MAAA,QAAQ,EAAEQ,cALZ;AAME,MAAA,WAAW,EAAEP,WANf;AAAA,SAOMG;AAPN;AAAA;AAAA;AAAA;AAAA,YADF,EAUGD,aAAa,iBACZ,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAC,MAAf;AAAsB,MAAA,SAAS,EAAC,OAAhC;AAAwC,MAAA,KAAK,EAAC,YAA9C;AAAA,gBACGA;AADH;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAlCD;;KAAMJ,Y;AAoCN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\r\nimport Text from \"../Text/Text\";\r\nimport { StyledBalanceInput, StyledInput } from \"./styles\";\r\nimport { BalanceInputProps } from \"./types\";\r\n\r\nconst BalanceInput: React.FC<BalanceInputProps> = ({\r\n  value,\r\n  placeholder = \"0.0\",\r\n  onUserInput,\r\n  currencyValue,\r\n  inputProps,\r\n  isWarning = false,\r\n  decimals = 18,\r\n  ...props\r\n}) => {\r\n  const handleOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.currentTarget.validity.valid) {\r\n      onUserInput(e.currentTarget.value.replace(/,/g, \".\"));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledBalanceInput isWarning={isWarning} {...props}>\r\n      <StyledInput\r\n        pattern={`^[0-9]*[.,]?[0-9]{0,${decimals}}$`}\r\n        inputMode=\"decimal\"\r\n        min=\"0\"\r\n        value={value}\r\n        onChange={handleOnChange}\r\n        placeholder={placeholder}\r\n        {...inputProps}\r\n      />\r\n      {currencyValue && (\r\n        <Text fontSize=\"12px\" textAlign=\"right\" color=\"textSubtle\">\r\n          {currencyValue}\r\n        </Text>\r\n      )}\r\n    </StyledBalanceInput>\r\n  );\r\n};\r\n\r\nexport default BalanceInput;\r\n"]},"metadata":{},"sourceType":"module"}