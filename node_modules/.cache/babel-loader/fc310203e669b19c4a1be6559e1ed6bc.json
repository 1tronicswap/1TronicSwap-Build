{"ast":null,"code":"var _jsxFileName = \"D:\\\\new\\\\1TronicSwap-Build\\\\src\\\\components\\\\_uikit\\\\components\\\\Toggle\\\\Toggle.tsx\";\nimport React from \"react\";\nimport StyledToggle, { Input, Handle, HandleText } from \"./StyledToggle\";\nimport { scales } from \"./types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Toggle = _ref => {\n  let {\n    checked,\n    scale = scales.MD,\n    text,\n    forceTheme,\n    ...props\n  } = _ref;\n  const isChecked = !!checked;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(StyledToggle, {\n      checked: isChecked,\n      scale: scale,\n      forceTheme: forceTheme,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        checked: checked,\n        scale: scale,\n        forceTheme: forceTheme,\n        ...props,\n        type: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Handle, {\n        scale: scale,\n        forceTheme: forceTheme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HandleText, {\n        checked: checked,\n        scale: scale,\n        forceTheme: forceTheme,\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Toggle;\nToggle.defaultProps = {\n  scale: scales.MD,\n  text: ''\n};\nexport default Toggle;\n\nvar _c;\n\n$RefreshReg$(_c, \"Toggle\");","map":{"version":3,"sources":["D:/new/1TronicSwap-Build/src/components/_uikit/components/Toggle/Toggle.tsx"],"names":["React","StyledToggle","Input","Handle","HandleText","scales","Toggle","checked","scale","MD","text","forceTheme","props","isChecked","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,IAAuBC,KAAvB,EAA8BC,MAA9B,EAAsCC,UAAtC,QAAuD,gBAAvD;AACA,SAAsBC,MAAtB,QAAoC,SAApC;;;AAEA,MAAMC,MAA6B,GAAG,QAAgE;AAAA,MAA/D;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAK,GAAGH,MAAM,CAACI,EAA1B;AAA8BC,IAAAA,IAA9B;AAAoCC,IAAAA,UAApC;AAAgD,OAAGC;AAAnD,GAA+D;AACpG,QAAMC,SAAS,GAAG,CAAC,CAACN,OAApB;AACA,sBACE;AAAA,2BACE,QAAC,YAAD;AAAc,MAAA,OAAO,EAAEM,SAAvB;AAAkC,MAAA,KAAK,EAAEL,KAAzC;AAAgD,MAAA,UAAU,EAAEG,UAA5D;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEJ,OAAhB;AAAyB,QAAA,KAAK,EAAEC,KAAhC;AAAuC,QAAA,UAAU,EAAEG,UAAnD;AAAA,WAAkEC,KAAlE;AAAyE,QAAA,IAAI,EAAC;AAA9E;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAEJ,KAAf;AAAsB,QAAA,UAAU,EAAEG;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAEJ,OAArB;AAA8B,QAAA,KAAK,EAAEC,KAArC;AAA4C,QAAA,UAAU,EAAEG,UAAxD;AAAA,kBAAqED;AAArE;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAXD;;KAAMJ,M;AAaNA,MAAM,CAACQ,YAAP,GAAsB;AACpBN,EAAAA,KAAK,EAAEH,MAAM,CAACI,EADM;AAEpBC,EAAAA,IAAI,EAAE;AAFc,CAAtB;AAKA,eAAeJ,MAAf","sourcesContent":["import React from \"react\";\r\nimport StyledToggle, { Input, Handle, HandleText} from \"./StyledToggle\";\r\nimport { ToggleProps, scales } from \"./types\";\r\n\r\nconst Toggle: React.FC<ToggleProps> = ({ checked, scale = scales.MD, text, forceTheme, ...props }) => {\r\n  const isChecked = !!checked;\r\n  return (\r\n    <div>\r\n      <StyledToggle checked={isChecked} scale={scale} forceTheme={forceTheme}>\r\n        <Input checked={checked} scale={scale} forceTheme={forceTheme}{...props} type=\"checkbox\" />\r\n        <Handle scale={scale} forceTheme={forceTheme}/>\r\n        <HandleText checked={checked} scale={scale} forceTheme={forceTheme}>{text}</HandleText>\r\n      </StyledToggle>\r\n    </div>\r\n  );\r\n};\r\n\r\nToggle.defaultProps = {\r\n  scale: scales.MD,\r\n  text: '',\r\n};\r\n\r\nexport default Toggle;\r\n"]},"metadata":{},"sourceType":"module"}