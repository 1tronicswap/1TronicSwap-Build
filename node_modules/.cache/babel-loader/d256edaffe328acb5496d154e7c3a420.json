{"ast":null,"code":"var _jsxFileName = \"D:\\\\new\\\\1TronicSwap-Build\\\\src\\\\components\\\\Menu\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { Menu as UikitMenu } from 'components/_uikit';\nimport { useWeb3React } from '@web3-react/core';\nimport { languageList } from 'config/localization/languages';\nimport { useTranslation } from 'contexts/Localization';\nimport useTheme from 'hooks/useTheme';\nimport useAuth from 'hooks/useAuth';\nimport { usePriceCakeBusd } from 'state/farms/hooks';\nimport { useProfile } from 'state/profile/hooks';\nimport { setGeneralCurrency } from 'state/general';\nimport { useGetGeneralCurrency } from 'state/general/hooks';\nimport config from './config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Menu = props => {\n  _s();\n\n  var _profile$nft;\n\n  const location = useLocation();\n  const showMascott = location.pathname === '/';\n  const showBgDecoration = location.pathname === '/';\n  const {\n    account\n  } = useWeb3React();\n  const {\n    login,\n    logout\n  } = useAuth();\n  const {\n    isDark,\n    toggleTheme\n  } = useTheme();\n  const cakePriceUsd = usePriceCakeBusd();\n  const {\n    profile\n  } = useProfile();\n  const {\n    currentLanguage,\n    setLanguage,\n    t\n  } = useTranslation();\n  const bannerSources = [\"images/easter-battle.png\", \"images/hero.png\"];\n  const currency = useGetGeneralCurrency();\n  const dispatch = useDispatch();\n\n  function getConversionValue() {\n    return (Math.random() * (9 - 0.001) + 0.0001).toFixed(4);\n  }\n\n  const conversionValue = currency ? getConversionValue() : '-';\n  const handleInputSelect = useCallback(currency => {\n    const _currency = {\n      address: currency.address,\n      name: currency.name,\n      symbol: currency.symbol,\n      decimals: currency.decimals,\n      chainId: currency.chainId,\n      logoURI: currency.logoURI\n    };\n    dispatch(setGeneralCurrency(_currency));\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(UikitMenu, {\n    account: account,\n    login: login,\n    logout: logout,\n    isDark: isDark,\n    toggleTheme: toggleTheme,\n    currentLang: currentLanguage.code,\n    langs: languageList,\n    setLang: setLanguage,\n    cakePriceUsd: cakePriceUsd.toNumber(),\n    links: config(t),\n    tagline: t('Your best investment in Digital Asset'),\n    bannerSources: bannerSources,\n    showMascott: showMascott,\n    showBgDecoration: showBgDecoration,\n    currency: currency,\n    onCurrencySelect: handleInputSelect,\n    conversionValue: conversionValue,\n    profile: {\n      username: profile === null || profile === void 0 ? void 0 : profile.username,\n      image: profile !== null && profile !== void 0 && profile.nft ? `/images/nfts/${(_profile$nft = profile.nft) === null || _profile$nft === void 0 ? void 0 : _profile$nft.images.sm}` : undefined,\n      profileLink: '/profile',\n      noProfileLink: '/profile',\n      showPip: !(profile !== null && profile !== void 0 && profile.username)\n    },\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Menu, \"q4id1dxz4HtK+qr/ZfkshVlWIo0=\", false, function () {\n  return [useLocation, useWeb3React, useAuth, useTheme, usePriceCakeBusd, useProfile, useTranslation, useGetGeneralCurrency, useDispatch];\n});\n\n_c = Menu;\nexport default Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["D:/new/1TronicSwap-Build/src/components/Menu/index.tsx"],"names":["React","useCallback","useDispatch","useLocation","Menu","UikitMenu","useWeb3React","languageList","useTranslation","useTheme","useAuth","usePriceCakeBusd","useProfile","setGeneralCurrency","useGetGeneralCurrency","config","props","location","showMascott","pathname","showBgDecoration","account","login","logout","isDark","toggleTheme","cakePriceUsd","profile","currentLanguage","setLanguage","t","bannerSources","currency","dispatch","getConversionValue","Math","random","toFixed","conversionValue","handleInputSelect","_currency","address","name","symbol","decimals","chainId","logoURI","code","toNumber","username","image","nft","images","sm","undefined","profileLink","noProfileLink","showPip"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { Menu as UikitMenu } from 'components/_uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { languageList } from 'config/localization/languages'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useAuth from 'hooks/useAuth'\r\nimport { usePriceCakeBusd } from 'state/farms/hooks'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport { setGeneralCurrency } from 'state/general'\r\nimport { useGetGeneralCurrency } from 'state/general/hooks'\r\nimport type { AppDispatch } from 'state'\r\nimport config from './config'\r\n\r\nconst Menu = (props) => {\r\n  const location = useLocation();\r\n  const showMascott = location.pathname === '/';\r\n  const showBgDecoration = location.pathname === '/';\r\n  const { account } = useWeb3React()\r\n  const { login, logout } = useAuth()\r\n  const { isDark, toggleTheme } = useTheme()\r\n  const cakePriceUsd = usePriceCakeBusd()\r\n  const { profile } = useProfile()\r\n  const { currentLanguage, setLanguage, t } = useTranslation()\r\n  const bannerSources = [\"images/easter-battle.png\",\"images/hero.png\",]\r\n\r\n  const currency = useGetGeneralCurrency();\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  function getConversionValue() {\r\n    return (Math.random() * (9 - 0.001) + 0.0001).toFixed(4);\r\n  }\r\n  const conversionValue = currency ? getConversionValue() : '-'\r\n\r\n  const handleInputSelect = useCallback(\r\n    (currency) => {\r\n      const _currency = {\r\n        address: currency.address,\r\n        name: currency.name,\r\n        symbol: currency.symbol,\r\n        decimals: currency.decimals,\r\n        chainId: currency.chainId,\r\n        logoURI: currency.logoURI,\r\n      }\r\n      dispatch(setGeneralCurrency( _currency))\r\n    },\r\n    [dispatch],\r\n  )\r\n  return (\r\n    <UikitMenu\r\n      account={account}\r\n      login={login}\r\n      logout={logout}\r\n      isDark={isDark}\r\n      toggleTheme={toggleTheme}\r\n      currentLang={currentLanguage.code}\r\n      langs={languageList}\r\n      setLang={setLanguage}\r\n      cakePriceUsd={cakePriceUsd.toNumber()}\r\n      links={config(t)}\r\n      tagline={t('Your best investment in Digital Asset')}\r\n      bannerSources={bannerSources}\r\n      showMascott={showMascott}\r\n      showBgDecoration={showBgDecoration}\r\n      currency={currency}\r\n      onCurrencySelect={handleInputSelect}\r\n      conversionValue={conversionValue}\r\n      profile={{\r\n        username: profile?.username,\r\n        image: profile?.nft ? `/images/nfts/${profile.nft?.images.sm}` : undefined,\r\n        profileLink: '/profile',\r\n        noProfileLink: '/profile',\r\n        showPip: !profile?.username,\r\n      }}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Menu"]},"metadata":{},"sourceType":"module"}