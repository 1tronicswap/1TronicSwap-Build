{"ast":null,"code":"var _jsxFileName = \"D:\\\\new\\\\1TronicSwap-Build\\\\src\\\\components\\\\SearchModal\\\\ImportRow.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Button, Text, CheckmarkCircleIcon } from 'components/_uikit';\nimport { AutoRow, RowFixed } from 'components/Layout/Row';\nimport { AutoColumn } from 'components/Layout/Column';\nimport CurrencyLogo from 'components/Logo/CurrencyLogo';\nimport styled from 'styled-components';\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens';\nimport { useTranslation } from 'contexts/Localization';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TokenSection = styled.div`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 8px;\n  align-items: center;\n  border-bottom: 1px solid ${_ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.colors.subtleLine;\n}};\n\n  opacity: ${_ref2 => {\n  let {\n    dim\n  } = _ref2;\n  return dim ? '0.4' : '1';\n}};\n`;\n_c = TokenSection;\nconst CheckIcon = styled(CheckmarkCircleIcon)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${_ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return theme.colors.success;\n}};\n`;\n_c2 = CheckIcon;\nexport default function ImportRow(_ref4) {\n  _s();\n\n  let {\n    token,\n    style,\n    dim,\n    showImportView,\n    setImportToken\n  } = _ref4;\n  // gloabls\n  const {\n    t\n  } = useTranslation(); // check if already active on list or local storage tokens\n\n  const isAdded = useIsUserAddedToken(token);\n  const isActive = useIsTokenActive(token);\n  return /*#__PURE__*/_jsxDEV(TokenSection, {\n    style: style,\n    children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n      currency: token,\n      size: \"24px\",\n      style: {\n        opacity: dim ? '1' : '1'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n      gap: \"sm\",\n      style: {\n        opacity: dim ? '1' : '1'\n      },\n      children: /*#__PURE__*/_jsxDEV(AutoRow, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          bold: true,\n          mr: \"6px\",\n          color: \"background\",\n          fontSize: \"12px\",\n          children: token.symbol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          small: true,\n          color: \"background\",\n          fontSize: \"12px\",\n          children: token.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), !isActive && !isAdded ? /*#__PURE__*/_jsxDEV(Button, {\n      width: \"fit-content\",\n      variant: \"contrast\",\n      onClick: () => {\n        if (setImportToken) {\n          setImportToken(token);\n        }\n\n        showImportView();\n      },\n      children: t('Import')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(RowFixed, {\n      style: {\n        minWidth: 'fit-content'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        color: \"success\",\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ImportRow, \"/F2e+iQu/gjKftH57DZd8xGuLro=\", false, function () {\n  return [useTranslation, useIsUserAddedToken, useIsTokenActive];\n});\n\n_c3 = ImportRow;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TokenSection\");\n$RefreshReg$(_c2, \"CheckIcon\");\n$RefreshReg$(_c3, \"ImportRow\");","map":{"version":3,"sources":["D:/new/1TronicSwap-Build/src/components/SearchModal/ImportRow.tsx"],"names":["React","Button","Text","CheckmarkCircleIcon","AutoRow","RowFixed","AutoColumn","CurrencyLogo","styled","useIsUserAddedToken","useIsTokenActive","useTranslation","TokenSection","div","theme","colors","subtleLine","dim","CheckIcon","success","ImportRow","token","style","showImportView","setImportToken","t","isAdded","isActive","opacity","symbol","name","minWidth"],"mappings":"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","sourcesContent":["import React, { CSSProperties } from 'react'\r\nimport { Token } from 'utils/@sdk'\r\nimport { Button, Text, CheckmarkCircleIcon } from 'components/_uikit'\r\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\r\nimport { AutoColumn } from 'components/Layout/Column'\r\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\r\nimport styled from 'styled-components'\r\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst TokenSection = styled.div<{ dim?: boolean }>`\r\n  padding: 4px 20px;\r\n  height: 56px;\r\n  display: grid;\r\n  grid-template-columns: auto minmax(auto, 1fr) auto;\r\n  grid-gap: 8px;\r\n  align-items: center;\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.subtleLine};\r\n\r\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\r\n`\r\n\r\nconst CheckIcon = styled(CheckmarkCircleIcon)`\r\n  height: 16px;\r\n  width: 16px;\r\n  margin-right: 6px;\r\n  stroke: ${({ theme }) => theme.colors.success};\r\n`\r\n\r\nexport default function ImportRow({\r\n  token,\r\n  style,\r\n  dim,\r\n  showImportView,\r\n  setImportToken,\r\n}: {\r\n  token: Token\r\n  style?: CSSProperties\r\n  dim?: boolean\r\n  showImportView: () => void\r\n  setImportToken: (token: Token) => void\r\n}) {\r\n  // gloabls\r\n\r\n  const { t } = useTranslation()\r\n\r\n  // check if already active on list or local storage tokens\r\n  const isAdded = useIsUserAddedToken(token)\r\n  const isActive = useIsTokenActive(token)\r\n\r\n  return (\r\n    <TokenSection style={style}>\r\n      <CurrencyLogo currency={token} size=\"24px\" style={{ opacity: dim ? '1' : '1' }} />\r\n      <AutoColumn gap=\"sm\" style={{ opacity: dim ? '1' : '1' }}>\r\n        <AutoRow>\r\n          <Text bold mr=\"6px\" color=\"background\" fontSize=\"12px\">{token.symbol}</Text>\r\n          <Text small color=\"background\" fontSize=\"12px\">\r\n            {token.name}\r\n          </Text>\r\n        </AutoRow>\r\n        {/* {list && list.logoURI && (\r\n          <RowFixed>\r\n            <Text small mr=\"4px\" color=\"textSubtle\">\r\n              {t('via')} {list.name}\r\n            </Text>\r\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\r\n          </RowFixed>\r\n        )} */}\r\n      </AutoColumn>\r\n      {!isActive && !isAdded ? (\r\n        <Button\r\n          width=\"fit-content\" variant=\"contrast\"\r\n          onClick={() => {\r\n            if (setImportToken) {\r\n              setImportToken(token)\r\n            }\r\n            showImportView()\r\n          }}\r\n        >\r\n          {t('Import')}\r\n        </Button>\r\n      ) : (\r\n        <RowFixed style={{ minWidth: 'fit-content' }}>\r\n          <CheckIcon />\r\n          <Text color=\"success\">Active</Text>\r\n        </RowFixed>\r\n      )}\r\n    </TokenSection>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}