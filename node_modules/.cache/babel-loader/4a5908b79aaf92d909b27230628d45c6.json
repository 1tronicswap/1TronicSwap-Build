{"ast":null,"code":"import styled from \"styled-components\";\nimport { space, typography, layout } from \"styled-system\";\nimport getThemeValue from \"../../util/getThemeValue\";\n\nconst getColor = _ref => {\n  let {\n    color,\n    theme\n  } = _ref;\n  return getThemeValue(`colors.${color}`, color)(theme);\n};\n\nconst getFontSize = _ref2 => {\n  let {\n    fontSize,\n    small\n  } = _ref2;\n  return small ? \"14px\" : fontSize || \"16px\";\n};\n\nconst Text = styled.div`\n  color: ${getColor};\n  font-size: ${getFontSize};\n  font-weight: ${_ref3 => {\n  let {\n    bold\n  } = _ref3;\n  return bold ? 600 : 400;\n}};\n  line-height: 1.5;\n  ${_ref4 => {\n  let {\n    decoration\n  } = _ref4;\n  return decoration && `text-decoration: ${decoration};`;\n}}\n  ${_ref5 => {\n  let {\n    shadow\n  } = _ref5;\n  return shadow && `text-shadow: ${shadow};`;\n}}\n  ${_ref6 => {\n  let {\n    textTransform\n  } = _ref6;\n  return textTransform && `text-transform: ${textTransform};`;\n}}\n  ${_ref7 => {\n  let {\n    ellipsis\n  } = _ref7;\n  return ellipsis && `white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;`;\n}}\n\n  ${space}\n  ${typography}\n  ${layout}\n`;\nText.defaultProps = {\n  color: \"text\",\n  small: false,\n  ellipsis: false\n};\nexport default Text;","map":{"version":3,"sources":["D:/new/1TronicSwap-Build/src/components/_uikit/components/Text/Text.tsx"],"names":["styled","space","typography","layout","getThemeValue","getColor","color","theme","getFontSize","fontSize","small","Text","div","bold","decoration","shadow","textTransform","ellipsis","defaultProps"],"mappings":"AAAA,OAAOA,MAAP,MAAqC,mBAArC;AACA,SAASC,KAAT,EAAgBC,UAAhB,EAA4BC,MAA5B,QAA0C,eAA1C;AACA,OAAOC,aAAP,MAA0B,0BAA1B;;AAOA,MAAMC,QAAQ,GAAG,QAAmC;AAAA,MAAlC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAkC;AAClD,SAAOH,aAAa,CAAE,UAASE,KAAM,EAAjB,EAAoBA,KAApB,CAAb,CAAwCC,KAAxC,CAAP;AACD,CAFD;;AAIA,MAAMC,WAAW,GAAG,SAAoC;AAAA,MAAnC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAmC;AACtD,SAAOA,KAAK,GAAG,MAAH,GAAYD,QAAQ,IAAI,MAApC;AACD,CAFD;;AAIA,MAAME,IAAI,GAAGX,MAAM,CAACY,GAAe;AACnC,WAAWP,QAAS;AACpB,eAAeG,WAAY;AAC3B,iBAAiB;AAAA,MAAC;AAAEK,IAAAA;AAAF,GAAD;AAAA,SAAeA,IAAI,GAAG,GAAH,GAAS,GAA5B;AAAA,CAAiC;AAClD;AACA,IAAI;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,SAAoBA,UAAU,IAAK,oBAAmBA,UAAW,GAAjE;AAAA,CAAoE;AACxE,IAAI;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,SAAgBA,MAAM,IAAK,gBAAeA,MAAO,GAAjD;AAAA,CAAoD;AACxD,IAAI;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,SAAuBA,aAAa,IAAK,mBAAkBA,aAAc,GAAzE;AAAA,CAA4E;AAChF,IAAI;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,SACAA,QAAQ,IACP;AACL;AACA,6BAJI;AAAA,CAI0B;AAC9B;AACA,IAAIhB,KAAM;AACV,IAAIC,UAAW;AACf,IAAIC,MAAO;AACX,CAjBA;AAmBAQ,IAAI,CAACO,YAAL,GAAoB;AAClBZ,EAAAA,KAAK,EAAE,MADW;AAElBI,EAAAA,KAAK,EAAE,KAFW;AAGlBO,EAAAA,QAAQ,EAAE;AAHQ,CAApB;AAMA,eAAeN,IAAf","sourcesContent":["import styled, { DefaultTheme } from \"styled-components\";\r\nimport { space, typography, layout } from \"styled-system\";\r\nimport getThemeValue from \"../../util/getThemeValue\";\r\nimport { TextProps } from \"./types\";\r\n\r\ninterface ThemedProps extends TextProps {\r\n  theme: DefaultTheme;\r\n}\r\n\r\nconst getColor = ({ color, theme }: ThemedProps) => {\r\n  return getThemeValue(`colors.${color}`, color)(theme);\r\n};\r\n\r\nconst getFontSize = ({ fontSize, small }: TextProps) => {\r\n  return small ? \"14px\" : fontSize || \"16px\";\r\n};\r\n\r\nconst Text = styled.div<TextProps>`\r\n  color: ${getColor};\r\n  font-size: ${getFontSize};\r\n  font-weight: ${({ bold }) => (bold ? 600 : 400)};\r\n  line-height: 1.5;\r\n  ${({ decoration }) => decoration && `text-decoration: ${decoration};`}\r\n  ${({ shadow }) => shadow && `text-shadow: ${shadow};`}\r\n  ${({ textTransform }) => textTransform && `text-transform: ${textTransform};`}\r\n  ${({ ellipsis }) =>\r\n    ellipsis &&\r\n    `white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;`}\r\n\r\n  ${space}\r\n  ${typography}\r\n  ${layout}\r\n`;\r\n\r\nText.defaultProps = {\r\n  color: \"text\",\r\n  small: false,\r\n  ellipsis: false,\r\n};\r\n\r\nexport default Text;\r\n"]},"metadata":{},"sourceType":"module"}