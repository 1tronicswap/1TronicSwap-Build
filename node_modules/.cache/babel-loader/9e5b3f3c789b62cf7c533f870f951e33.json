{"ast":null,"code":"var _jsxFileName = \"D:\\\\new\\\\1TronicSwap-Build\\\\src\\\\components\\\\_uikit\\\\widgets\\\\Modal\\\\Modal.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport styled, { useTheme } from \"styled-components\";\nimport Heading from \"../../components/Heading/Heading\";\nimport getThemeValue from \"../../util/getThemeValue\";\nimport { Link } from \"../../components/Link\";\nimport { HelpIcon } from \"../../components/Svg\";\nimport { ModalBody, ModalHeader, ModalTitle, ModalContainer, ModalCloseButton, ModalBackButton } from \"./styles\";\nimport { useMatchBreakpoints } from \"../../hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HelpLink = styled(Link)`\n  display: flex;\n  align-self: center;\n  align-items: center;\n`;\n_c = HelpLink;\n\nconst Modal = _ref => {\n  _s();\n\n  let {\n    title,\n    onDismiss,\n    onBack,\n    children,\n    hideCloseButton = false,\n    bodyPadding = \"24px\",\n    headerBackground = \"contrast\",\n    minWidth = \"320px\",\n    helperLink = \"\",\n    ...props\n  } = _ref;\n  const {\n    isXl\n  } = useMatchBreakpoints();\n  const isMobile = isXl === false;\n  const theme = useTheme();\n  return /*#__PURE__*/_jsxDEV(ModalContainer, {\n    minWidth: minWidth,\n    ...props,\n    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n      background: getThemeValue(`colors.${headerBackground}`, headerBackground)(theme),\n      children: [/*#__PURE__*/_jsxDEV(ModalTitle, {\n        children: [onBack && /*#__PURE__*/_jsxDEV(ModalBackButton, {\n          onBack: onBack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(Heading, {\n          color: \"background\",\n          scale: \"md\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), helperLink !== \"\" && /*#__PURE__*/_jsxDEV(HelpLink, {\n        href: helperLink,\n        external: true,\n        children: /*#__PURE__*/_jsxDEV(HelpIcon, {\n          color: \"background\",\n          width: \"24px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), !hideCloseButton && !isMobile && /*#__PURE__*/_jsxDEV(ModalCloseButton, {\n        onDismiss: onDismiss\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 43\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n      p: bodyPadding,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Modal, \"ht097KZvF1zIgOSf8oGpkeKlyoA=\", false, function () {\n  return [useMatchBreakpoints, useTheme];\n});\n\n_c2 = Modal;\nexport default Modal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"HelpLink\");\n$RefreshReg$(_c2, \"Modal\");","map":{"version":3,"sources":["D:/new/1TronicSwap-Build/src/components/_uikit/widgets/Modal/Modal.tsx"],"names":["React","styled","useTheme","Heading","getThemeValue","Link","HelpIcon","ModalBody","ModalHeader","ModalTitle","ModalContainer","ModalCloseButton","ModalBackButton","useMatchBreakpoints","HelpLink","Modal","title","onDismiss","onBack","children","hideCloseButton","bodyPadding","headerBackground","minWidth","helperLink","props","isXl","isMobile","theme"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,QAAjB,QAAiC,mBAAjC;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,SAASC,IAAT,QAAqB,uBAArB;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,UAAjC,EAA6CC,cAA7C,EAA6DC,gBAA7D,EAA+EC,eAA/E,QAAsG,UAAtG;AAEA,SAASC,mBAAT,QAAoC,aAApC;;AAEA,MAAMC,QAAQ,GAAGb,MAAM,CAACI,IAAD,CAAO;AAC9B;AACA;AACA;AACA,CAJA;KAAMS,Q;;AAMN,MAAMC,KAA2B,GAAG,QAW9B;AAAA;;AAAA,MAX+B;AACnCC,IAAAA,KADmC;AAEnCC,IAAAA,SAFmC;AAGnCC,IAAAA,MAHmC;AAInCC,IAAAA,QAJmC;AAKnCC,IAAAA,eAAe,GAAG,KALiB;AAMnCC,IAAAA,WAAW,GAAG,MANqB;AAOnCC,IAAAA,gBAAgB,GAAG,UAPgB;AAQnCC,IAAAA,QAAQ,GAAG,OARwB;AASnCC,IAAAA,UAAU,GAAG,EATsB;AAUnC,OAAGC;AAVgC,GAW/B;AACJ,QAAM;AAAEC,IAAAA;AAAF,MAAWb,mBAAmB,EAApC;AACA,QAAMc,QAAQ,GAAGD,IAAI,KAAK,KAA1B;AACA,QAAME,KAAK,GAAG1B,QAAQ,EAAtB;AACA,sBACE,QAAC,cAAD;AAAgB,IAAA,QAAQ,EAAEqB,QAA1B;AAAA,OAAwCE,KAAxC;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,UAAU,EAAErB,aAAa,CAAE,UAASkB,gBAAiB,EAA5B,EAA+BA,gBAA/B,CAAb,CAA8DM,KAA9D,CAAzB;AAAA,8BACE,QAAC,UAAD;AAAA,mBACGV,MAAM,iBAAI,QAAC,eAAD;AAAiB,UAAA,MAAM,EAAEA;AAAzB;AAAA;AAAA;AAAA;AAAA,gBADb,eAEE,QAAC,OAAD;AAAS,UAAA,KAAK,EAAC,YAAf;AAA4B,UAAA,KAAK,EAAC,IAAlC;AAAA,oBAAwCF;AAAxC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAKGQ,UAAU,KAAK,EAAf,iBACC,QAAC,QAAD;AAAU,QAAA,IAAI,EAAEA,UAAhB;AAA4B,QAAA,QAAQ,MAApC;AAAA,+BACE,QAAC,QAAD;AAAU,UAAA,KAAK,EAAC,YAAhB;AAA6B,UAAA,KAAK,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANJ,EAUG,CAACJ,eAAD,IAAoB,CAACO,QAArB,iBAAiC,QAAC,gBAAD;AAAkB,QAAA,SAAS,EAAEV;AAA7B;AAAA;AAAA;AAAA;AAAA,cAVpC;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAaE,QAAC,SAAD;AAAW,MAAA,CAAC,EAAEI,WAAd;AAAA,gBAA4BF;AAA5B;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAhCD;;GAAMJ,K;UAYaF,mB,EAEHX,Q;;;MAdVa,K;AAkCN,eAAeA,KAAf","sourcesContent":["import React from \"react\";\r\nimport styled, { useTheme } from \"styled-components\";\r\nimport Heading from \"../../components/Heading/Heading\";\r\nimport getThemeValue from \"../../util/getThemeValue\";\r\nimport { Link } from \"../../components/Link\";\r\nimport { HelpIcon } from \"../../components/Svg\";\r\nimport { ModalBody, ModalHeader, ModalTitle, ModalContainer, ModalCloseButton, ModalBackButton } from \"./styles\";\r\nimport { ModalProps } from \"./types\";\r\nimport { useMatchBreakpoints } from \"../../hooks\";\r\n\r\nconst HelpLink = styled(Link)`\r\n  display: flex;\r\n  align-self: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Modal: React.FC<ModalProps> = ({\r\n  title,\r\n  onDismiss,\r\n  onBack,\r\n  children,\r\n  hideCloseButton = false,\r\n  bodyPadding = \"24px\",\r\n  headerBackground = \"contrast\",\r\n  minWidth = \"320px\",\r\n  helperLink = \"\",\r\n  ...props\r\n}) => {\r\n  const { isXl } = useMatchBreakpoints();\r\n  const isMobile = isXl === false;\r\n  const theme = useTheme();\r\n  return (\r\n    <ModalContainer minWidth={minWidth} {...props}>\r\n      <ModalHeader background={getThemeValue(`colors.${headerBackground}`, headerBackground)(theme)}>\r\n        <ModalTitle>\r\n          {onBack && <ModalBackButton onBack={onBack} />}\r\n          <Heading color=\"background\" scale=\"md\">{title}</Heading>\r\n        </ModalTitle>\r\n        {helperLink !== \"\" &&\r\n          <HelpLink href={helperLink} external>\r\n            <HelpIcon color=\"background\" width=\"24px\" />\r\n          </HelpLink>\r\n        }\r\n        {!hideCloseButton && !isMobile && <ModalCloseButton onDismiss={onDismiss} />}\r\n      </ModalHeader>\r\n      <ModalBody p={bodyPadding}>{children}</ModalBody>\r\n    </ModalContainer>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n"]},"metadata":{},"sourceType":"module"}