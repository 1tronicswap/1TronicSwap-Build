{"ast":null,"code":"var _jsxFileName = \"D:\\\\new\\\\1TronicSwap-Build\\\\src\\\\components\\\\_uikit\\\\widgets\\\\Menu\\\\components\\\\CurrencyConverter.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Button, ChevronDownIcon, Text, useModal, Flex } from 'components/_uikit';\nimport styled from 'styled-components';\nimport { useTranslation } from 'contexts/Localization';\nimport CurrencySearchModal from 'components/SearchModal/CurrencySearchModal';\nimport { CurrencyLogo } from '../../../../Logo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CurrencySelectButton = styled(Button).attrs({\n  variant: 'text',\n  scale: 'sm'\n})`\n  padding: 0 0.5rem;\n  border: 1px solid;\n  border-color: ${_ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.colors.input;\n}};\n  margin-right: 12px;\n  margin-left: 12px;\n`;\n_c = CurrencySelectButton;\nexport default function CurrencyConverter(_ref2) {\n  _s();\n\n  let {\n    onCurrencySelect,\n    currency,\n    conversionValue,\n    disableCurrencySelect = false,\n    showCommonBases\n  } = _ref2;\n  const {\n    t\n  } = useTranslation();\n  const [onPresentCurrencyModal] = useModal( /*#__PURE__*/_jsxDEV(CurrencySearchModal, {\n    onCurrencySelect: onCurrencySelect,\n    selectedCurrency: currency,\n    showCommonBases: showCommonBases\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      color: \"text\",\n      lineHeight: \"24px\",\n      fontSize: \"12px\",\n      fontWeight: \"600\",\n      margin: \"auto\",\n      padding: \"2px\",\n      children: [conversionValue, \"  TRC\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CurrencySelectButton, {\n      selected: !!currency,\n      className: \"open-currency-select-button\",\n      onClick: () => {\n        if (!disableCurrencySelect) {\n          onPresentCurrencyModal();\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        children: [currency ?\n        /*#__PURE__*/\n        // <ListLogo size=\"40px\" style={{ marginRight: '1rem' }} logoURI={currency.address} alt={`${currency.name} list logo`} />\n        _jsxDEV(CurrencyLogo, {\n          currency: currency,\n          size: \"24px\",\n          style: {\n            marginRight: '8px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(Text, {\n          color: \"text\",\n          lineHeight: \"24px\",\n          fontSize: \"12px\",\n          fontWeight: \"600\",\n          children: (currency && currency.symbol && currency.symbol.length > 20 ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(currency.symbol.length - 5, currency.symbol.length)}` : currency === null || currency === void 0 ? void 0 : currency.symbol) || t('Select a currency')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), !disableCurrencySelect && /*#__PURE__*/_jsxDEV(ChevronDownIcon, {\n          color: \"textSubtle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CurrencyConverter, \"yVohHwYMunStfI9/E9yjgrJz6JA=\", false, function () {\n  return [useTranslation, useModal];\n});\n\n_c2 = CurrencyConverter;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CurrencySelectButton\");\n$RefreshReg$(_c2, \"CurrencyConverter\");","map":{"version":3,"sources":["D:/new/1TronicSwap-Build/src/components/_uikit/widgets/Menu/components/CurrencyConverter.tsx"],"names":["React","Button","ChevronDownIcon","Text","useModal","Flex","styled","useTranslation","CurrencySearchModal","CurrencyLogo","CurrencySelectButton","attrs","variant","scale","theme","colors","input","CurrencyConverter","onCurrencySelect","currency","conversionValue","disableCurrencySelect","showCommonBases","t","onPresentCurrencyModal","marginRight","symbol","length","slice"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,MAAT,EAAiBC,eAAjB,EAAkCC,IAAlC,EAAwCC,QAAxC,EAAkDC,IAAlD,QAA8D,mBAA9D;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,mBAAP,MAAgC,4CAAhC;AACA,SAASC,YAAT,QAA6B,kBAA7B;;AAEA,MAAMC,oBAAoB,GAAGJ,MAAM,CAACL,MAAD,CAAN,CAAeU,KAAf,CAAqB;AAAEC,EAAAA,OAAO,EAAE,MAAX;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAArB,CAAuD;AACpF;AACA;AACA,kBAAkB;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,SAAeA,KAAK,CAACC,MAAN,CAAaC,KAA5B;AAAA,CAAkC;AACpD;AACA;AACA,CANA;KAAMN,oB;AAcN,eAAe,SAASO,iBAAT,QAMY;AAAA;;AAAA,MANe;AACxCC,IAAAA,gBADwC;AAExCC,IAAAA,QAFwC;AAGxCC,IAAAA,eAHwC;AAIxCC,IAAAA,qBAAqB,GAAG,KAJgB;AAKxCC,IAAAA;AALwC,GAMf;AACzB,QAAM;AAAEC,IAAAA;AAAF,MAAQhB,cAAc,EAA5B;AAEA,QAAM,CAACiB,sBAAD,IAA2BpB,QAAQ,eACvC,QAAC,mBAAD;AACE,IAAA,gBAAgB,EAAEc,gBADpB;AAEE,IAAA,gBAAgB,EAAEC,QAFpB;AAGE,IAAA,eAAe,EAAEG;AAHnB;AAAA;AAAA;AAAA;AAAA,UADuC,CAAzC;AAOA,sBACE,QAAC,IAAD;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC,MAAZ;AAAmB,MAAA,UAAU,EAAC,MAA9B;AAAqC,MAAA,QAAQ,EAAC,MAA9C;AAAqD,MAAA,UAAU,EAAC,KAAhE;AAAsE,MAAA,MAAM,EAAC,MAA7E;AAAoF,MAAA,OAAO,EAAC,KAA5F;AAAA,iBAAmGF,eAAnG;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,oBAAD;AACE,MAAA,QAAQ,EAAE,CAAC,CAACD,QADd;AAEE,MAAA,SAAS,EAAC,6BAFZ;AAGE,MAAA,OAAO,EAAE,MAAM;AACb,YAAI,CAACE,qBAAL,EAA4B;AAC1BG,UAAAA,sBAAsB;AACvB;AACF,OAPH;AAAA,6BASE,QAAC,IAAD;AAAM,QAAA,UAAU,EAAC,QAAjB;AAA0B,QAAA,cAAc,EAAC,eAAzC;AAAA,mBACIL,QAAQ;AAAA;AACR;AACA,gBAAC,YAAD;AAAc,UAAA,QAAQ,EAAEA,QAAxB;AAAkC,UAAA,IAAI,EAAC,MAAvC;AAA8C,UAAA,KAAK,EAAE;AAAEM,YAAAA,WAAW,EAAE;AAAf;AAArD;AAAA;AAAA;AAAA;AAAA,gBAFQ,GAGN,IAJN,eAKE,QAAC,IAAD;AAAM,UAAA,KAAK,EAAC,MAAZ;AAAmB,UAAA,UAAU,EAAC,MAA9B;AAAqC,UAAA,QAAQ,EAAC,MAA9C;AAAqD,UAAA,UAAU,EAAC,KAAhE;AAAA,oBACG,CAACN,QAAQ,IAAIA,QAAQ,CAACO,MAArB,IAA+BP,QAAQ,CAACO,MAAT,CAAgBC,MAAhB,GAAyB,EAAxD,GACG,GAAER,QAAQ,CAACO,MAAT,CAAgBE,KAAhB,CAAsB,CAAtB,EAAyB,CAAzB,CAA4B,MAAKT,QAAQ,CAACO,MAAT,CAAgBE,KAAhB,CAClCT,QAAQ,CAACO,MAAT,CAAgBC,MAAhB,GAAyB,CADS,EAElCR,QAAQ,CAACO,MAAT,CAAgBC,MAFkB,CAGlC,EAJJ,GAKER,QALF,aAKEA,QALF,uBAKEA,QAAQ,CAAEO,MALb,KAKwBH,CAAC,CAAC,mBAAD;AAN5B;AAAA;AAAA;AAAA;AAAA,gBALF,EAaG,CAACF,qBAAD,iBAA0B,QAAC,eAAD;AAAiB,UAAA,KAAK,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAb7B;AAAA;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD;;GA9CuBJ,iB;UAORV,c,EAEmBH,Q;;;MATXa,iB","sourcesContent":["import React from 'react'\r\nimport { Currency, Token } from 'utils/@sdk'\r\nimport { Button, ChevronDownIcon, Text, useModal, Flex } from 'components/_uikit'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport CurrencySearchModal from 'components/SearchModal/CurrencySearchModal'\r\nimport { CurrencyLogo } from '../../../../Logo'\r\n\r\nconst CurrencySelectButton = styled(Button).attrs({ variant: 'text', scale: 'sm' })`\r\n  padding: 0 0.5rem;\r\n  border: 1px solid;\r\n  border-color: ${({ theme }) => theme.colors.input};\r\n  margin-right: 12px;\r\n  margin-left: 12px;\r\n`\r\ninterface CurrencyConverterProps {\r\n  onCurrencySelect: (currency: Currency) => void\r\n  currency?: Token | null\r\n  conversionValue?: string | number\r\n  disableCurrencySelect?: boolean\r\n  showCommonBases?: boolean\r\n}\r\nexport default function CurrencyConverter({\r\n  onCurrencySelect,\r\n  currency,\r\n  conversionValue,\r\n  disableCurrencySelect = false,\r\n  showCommonBases,\r\n}: CurrencyConverterProps) {\r\n  const { t } = useTranslation()\r\n\r\n  const [onPresentCurrencyModal] = useModal(\r\n    <CurrencySearchModal\r\n      onCurrencySelect={onCurrencySelect}\r\n      selectedCurrency={currency}\r\n      showCommonBases={showCommonBases}\r\n    />,\r\n  )\r\n  return (\r\n    <Flex>\r\n      <Text color=\"text\" lineHeight=\"24px\" fontSize=\"12px\" fontWeight=\"600\" margin=\"auto\" padding=\"2px\">{conversionValue}  TRC</Text>\r\n      <CurrencySelectButton\r\n        selected={!!currency}\r\n        className=\"open-currency-select-button\"\r\n        onClick={() => {\r\n          if (!disableCurrencySelect) {\r\n            onPresentCurrencyModal()\r\n          }\r\n        }}\r\n      >\r\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n          { currency ? (\r\n            // <ListLogo size=\"40px\" style={{ marginRight: '1rem' }} logoURI={currency.address} alt={`${currency.name} list logo`} />\r\n            <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\r\n          ) : null}        \r\n          <Text color=\"text\" lineHeight=\"24px\" fontSize=\"12px\" fontWeight=\"600\">\r\n            {(currency && currency.symbol && currency.symbol.length > 20\r\n              ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\r\n                  currency.symbol.length - 5,\r\n                  currency.symbol.length,\r\n                )}`\r\n              : currency?.symbol) || t('Select a currency')}\r\n          </Text>\r\n          {!disableCurrencySelect && <ChevronDownIcon color=\"textSubtle\"/>}\r\n        </Flex>\r\n      </CurrencySelectButton>\r\n    </Flex>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}