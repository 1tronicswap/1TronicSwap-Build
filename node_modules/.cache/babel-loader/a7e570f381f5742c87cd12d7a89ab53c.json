{"ast":null,"code":"var _jsxFileName = \"D:\\\\new\\\\1TronicSwap-Build\\\\src\\\\views\\\\TradingCompetition\\\\components\\\\Countdown\\\\Timer.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Flex, Heading, Text, Link, useTooltip } from 'components/_uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { getBscScanLink } from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledTimerFlex = styled(Flex)`\n  ${_ref => {\n  let {\n    theme,\n    showTooltip\n  } = _ref;\n  return showTooltip ? ` border-bottom: 1px dashed ${theme.colors.textSubtle};` : ``;\n}}\n  div:last-of-type {\n    margin-right: 0;\n  }\n`;\n_c = StyledTimerFlex;\n\nconst Timer = _ref2 => {\n  _s();\n\n  let {\n    minutes,\n    hours,\n    days,\n    showTooltip,\n    HeadingTextComponent,\n    BodyTextComponent\n  } = _ref2;\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/_jsxDEV(StyledTimerFlex, {\n    alignItems: \"flex-end\",\n    showTooltip: showTooltip,\n    children: [Boolean(days) && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(HeadingTextComponent, {\n        mr: \"2px\",\n        children: days\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(BodyTextComponent, {\n        mr: \"16px\",\n        children: t('d')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), Boolean(hours) && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(HeadingTextComponent, {\n        mr: \"2px\",\n        children: hours\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(BodyTextComponent, {\n        mr: \"16px\",\n        children: t('h')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), Boolean(minutes) && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(HeadingTextComponent, {\n        mr: \"2px\",\n        children: minutes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(BodyTextComponent, {\n        children: t('m')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Timer, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c2 = Timer;\n\nconst DefaultHeadingTextComponent = _ref3 => {\n  let {\n    children,\n    ...props\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(Heading, {\n    scale: \"lg\",\n    ...props,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 3\n  }, this);\n};\n\n_c3 = DefaultHeadingTextComponent;\n\nconst DefaultBodyTextComponent = _ref4 => {\n  let {\n    children,\n    ...props\n  } = _ref4;\n  return /*#__PURE__*/_jsxDEV(Text, {\n    fontSize: \"16px\",\n    fontWeight: \"600\",\n    ...props,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 3\n  }, this);\n};\n\n_c4 = DefaultBodyTextComponent;\n\nconst TooltipContent = _ref5 => {\n  let {\n    blockNumber,\n    t\n  } = _ref5;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      color: \"body\",\n      mb: \"10px\",\n      fontWeight: \"600\",\n      children: t('Block %num%', {\n        num: blockNumber\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      external: true,\n      href: getBscScanLink(blockNumber, 'block'),\n      children: t('View on BscScan')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_c5 = TooltipContent;\n\nconst Wrapper = _ref6 => {\n  _s2();\n\n  let {\n    prefix,\n    suffix,\n    minutes,\n    hours,\n    days,\n    blockNumber,\n    showTooltip = false,\n    HeadingTextComponent = DefaultHeadingTextComponent,\n    BodyTextComponent = DefaultBodyTextComponent\n  } = _ref6;\n  const {\n    t\n  } = useTranslation();\n  const {\n    targetRef,\n    tooltip,\n    tooltipVisible\n  } = useTooltip( /*#__PURE__*/_jsxDEV(TooltipContent, {\n    blockNumber: blockNumber,\n    t: t\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 61\n  }, this), {\n    placement: 'bottom'\n  });\n  const shouldDisplayTooltip = showTooltip && tooltipVisible;\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    alignItems: \"flex-end\",\n    position: \"relative\",\n    children: [prefix && /*#__PURE__*/_jsxDEV(BodyTextComponent, {\n      mr: \"16px\",\n      children: prefix\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: targetRef,\n      children: [/*#__PURE__*/_jsxDEV(Timer, {\n        minutes: minutes,\n        hours: hours,\n        days: days,\n        HeadingTextComponent: HeadingTextComponent,\n        BodyTextComponent: BodyTextComponent,\n        showTooltip: showTooltip\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), shouldDisplayTooltip && tooltip]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), suffix && /*#__PURE__*/_jsxDEV(BodyTextComponent, {\n      ml: \"16px\",\n      children: suffix\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Wrapper, \"GSMeUTDR148KmhQO/xuGuRK/xHM=\", false, function () {\n  return [useTranslation, useTooltip];\n});\n\n_c6 = Wrapper;\nexport default Wrapper;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"StyledTimerFlex\");\n$RefreshReg$(_c2, \"Timer\");\n$RefreshReg$(_c3, \"DefaultHeadingTextComponent\");\n$RefreshReg$(_c4, \"DefaultBodyTextComponent\");\n$RefreshReg$(_c5, \"TooltipContent\");\n$RefreshReg$(_c6, \"Wrapper\");","map":{"version":3,"sources":["D:/new/1TronicSwap-Build/src/views/TradingCompetition/components/Countdown/Timer.tsx"],"names":["React","styled","Flex","Heading","Text","Link","useTooltip","useTranslation","getBscScanLink","StyledTimerFlex","theme","showTooltip","colors","textSubtle","Timer","minutes","hours","days","HeadingTextComponent","BodyTextComponent","t","Boolean","DefaultHeadingTextComponent","children","props","DefaultBodyTextComponent","TooltipContent","blockNumber","num","Wrapper","prefix","suffix","targetRef","tooltip","tooltipVisible","placement","shouldDisplayTooltip"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Heading, Text, Link, useTooltip } from 'components/_uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { ContextApi } from 'contexts/Localization/types'\r\nimport { getBscScanLink } from 'utils'\r\n\r\nexport interface TimerProps {\r\n  prefix?: string\r\n  suffix?: string\r\n  minutes?: number\r\n  hours?: number\r\n  days?: number\r\n  showTooltip?: boolean\r\n  blockNumber?: number\r\n  HeadingTextComponent?: React.ElementType\r\n  BodyTextComponent?: React.ElementType\r\n}\r\n\r\nconst StyledTimerFlex = styled(Flex)<{ showTooltip?: boolean }>`\r\n  ${({ theme, showTooltip }) => (showTooltip ? ` border-bottom: 1px dashed ${theme.colors.textSubtle};` : ``)}\r\n  div:last-of-type {\r\n    margin-right: 0;\r\n  }\r\n`\r\n\r\nconst Timer = ({ minutes, hours, days, showTooltip, HeadingTextComponent, BodyTextComponent }) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <StyledTimerFlex alignItems=\"flex-end\" showTooltip={showTooltip}>\r\n      {Boolean(days) && (\r\n        <>\r\n          <HeadingTextComponent mr=\"2px\">{days}</HeadingTextComponent>\r\n          <BodyTextComponent mr=\"16px\">{t('d')}</BodyTextComponent>\r\n        </>\r\n      )}\r\n      {Boolean(hours) && (\r\n        <>\r\n          <HeadingTextComponent mr=\"2px\">{hours}</HeadingTextComponent>\r\n          <BodyTextComponent mr=\"16px\">{t('h')}</BodyTextComponent>\r\n        </>\r\n      )}\r\n      {Boolean(minutes) && (\r\n        <>\r\n          <HeadingTextComponent mr=\"2px\">{minutes}</HeadingTextComponent>\r\n          <BodyTextComponent>{t('m')}</BodyTextComponent>\r\n        </>\r\n      )}\r\n    </StyledTimerFlex>\r\n  )\r\n}\r\n\r\nconst DefaultHeadingTextComponent = ({ children, ...props }) => (\r\n  <Heading scale=\"lg\" {...props}>\r\n    {children}\r\n  </Heading>\r\n)\r\nconst DefaultBodyTextComponent = ({ children, ...props }) => (\r\n  <Text fontSize=\"16px\" fontWeight=\"600\" {...props}>\r\n    {children}\r\n  </Text>\r\n)\r\n\r\nconst TooltipContent = ({ blockNumber, t }: { blockNumber: number; t: ContextApi['t'] }): JSX.Element => (\r\n  <>\r\n    <Text color=\"body\" mb=\"10px\" fontWeight=\"600\">\r\n      {t('Block %num%', { num: blockNumber })}\r\n    </Text>\r\n    <Link external href={getBscScanLink(blockNumber, 'block')}>\r\n      {t('View on BscScan')}\r\n    </Link>\r\n  </>\r\n)\r\n\r\nconst Wrapper: React.FC<TimerProps> = ({\r\n  prefix,\r\n  suffix,\r\n  minutes,\r\n  hours,\r\n  days,\r\n  blockNumber,\r\n  showTooltip = false,\r\n  HeadingTextComponent = DefaultHeadingTextComponent,\r\n  BodyTextComponent = DefaultBodyTextComponent,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipContent blockNumber={blockNumber} t={t} />, {\r\n    placement: 'bottom',\r\n  })\r\n  const shouldDisplayTooltip = showTooltip && tooltipVisible\r\n  return (\r\n    <Flex alignItems=\"flex-end\" position=\"relative\">\r\n      {prefix && <BodyTextComponent mr=\"16px\">{prefix}</BodyTextComponent>}\r\n      <div ref={targetRef}>\r\n        <Timer\r\n          minutes={minutes}\r\n          hours={hours}\r\n          days={days}\r\n          HeadingTextComponent={HeadingTextComponent}\r\n          BodyTextComponent={BodyTextComponent}\r\n          showTooltip={showTooltip}\r\n        />\r\n        {shouldDisplayTooltip && tooltip}\r\n      </div>\r\n      {suffix && <BodyTextComponent ml=\"16px\">{suffix}</BodyTextComponent>}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default Wrapper\r\n"]},"metadata":{},"sourceType":"module"}