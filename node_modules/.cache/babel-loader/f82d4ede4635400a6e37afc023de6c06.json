{"ast":null,"code":"var _jsxFileName = \"D:\\\\new\\\\1TronicSwap-Build\\\\src\\\\components\\\\_uikit\\\\widgets\\\\Menu\\\\components\\\\Logo.tsx\";\nimport React from \"react\";\nimport Flex from \"../../../components/Box/Flex\";\nimport { HamburgerIcon, HamburgerCloseIcon } from \"../icons\";\nimport MenuButton from \"./MenuButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Logo = _ref => {\n  let {\n    isPushed,\n    togglePush\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    children: /*#__PURE__*/_jsxDEV(MenuButton, {\n      \"aria-label\": \"Toggle menu\",\n      onClick: togglePush,\n      size: \"sm\",\n      children: isPushed ? /*#__PURE__*/_jsxDEV(HamburgerCloseIcon, {\n        width: \"24px\",\n        color: \"textSubtle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(HamburgerIcon, {\n        width: \"24px\",\n        color: \"textSubtle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Logo;\nexport default _c2 = /*#__PURE__*/React.memo(Logo, (prev, next) => prev.isPushed === next.isPushed && prev.isDark === next.isDark);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Logo\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/new/1TronicSwap-Build/src/components/_uikit/widgets/Menu/components/Logo.tsx"],"names":["React","Flex","HamburgerIcon","HamburgerCloseIcon","MenuButton","Logo","isPushed","togglePush","memo","prev","next","isDark"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,8BAAjB;AACA,SAASC,aAAT,EAAwBC,kBAAxB,QAAkD,UAAlD;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AASA,MAAMC,IAAqB,GAAG,QAA8B;AAAA,MAA7B;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAA6B;AAC1D,sBACE,QAAC,IAAD;AAAA,2BACE,QAAC,UAAD;AAAY,oBAAW,aAAvB;AAAqC,MAAA,OAAO,EAAEA,UAA9C;AAA0D,MAAA,IAAI,EAAC,IAA/D;AAAA,gBACGD,QAAQ,gBACP,QAAC,kBAAD;AAAoB,QAAA,KAAK,EAAC,MAA1B;AAAiC,QAAA,KAAK,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,cADO,gBAGP,QAAC,aAAD;AAAe,QAAA,KAAK,EAAC,MAArB;AAA4B,QAAA,KAAK,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAZD;;KAAMD,I;AAcN,kCAAeL,KAAK,CAACQ,IAAN,CAAWH,IAAX,EAAiB,CAACI,IAAD,EAAOC,IAAP,KAAgBD,IAAI,CAACH,QAAL,KAAkBI,IAAI,CAACJ,QAAvB,IAAmCG,IAAI,CAACE,MAAL,KAAgBD,IAAI,CAACC,MAAzF,CAAf","sourcesContent":["import React from \"react\";\r\nimport Flex from \"../../../components/Box/Flex\";\r\nimport { HamburgerIcon, HamburgerCloseIcon } from \"../icons\";\r\nimport MenuButton from \"./MenuButton\";\r\n\r\ninterface Props {\r\n  isPushed: boolean;\r\n  isDark: boolean;\r\n  togglePush: () => void;\r\n  href: string;\r\n}\r\n\r\nconst Logo: React.FC<Props> = ({ isPushed, togglePush }) => {\r\n  return (\r\n    <Flex>\r\n      <MenuButton aria-label=\"Toggle menu\" onClick={togglePush} size=\"sm\">         \r\n        {isPushed ? (\r\n          <HamburgerCloseIcon width=\"24px\" color=\"textSubtle\" />\r\n        ) : (\r\n          <HamburgerIcon width=\"24px\" color=\"textSubtle\" />\r\n        )}\r\n      </MenuButton>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default React.memo(Logo, (prev, next) => prev.isPushed === next.isPushed && prev.isDark === next.isDark);\r\n"]},"metadata":{},"sourceType":"module"}