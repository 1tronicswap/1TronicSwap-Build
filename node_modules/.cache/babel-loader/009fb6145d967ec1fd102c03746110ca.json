{"ast":null,"code":"var _jsxFileName = \"D:\\\\new\\\\1TronicSwap-Build\\\\src\\\\views\\\\Lottery\\\\components\\\\PreviousRoundCard\\\\Body.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { CardBody, Heading, Flex, Skeleton, Text, Box, Button, useModal } from 'components/_uikit';\nimport { useGetUserLotteriesGraphData } from 'state/lottery/hooks';\nimport { useTranslation } from 'contexts/Localization';\nimport WinningNumbers from '../WinningNumbers';\nimport ViewTicketsModal from '../ViewTicketsModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PreviousRoundCardBody = _ref => {\n  _s();\n\n  let {\n    lotteryData,\n    lotteryId\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  const [onPresentViewTicketsModal] = useModal( /*#__PURE__*/_jsxDEV(ViewTicketsModal, {\n    roundId: lotteryId,\n    roundStatus: lotteryData === null || lotteryData === void 0 ? void 0 : lotteryData.status\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this));\n  const userLotteryData = useGetUserLotteriesGraphData();\n  const userDataForRound = userLotteryData.rounds.find(userLotteryRound => userLotteryRound.lotteryId === lotteryId);\n  return /*#__PURE__*/_jsxDEV(CardBody, {\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        mb: \"24px\",\n        children: t('Winning Number')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), lotteryData ? /*#__PURE__*/_jsxDEV(WinningNumbers, {\n        number: lotteryData === null || lotteryData === void 0 ? void 0 : lotteryData.finalNumber.toString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Skeleton, {\n        width: \"240px\",\n        height: \"34px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), userDataForRound && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          mt: \"32px\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            display: \"inline\",\n            children: [t('You had'), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            display: \"inline\",\n            bold: true,\n            children: [userDataForRound.totalTickets, \" \", t('tickets'), ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            display: \"inline\",\n            children: t('this round')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: onPresentViewTicketsModal,\n          height: \"auto\",\n          width: \"fit-content\",\n          p: \"0\",\n          mb: ['32px', null, null, '0'],\n          variant: \"text\",\n          scale: \"sm\",\n          children: t('View your tickets')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PreviousRoundCardBody, \"oEr0sgqpUYfHUB/p7pj2foRU1rA=\", false, function () {\n  return [useTranslation, useModal, useGetUserLotteriesGraphData];\n});\n\n_c = PreviousRoundCardBody;\nexport default PreviousRoundCardBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"PreviousRoundCardBody\");","map":{"version":3,"sources":["D:/new/1TronicSwap-Build/src/views/Lottery/components/PreviousRoundCard/Body.tsx"],"names":["React","CardBody","Heading","Flex","Skeleton","Text","Box","Button","useModal","useGetUserLotteriesGraphData","useTranslation","WinningNumbers","ViewTicketsModal","PreviousRoundCardBody","lotteryData","lotteryId","t","onPresentViewTicketsModal","status","userLotteryData","userDataForRound","rounds","find","userLotteryRound","finalNumber","toString","totalTickets"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { CardBody, Heading, Flex, Skeleton, Text, Box, Button, useModal } from 'components/_uikit'\r\nimport { LotteryRound } from 'state/types'\r\nimport { useGetUserLotteriesGraphData } from 'state/lottery/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport WinningNumbers from '../WinningNumbers'\r\nimport ViewTicketsModal from '../ViewTicketsModal'\r\n\r\nconst PreviousRoundCardBody: React.FC<{ lotteryData: LotteryRound; lotteryId: string }> = ({\r\n  lotteryData,\r\n  lotteryId,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const [onPresentViewTicketsModal] = useModal(\r\n    <ViewTicketsModal roundId={lotteryId} roundStatus={lotteryData?.status} />,\r\n  )\r\n  const userLotteryData = useGetUserLotteriesGraphData()\r\n  const userDataForRound = userLotteryData.rounds.find((userLotteryRound) => userLotteryRound.lotteryId === lotteryId)\r\n\r\n  return (\r\n    <CardBody>\r\n      <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\r\n        <Heading mb=\"24px\">{t('Winning Number')}</Heading>\r\n        {lotteryData ? (\r\n          <WinningNumbers number={lotteryData?.finalNumber.toString()} />\r\n        ) : (\r\n          <Skeleton width=\"240px\" height=\"34px\" />\r\n        )}\r\n        {userDataForRound && (\r\n          <>\r\n            <Box mt=\"32px\">\r\n              <Text display=\"inline\">{t('You had')} </Text>\r\n              <Text display=\"inline\" bold>\r\n                {userDataForRound.totalTickets} {t('tickets')}{' '}\r\n              </Text>\r\n              <Text display=\"inline\">{t('this round')}</Text>\r\n            </Box>\r\n            <Button\r\n              onClick={onPresentViewTicketsModal}\r\n              height=\"auto\"\r\n              width=\"fit-content\"\r\n              p=\"0\"\r\n              mb={['32px', null, null, '0']}\r\n              variant=\"text\"\r\n              scale=\"sm\"\r\n            >\r\n              {t('View your tickets')}\r\n            </Button>\r\n          </>\r\n        )}\r\n      </Flex>\r\n    </CardBody>\r\n  )\r\n}\r\n\r\nexport default PreviousRoundCardBody\r\n"]},"metadata":{},"sourceType":"module"}