{"ast":null,"code":"var _jsxFileName = \"D:\\\\new\\\\1TronicSwap-Build\\\\src\\\\components\\\\_uikit\\\\widgets\\\\Modal\\\\styles.tsx\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Flex from \"../../components/Box/Flex\";\nimport { Box } from \"../../components/Box\";\nimport { ArrowBackIcon, CloseIcon } from \"../../components/Svg\";\nimport { IconButton } from \"../../components/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ModalHeader = styled.div`\n  align-items: center;\n  background: ${_ref => {\n  let {\n    background\n  } = _ref;\n  return background || \"transparent\";\n}};\n  display: flex;\n  padding: 24px 24px 0 24px;\n  justify-content: space-between;\n`;\nexport const ModalTitle = styled(Flex)`\n  align-items: center;\n  flex: 1;\n`;\nexport const ModalBody = styled(Flex)`\n  flex-direction: column;\n  max-height: 90vh;\n  overflow-y: auto;\n`;\nexport const CloseButtonContainer = styled.div`\n  position: fixed;\n  top: 40px;\n  right: 40px;\n  height: 40px;\n  border-radius: ${_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return theme.radii.circle;\n}};\n  background: ${_ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return theme.colors.contrast;\n}};\n`;\n_c = CloseButtonContainer;\nexport const ModalCloseButton = _ref4 => {\n  let {\n    onDismiss\n  } = _ref4;\n  return /*#__PURE__*/_jsxDEV(CloseButtonContainer, {\n    children: /*#__PURE__*/_jsxDEV(IconButton, {\n      variant: \"text\",\n      onClick: onDismiss,\n      \"aria-label\": \"Close the dialog\",\n      children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n        color: \"background\",\n        width: \"36px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_c2 = ModalCloseButton;\nexport const ModalBackButton = _ref5 => {\n  let {\n    onBack\n  } = _ref5;\n  return /*#__PURE__*/_jsxDEV(IconButton, {\n    variant: \"text\",\n    onClick: onBack,\n    \"area-label\": \"go back\",\n    mr: \"8px\",\n    children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {\n      color: \"background\",\n      width: \"36px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_c3 = ModalBackButton;\nexport const ModalContainer = styled(Box)`\n  overflow: hidden;\n  background: ${_ref6 => {\n  let {\n    theme\n  } = _ref6;\n  return theme.modal.background;\n}};\n  box-shadow: 0px 20px 36px -8px rgba(14, 14, 44, 0.1), 0px 1px 1px rgba(0, 0, 0, 0.05);\n  border: 1px solid ${_ref7 => {\n  let {\n    theme\n  } = _ref7;\n  return theme.colors.cardBorder;\n}};\n  border-radius: 8px;\n  width: 100%;\n  max-height: 100vh;\n  z-index: ${_ref8 => {\n  let {\n    theme\n  } = _ref8;\n  return theme.zIndices.modal;\n}};\n\n  ${_ref9 => {\n  let {\n    theme\n  } = _ref9;\n  return theme.mediaQueries.xs;\n}} {\n    width: auto;\n    min-width: ${_ref10 => {\n  let {\n    minWidth\n  } = _ref10;\n  return minWidth;\n}};\n    max-width: 100%;\n  }\n`;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CloseButtonContainer\");\n$RefreshReg$(_c2, \"ModalCloseButton\");\n$RefreshReg$(_c3, \"ModalBackButton\");","map":{"version":3,"sources":["D:/new/1TronicSwap-Build/src/components/_uikit/widgets/Modal/styles.tsx"],"names":["React","styled","Flex","Box","ArrowBackIcon","CloseIcon","IconButton","ModalHeader","div","background","ModalTitle","ModalBody","CloseButtonContainer","theme","radii","circle","colors","contrast","ModalCloseButton","onDismiss","ModalBackButton","onBack","ModalContainer","modal","cardBorder","zIndices","mediaQueries","xs","minWidth"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Flex from \"../../components/Box/Flex\";\r\nimport { Box } from \"../../components/Box\";\r\nimport { ArrowBackIcon, CloseIcon } from \"../../components/Svg\";\r\nimport { IconButton } from \"../../components/Button\";\r\nimport { ModalProps } from \"./types\";\r\n\r\nexport const ModalHeader = styled.div<{ background?: string }>`\r\n  align-items: center;\r\n  background: ${({ background }) => background || \"transparent\"};\r\n  display: flex;\r\n  padding: 24px 24px 0 24px;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const ModalTitle = styled(Flex)`\r\n  align-items: center;\r\n  flex: 1;\r\n`;\r\n\r\nexport const ModalBody = styled(Flex)`\r\n  flex-direction: column;\r\n  max-height: 90vh;\r\n  overflow-y: auto;\r\n`;\r\nexport const CloseButtonContainer = styled.div`\r\n  position: fixed;\r\n  top: 40px;\r\n  right: 40px;\r\n  height: 40px;\r\n  border-radius: ${({ theme }) => theme.radii.circle};\r\n  background: ${({ theme }) => theme.colors.contrast};\r\n`;\r\n\r\nexport const ModalCloseButton: React.FC<{ onDismiss: ModalProps[\"onDismiss\"] }> = ({ onDismiss }) => {\r\n  return (\r\n    <CloseButtonContainer>\r\n      <IconButton variant=\"text\" onClick={onDismiss} aria-label=\"Close the dialog\">\r\n        <CloseIcon color=\"background\" width=\"36px\"/>\r\n      </IconButton>\r\n    </CloseButtonContainer>\r\n  );\r\n};\r\n\r\nexport const ModalBackButton: React.FC<{ onBack: ModalProps[\"onBack\"] }> = ({ onBack }) => {\r\n  return (\r\n    <IconButton variant=\"text\" onClick={onBack} area-label=\"go back\" mr=\"8px\">\r\n      <ArrowBackIcon color=\"background\" width=\"36px\"/>\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport const ModalContainer = styled(Box)<{ minWidth: string }>`\r\n  overflow: hidden;\r\n  background: ${({ theme }) => theme.modal.background};\r\n  box-shadow: 0px 20px 36px -8px rgba(14, 14, 44, 0.1), 0px 1px 1px rgba(0, 0, 0, 0.05);\r\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n  border-radius: 8px;\r\n  width: 100%;\r\n  max-height: 100vh;\r\n  z-index: ${({ theme }) => theme.zIndices.modal};\r\n\r\n  ${({ theme }) => theme.mediaQueries.xs} {\r\n    width: auto;\r\n    min-width: ${({ minWidth }) => minWidth};\r\n    max-width: 100%;\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}