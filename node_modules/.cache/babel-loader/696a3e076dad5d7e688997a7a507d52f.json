{"ast":null,"code":"var _jsxFileName = \"D:\\\\new\\\\1TronicSwap-Build\\\\src\\\\views\\\\Home\\\\components\\\\StakingCard.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Card, CardBody } from 'components/_uikit';\nimport { NavLink } from 'react-router-dom';\nimport { useWeb3React } from '@web3-react/core';\nimport { useTranslation } from 'contexts/Localization';\nimport useFarmsWithBalance from 'views/Home/hooks/useFarmsWithBalance';\nimport CakeHarvestBalance from './CakeHarvestBalance';\nimport CardText from './CardText';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledStakingCard = styled(Card)`\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n  min-height: 104px;\n`;\n_c = StyledStakingCard;\nconst Block = styled.div`\n`;\n_c2 = Block;\n\nconst FarmedStakingCard = () => {\n  _s();\n\n  const {\n    account\n  } = useWeb3React();\n  const {\n    t\n  } = useTranslation();\n  const farmsWithBalance = useFarmsWithBalance();\n  const balancesWithValue = farmsWithBalance.filter(balanceType => balanceType.balance.gt(0));\n  return /*#__PURE__*/_jsxDEV(StyledStakingCard, {\n    children: account ? /*#__PURE__*/_jsxDEV(NavLink, {\n      exact: true,\n      activeClassName: \"active\",\n      to: \"/pools\",\n      id: \"farm-apr-cta\",\n      children: /*#__PURE__*/_jsxDEV(CardBody, {\n        children: /*#__PURE__*/_jsxDEV(Block, {\n          children: [/*#__PURE__*/_jsxDEV(CardText, {\n            fontSize: \"14px\",\n            lineHeight: \"1.1\",\n            color: \"textSubtle\",\n            bold: false,\n            text: t('Coin to Harvest')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CakeHarvestBalance, {\n            farmsWithBalance: balancesWithValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(CardBody, {\n      children: /*#__PURE__*/_jsxDEV(Block, {\n        children: [/*#__PURE__*/_jsxDEV(CardText, {\n          fontSize: \"14px\",\n          lineHeight: \"1.1\",\n          color: \"textSubtle\",\n          bold: false,\n          text: t('Coin to Harvest')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CakeHarvestBalance, {\n          farmsWithBalance: balancesWithValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FarmedStakingCard, \"Ims4Vt4X7whvjkTIiHKZ73rIVak=\", false, function () {\n  return [useWeb3React, useTranslation, useFarmsWithBalance];\n});\n\n_c3 = FarmedStakingCard;\nexport default FarmedStakingCard;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledStakingCard\");\n$RefreshReg$(_c2, \"Block\");\n$RefreshReg$(_c3, \"FarmedStakingCard\");","map":{"version":3,"sources":["D:/new/1TronicSwap-Build/src/views/Home/components/StakingCard.tsx"],"names":["React","styled","Card","CardBody","NavLink","useWeb3React","useTranslation","useFarmsWithBalance","CakeHarvestBalance","CardText","StyledStakingCard","Block","div","FarmedStakingCard","account","t","farmsWithBalance","balancesWithValue","filter","balanceType","balance","gt"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,mBAA/B;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,mBAAP,MAAgC,sCAAhC;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,iBAAiB,GAAGT,MAAM,CAACC,IAAD,CAAO;AACvC;AACA;AACA;AACA;AACA,CALA;KAAMQ,iB;AAON,MAAMC,KAAK,GAAGV,MAAM,CAACW,GAAI;AACzB,CADA;MAAMD,K;;AAGN,MAAME,iBAAiB,GAAG,MAAM;AAAA;;AAC9B,QAAM;AAAEC,IAAAA;AAAF,MAAcT,YAAY,EAAhC;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAQT,cAAc,EAA5B;AACA,QAAMU,gBAAgB,GAAGT,mBAAmB,EAA5C;AACA,QAAMU,iBAAiB,GAAGD,gBAAgB,CAACE,MAAjB,CAAyBC,WAAD,IAAiBA,WAAW,CAACC,OAAZ,CAAoBC,EAApB,CAAuB,CAAvB,CAAzC,CAA1B;AAEA,sBACE,QAAC,iBAAD;AAAA,cACIP,OAAO,gBACP,QAAC,OAAD;AAAS,MAAA,KAAK,MAAd;AAAe,MAAA,eAAe,EAAC,QAA/B;AAAwC,MAAA,EAAE,EAAC,QAA3C;AAAoD,MAAA,EAAE,EAAC,cAAvD;AAAA,6BACE,QAAC,QAAD;AAAA,+BACE,QAAC,KAAD;AAAA,kCACE,QAAC,QAAD;AAAU,YAAA,QAAQ,EAAC,MAAnB;AAA0B,YAAA,UAAU,EAAC,KAArC;AAA2C,YAAA,KAAK,EAAC,YAAjD;AAA8D,YAAA,IAAI,EAAE,KAApE;AAA2E,YAAA,IAAI,EAAEC,CAAC,CAAC,iBAAD;AAAlF;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,kBAAD;AAAoB,YAAA,gBAAgB,EAAEE;AAAtC;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADO,gBAUP,QAAC,QAAD;AAAA,6BACE,QAAC,KAAD;AAAA,gCACE,QAAC,QAAD;AAAU,UAAA,QAAQ,EAAC,MAAnB;AAA0B,UAAA,UAAU,EAAC,KAArC;AAA2C,UAAA,KAAK,EAAC,YAAjD;AAA8D,UAAA,IAAI,EAAE,KAApE;AAA2E,UAAA,IAAI,EAAEF,CAAC,CAAC,iBAAD;AAAlF;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,kBAAD;AAAoB,UAAA,gBAAgB,EAAEE;AAAtC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAXJ;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA3BD;;GAAMJ,iB;UACgBR,Y,EACNC,c,EACWC,mB;;;MAHrBM,iB;AA6BN,eAAeA,iBAAf","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody } from 'components/_uikit'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useFarmsWithBalance from 'views/Home/hooks/useFarmsWithBalance'\r\nimport CakeHarvestBalance from './CakeHarvestBalance'\r\nimport CardText from './CardText'\r\n\r\nconst StyledStakingCard = styled(Card)`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  width: 100%;\r\n  min-height: 104px;\r\n`\r\n\r\nconst Block = styled.div`\r\n`\r\n\r\nconst FarmedStakingCard = () => {\r\n  const { account } = useWeb3React()\r\n  const { t } = useTranslation()\r\n  const farmsWithBalance = useFarmsWithBalance()\r\n  const balancesWithValue = farmsWithBalance.filter((balanceType) => balanceType.balance.gt(0))\r\n\r\n  return (\r\n    <StyledStakingCard>\r\n      { account ? (\r\n        <NavLink exact activeClassName=\"active\" to=\"/pools\" id=\"farm-apr-cta\">\r\n          <CardBody>\r\n            <Block>\r\n              <CardText fontSize=\"14px\" lineHeight=\"1.1\" color=\"textSubtle\" bold={false} text={t('Coin to Harvest')}/>\r\n              <CakeHarvestBalance farmsWithBalance={balancesWithValue} />\r\n            </Block>\r\n          </CardBody>\r\n        </NavLink>\r\n      ) : (\r\n        <CardBody>\r\n          <Block>\r\n            <CardText fontSize=\"14px\" lineHeight=\"1.1\" color=\"textSubtle\" bold={false} text={t('Coin to Harvest')}/>\r\n            <CakeHarvestBalance farmsWithBalance={balancesWithValue} />\r\n          </Block>\r\n        </CardBody>\r\n      )}\r\n    </StyledStakingCard>\r\n  )\r\n}\r\n\r\nexport default FarmedStakingCard\r\n"]},"metadata":{},"sourceType":"module"}